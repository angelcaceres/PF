%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: PueblaAngel.dvi
%%CreationDate: Mon Jul  8 03:08:52 2019
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 2594 3402
%%DocumentFonts: CMCSC10 CMR17 CMMI12 CMTI12 MSBM10 CMSY10 CMEX10 CMR12
%%+ CMBX12 Helvetica
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips PueblaAngel.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2019.07.07:2208
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: ./a0header.ps 0 0
%%BeginFeature *PageSize ISOA0/ISO A0
2 dict dup /PageSize [2594 3370] put dup /ImagingBBox null put
setpagedevice
%%EndFeature

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.0: CMCSC10 003.002
%%Title: CMCSC10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMCSC10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMCSC10 known{/CMCSC10 findfont dup/UniqueID known{dup
/UniqueID get 5087402 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMCSC10 def
/FontBBox {14 -250 1077 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMCSC10.) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dotlessi put
dup 19 /acute put
dup 46 /period put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 77 /M put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BB89566A9BDEC70EB4F2
048A6EB631F05C014D372103E37FC3FA317EBC9973565A638403DA02E48B7D31
CFF6C241DC5CDB470561002FF46437C06EF93BC99352DF04393C661FFFBF4BA2
0723ABD9B3E9CA9E63BA57EFDBAE684655CBBDBA15ADAE43E1A2C98A3CF060A3
D16AF8FE3A49B50A24C20EEED716E49AF6013D4D38CD9CC41A91C17E4D04D79D
567E1EF49110AA9C34464E95D81A730ECEB2C9AF38FBA6B45E253288438B4CB3
DC75B3A906D4357293BA41E59C35223A6C9CBD6FF5FC90C2D07CBB376C7320FF
435A6251822BFCBB612CE630EDF826C37E95F541C21B93FCE127591D5E38165E
2B58A34AAE37712BC58B63FFD70AB80F4F24612CFD2F1466BAAF3CA2BCB45148
D0DEA0E9B8FBA4C4FF5B8B3CB02E461355051842BD1C94F41066B9B909DB83B1
DCDCBEF7CD00A43E4C0B8191A29600CA197F0BA227FB8309BB539D2A620BAC70
8A1AB2DFA51ADC9873B8E5582DCD3ED154E5D727D1665F99BD89883D69E6CC2F
DB3A57AEB612171A88E22F038461DE03FC357F771675E34E90D4D19B4B36891C
9D2333960400E97494F4FC4DBCE6A73C34A0409E433BBDC0AAAEBA7D3555066E
1CFBB4515C8B573C9B9DD12ED5B6ECEBE35AD0DDEA9DB004FC6CB540B5117B49
59CABE5FD74C6F5B6482B42C20B5FF0467D1DBD7CED2CC651CA57852B6FBB402
A6764DB342889132C911CAA713A7F2FDD8A5E849345D6C81025E02F5B8B682BA
90CC9B467FBC37362436EA6BF8EB62D784B01D5430147945BC09D1F49EE89F2E
3E2B8E6D439248A56F82F2E03EA5C7A922F2813BE6538A3A423BEBC55B345AFB
3B3C125306749E137C647D78028AE1FBF3E1A82C260132832A9668F454D39C41
736717DED0A99F6B11F005F0E1D07FE84713AAB4C042FDC166AA146D7B5E9198
E4F485BE5B135EA281FF1C1E616B5AAF02771F58C5840CB5A427FF9794F93E94
17FD799C78AED1DC4810BCEF4C6C51D3C1504EA2C6F2B29805B7ECF97B5F637D
FE92E168CB9029E90404CB54FB312FC7AA8A9F2F524C03E61F03B1E31D4F061E
1677B39D5D30C9FD4673E1723F4AE3CCF38593AD6D7F61E9DF3C010E51F25085
35D51105E1464BA146A78D7297D4D310AD91342A0BB942034A3EC0696B467367
3E39D202D637E6B14D0EBCA6AD3CF22B07D4CA69C0FCBB6C93782B2F0DFC5AC1
5D8A16CB5EDB671A0C1BA9D10F63CEAFCD0E06E42C730C8EF769CCFD57937245
658F486036D37E8BDDE5670A212FB488A8753322A5B170C9662750AA958C0BBD
8E97D8239D2A08B30416504DEEC4E506013E037C91785C674F8A6A44E23FEE6F
CCC00CC5E4D355B0871FDB8ECD64F70EE32449BB5D6F84F8C8AA2D5B1A489BA9
D7FF2DBAA8D0B84054E93D64D3E77850A3724824914A0F821EEC3D605DD851A7
606936B8B9E24D6E932E16C448140FE94DD96C75AECB73850035ED9C04A1D93C
64B21E7D4657E030483EC5C3554AEF8BE4D0FE5B9743B875340B09E01273DAE8
F256C50A1A8F2E0417440A8BB0173F59E11523E1CEF2593A4AC5AF2167627B00
C5EA97D125EB8A4BD4C372877ABF10F5B7B149D73787E0834BFB3084E9508DF7
072DD71637019599252059738D4D6BC57A9358E4B14F6AF9C4B31DB8E25C29B3
7A15F9953BD73ACDE5F0445A5DC406BB4635FAE51C1D8202AE31730E6F355317
1DC197DB0B6177307C60E5D38F4487363EE051B2E609A52BC4D45B14B6558B6B
5E1618748794B8340752CDBE7756C068975B559615D4CD5A97CE30BAA7B2B1A3
2FEF2E055232B24FD8A21BECDE1B6A479A28EC80AE2CD16DB50B30B4A6CFCF06
491C7CD5AC29FB964D4846415233947522676DEABDA0D9535F8507D33693930C
B4E4240A02B0CE7EA288516B8A6EF908D7F8BAF9012D052C6AC96D9F8F6ADB07
8984F3559C5E7E3022A957982155FC9CD599C74E18328D3AB46F9DD15D1C4C3F
9B93ADB4489BA02CFCF57DE6270F3AD2F8597BE71786510EF08142F430EE5568
4F9DDB792B7C46B6135E341DBBF062FBC50FABA80CD4A384157BAE57CBEA9781
AA4416323265168AC097DE7E30A0D4750143A4FCE70A863A31876A8FA5327C3E
36E89589E363AA2B1A6E8B09F5AEB8FFFD0396067173465B6503383DE517A6EA
88C0FC08578398C2A721E5AEB29F4AC9BC990A50CD87BD35A11F9E81F68E7B85
5E5B95A4F9A5D30379EF90D78E1E466DEF867BAEFC4F5ED2C762BFF099C1C2B3
5E0DA1C2FB33BE1379413CDDB1EE6BB3A495331F72F2FAEB8152E8AD5FD334A8
AAB0082A71D5574B618EA8D487B8FAF1B445F3395B1E21224F5492A0E06F5152
7726835C900E2E52BE3B7B654183AEDEC68053DD0AF19EF6DBC10B6FC08EC7D0
CC0E2C8FAF8C9A4C21FB7C34E074BBA4EE64226BEC8C928A784C1BEE35B72EC8
E9295240B29DDC2539CD118BAC38DB3917D14CD33AB45FE47E827F2A2B193AFF
53C5396C52CEA4F43F06AC2D08C74CC85D608CBA267175EC31311EE25AB48DD9
FE811B411AE426C9FC0B6044D1EBF130231623F1566CEA4D1C06D8032FD9808A
94479C842BC41B675CF6B90113BD681F8D43F51D5016D80EDC11D7640FB950D4
E709A46184406ED90D0892A4CD9062938A8205697A200DBE1F38EB166EFEA0EC
4FCB45CDAF82EA103DD6FDD03D146F3E42EDA6496064DB3F4FC1C5280C9E604B
D5EBCA08BF2AAC90156C11EF68137DC76502EBF216F3AF3EE30DD2676D218428
F41C655093F8B530FCA378B5769F262A6FDB4B66B83F18F050E77227E28D71F4
5F4425CB8D51B3DAE872CD86D7804F870BC564A6DA1CA13EDB00D131CE4F6460
7021661B99612629DCC20C85CF155EDC5111E015A77B0B82A8FC1EBB374B7EF2
361419BA93B857D5C9944BB5B4AEDD86ABCC261542077FE09701C96370168579
5F89D5AAA08D700E2643E88C2FB8D1D56D37AAA9744872E7C050B4CE046B47A7
83F224FA9FD311C955EFBF173042C8FC66524135F579B1397828870D5C9DC71F
8615FADE2A1CFAEA90F732B6C266E2F3048FC43EDA7A6B6D98E9DB793CF457B3
F5877E7A055C92B0246FEA8C72B3B3456F93BF36E2651D32CD614C3AECC0B4BC
F824C8363E593A6458D37408FC5B09883B280005DD24123E2D4B1B85F4113327
EEDD9186A4AF2CD6439B46C5C168C125CA80F9EE9E68906620EE126CFBF26E15
B269838A54224EDCFE2A373EB750D4829BFA410DE5F1541E428BB1E024AF496D
F5F1C151F5A645C8622F2EF9088D57A2811868A8A8BFCDBFCE3ACB8463AC35B4
8B6F44E1C1232805842F56FA468F81FF37D5D55B81CA56058558544C142EB3BE
07CFB1F75DECB1E48C14D6AFDD455989AA6FFE8B8DC54F462B3C20E31D270BCE
8E68E2B43A6625AC7E9792704FAAD6CE8BBE0B341DA7189EBB3E9D5375B27FD4
12506D5BCA50AEDC6955E6C3C7BAA84BACAF7ABDF3A270C7734EC3C6EC22793B
E67B0E288F99699D38DA8B79F2D21DD97945FBDDD132A8F0BF947950D3C0B4AA
EB7B2C435AFE54489E1930610311D718AC610C21A644F34CB2D1959B3066F39B
EADEAB5CFC6AF4D191D86B02402B00D1C5262707861C5308730579795EB53207
A291A27A8B5C4DAE0A87A0C6A260026CA3CB620E1002E066A515D7990F3DEA29
0FAC962E0B82B7A6C86B1EDC54007822BAECED673FAAEF88C8109777EB79A53F
AF3C58546974F2F56E70E9B5CB59ACB5C27CB01895557B2D82134D7F02029B24
3331621F38E68717F5CB68A8892D0B9C0A8ED4F8BB56E80505170D44C6856128
2DED0254ADA4875CF56B4D97372AAE730D4C77A2940DC8C178274DF88A9EE037
215C6FE7B9D481EE4DE809B124C0270782411ACCCF89906A8B143D0BA8B2CEDE
E9B90465C3E57A4FD9AD2702323450256ABD09A1F8C26F08480317C08B75B720
70A161C99715A35A94DD5C9647ED0F8A5337B774C8E54F9653AC859485A1FED5
37B725A7E4BA58711CBCDA6054E34CBD8E9F9460179DA7DBD243D81A1531FDDE
BF2BD425BD9DBE75EAA333B1F5793669A215549A774597E6ADA16D323FE5601A
EDA41092730009A99BF5B5AAE281844A6BF3292D4D4EDE36B4FD8BCAEB6EB72F
AC5D3CD53D0D621CA9EA8D254FDCB2B5161EE9E80B266563F669805A3A15271A
0753983004A1ECC7FBADF62AFEA4DAB49A178C231759857DB910668BDB07CB3F
7E8EC24901863088B3231EE3FA563924032C91CA9D68DB398F9BD9AC0C651EC8
9051C9F709CD784F3FF5951DECD7E869ACC34B83AECDB011E6594347855EE7F5
28811F744A4BD70D4E9077EA7EC19FFCF612689F12B34332857AE41F13E6D16A
962DB9B6AAAC167B9FBDF0068EA13412F318384134B29F3F0C399F1973A3564E
F9C3C39B5BDD4C98D81A6CB476E565860B50704BD65ABD630A5F1372F2D826F3
3AD47C08B8AD3176A170C369EF3CEEB190134006D6135C5B8CCDBE1C11FFF1EC
3F6D8C46E15C4F5EB9ED9F31A129594D542D40DC3815CD075A0DBB648D868AF5
15A05C4BDB28BF23653A3AD96CF6AFC065DCCCB23D5D9A945F8CBB539DD3BFA8
DB8F1FBF9B6F25B41EB4309995CA3D5D6ABD70CBB4A2F0C6364E5439AD1045FF
72F6B45A30BD3A548CFAADDCC6C15D46F6D783D3E520215751DC98335A4ED512
D7D19235CDF911CC69F3CF4365B678EBF3E87C456A4E77339C74930083445588
462529C22A96A28C5CE87AFA0C981F26CAED5A1C8DBCDDA612624DBE0373F026
465185A4D8C73CCD8D71EE97116F8F7D341B87FD78F9CCB9FBDA2A7799711607
6BBA855AE9D5C505870DC85FDFAAA130A351D56AADBFBD6A7D52055E3200F8B7
8AE9A00092B55DEA8BDE224B4BA7FD4A191CB1FFC4CB995FEE1AC2883AB69E1A
AFFC09AB5B9AE311A030A5BA05E2213F9BBF016C8FA80689C069314D91274B20
53FCC65C7D7B3A7504887525BFFA060304931672A078BCD7F269595686310E34
E1ECA868899BC402D17EC36CE40D5041D7CEDA77F7764C9D98793F5334F574DF
E93CB10A5E8ADAE95CE63D2339557091B4B4911A4987CF21B7F1DBADBC2DD605
8EB72473C1F2EABCC44E0D0339EECB55DA74085606C3F89D57ACFBF5755A5395
CA8D4BD47E4EE8D8B882D3AB31A1F0C62E74654C7E041E4FF2693A38A9796064
46526B0A37E6B5BF8E48E80EDEF81E34DA8F6CC9025936A4D0E6D709D61B7B5C
AB550397117F3F9D2F5A542A64DEA8E1178F7337124D6B56BA92F659AAD694D7
391028731E01284BFEA635314A8DA8DF7A34EA3B6B2F8803BE6DCB423A9E8015
55EBD90EBAE8A00298B3B6B1C02BA516AF528122C1F2B07EF69F5466C2C36643
0D665D6561705509B7582D8301AF3C32E2F3B9433E3E04D62117C7E8A368BDE1
0D4DAA1C415B2A6573116D2A169AFEF700A83F55D88813585E89C94C07802BA8
3AE8F9BC3CDBFD9C2E35D062B1FD6E79E1EF104FC70B0AB09D12CA027F33F85A
22F0ECBB4AD55FE8C616B82C46CE69A600E4F767BD7A9C5F9B37A3196B038384
5DEF76A8884425FE598A63AEB19FA698C2AF7CAA4983CEC789268E22BA051EE0
20A40633D22D8F707626ED30E8273EAAD1C065F0B2E1718B5AC853ABE09330C3
B0082A71D557169BC1559B6D285A3499D41C4CCF1F74884EC3917EB9C574371E
AFE8578DDCA459B8D22C0188A8D150437B05FB92022C95EB6FBCC954216B5FED
CBC7C90B9A1F061376A9840FB64390A6BA99CFC8279A86A730C6DBFD14C53C4B
7277D676BD42203677E9ABEEC8C97E13DAA626474513B06F8734DD784F2FBBB9
B3B448B8E8221E380AB4A86D3A683B86A54129519D50DD4FE63B30954D805CED
A9A5D9A39C58B65B08E1C19555E927C6DBF7FD07252B2B57F62B905D6B488201
213D106A41033B26FFBAC2E616DA6ADA6D560BADF10E68872806CFD6F6E19D7B
57CF1F7A030A7BAD374F16A977E0ECB8742D034ADAF9C247DA19C8AEA74EF6CE
DAFD6B1DC562FD3B77E4D008BDE4D8C7FCA9895DA1AC9EAA01C32A0DA712B082
9438E77230D38FC4153E1711417B918BA6CC03203A5FF082AF880F48518D8271
C1121E4F1386B30A7F1BC6F10EA98443F8A65C867A109336B808BC9A8E2A75AC
F950835AA84B56F59DA4C8A18859C3B68F6B6DE09A6675F639EA9107BDB67B0F
54EBC564BC2D781B61C14363A54956BA78A2BB89C9F966C94EEFC29EE9F4E23E
C0BF750144DC289F0DEE1F8A25BB52E54F656FAFEE4BD2DA57E1306BBE648051
1D0CFD6A23A3DF082E3CF13197BF1B7FB22B2CD427BB78F455C9634DF989DC90
7BB2AE247B1C99AB2062855B2948341B0F857ACD750B59E370A6698C6A1F5287
72A4A9628A592E313956C242DF8277EDD2F1FDFB07CDC104275FFBF796D7518A
DF49FF3CDEC3BDFF1D290C382F244DF18005ECDABF0C5C2C64EEC4383E2E07DC
5C82587C071E59B46B7BEF31D268F39D9B12D534344FBA515E9DE8F166FAD1E2
7D1558967AAAD3829D3F7EC6938D20E5379F414532976ABA844D97A5E9078901
EAE4D0ED1F4C7EE7A2D80D891A5013D6409A38ACFA497F5A169EB7F9F4890DC4
62FA6A89EA48267331F086992B9CA9305E16611E6AEE67DCDD588A25D37F45B1
0DE75C802EE021E574B64B3969DE2E5061ED9364B646C38D4BBA86802CA6338A
94E135D2256920EBFB1AA22D9E90C7D16853F0DF9F2D942748EE540E4FCE63C6
5380D7AB4ADD6CB00FE8F7867E4862D8DB432F28331428CC350CDF7F447A65ED
D7683ECA35A22ADD06E9FE6BAF060913AEEE7B2B8EE4798E437698CC9EB2428E
74CE73F84D0D2292DE709D71FFF8901C3505370E6F1D4E28E6B7372492C65A88
159371B1D60D77CEC93B272B6C5394EE1D2EF9969DB2838B8E128553879A1BA5
2884B0A596E8FC3D1E648B7E26A4AC57DF09B9CE09B2F91D8CA618CA52AB3DBD
D005A56A420366069B73146A6F58E88BA49671A1AB7C2070C3D42AA770285143
40AE7D7868C0E1993506B07C086AD7D4F28CE2D15853FC5FBCBF9425D8012B9E
DB6E1E5002517659C8DA69DCEACA94F368537668843D281FC11782F1C5F71977
CA215349EE6F20565DE3D8D8212A40E1227A4B22965FA64A0B02C62BFDE97E6F
C3C54FED4057EF9D258C42D7440C78C5E0CC58A40DD74ECED4152F70A93CE71A
1B3A57C46F74A6D27BF98C97CCD31A8EA487260F224A3E40F52C65490AB4098A
7B9EEB54A5A415C8C88568F7D9EFE74BBB785FA18AA27D9201F28BBC477A20A5
D1307AA78EB8C7CAD409AB64B29E4115E45F5FADDCC80CA74B296C4265A40614
37F2ACD8386AC0202D6FDB6711E8CB06442F209D781E940ADDD6D881D4F8E874
357C533115923B90138FFE31D3577C6AAE60D768970FAAB682CD0DCA3E9A9A68
6393E4B772691C1013ADFFC90C508D51B02D2518ADCC7E79F7DE5DF9D18B8435
6129064DD1A3995E5A6F45D78287CC10A0EAFBF47223494C5EA934B1BC2F7C53
686C5880303F9E3ADC8B100D441D944686E1FD811C646C6DD0224F6CF55FA87F
D132EF50450879A25242A18683BD6D0266F8F333F3768D1952B0F32AA75106D8
EC0AB703F287E847CB91FFB88CD9DA174B49171822BDE34621CF41EA772230A6
3088F8D19CF2364A329162D39E166AC728B267758341630B00398D64538FCC4D
E3E6CF103794C29AEF7F7E56970F6B1ABA87DC8D23E280EDC77556593D02DFF3
154883CFE4EF04E07E7539A4750FA1CF1A994E99B656E728D140C83AE1F196AD
9F049188A4184C84556C0476BE46DDA8ED86888DDA3065C5091D99EEEAC43092
40B97ECF9E6EC8F51ACB40869E5A6E08A0BAB6B7892A232A3A1E688B81077DDB
844137AB35E862CECB9761D4FD3514C707D6C00DF5F2109C43785B93336E939E
B40A8E211CA36120572EEE2EA522F9BB1A60FCCF768D4D6E62F4F6521A7490A0
7CE1F14CD451B5A1D6149A6AE7D0F27B7E0E31F556E2E06F41340ADE94AF27C9
C8C0CEB284B103EF6D31C8DB0FE731362CB594A3D6D3F6FB52DA232DCFB65F66
B2FF61B4380D93ACBB9EEFD298C721836FAA01D50CBB9BB1893DF18058C3E806
6F38A5A43D246318AB662082852738821A8489436ADF0A8E8DB81897A0F984F4
40B9BBB3098151F57E2B00F69EAA6B079B0964706C97E65FF25A6BE176934B60
63AC35E81BCFCC2F1656A3CD8FDD30D635702D55069A4912F08F7C0DEE1DC288
DEBDCDC98A2AADE487FFE6FCBBFADDE0787EBC433F9B2CA0DF3DB5931C7628E0
3957ECB6FF8D8C3177A7CAEF8D06FF6A73AEC37849D624C32AA407ECF1BD24B4
42988AE5D9409FB381D71265DBE5375B06FFCD490B11631704A069B9A52A92AE
C75AC0AADD0C1120CAF8D24E5D467AE411905FA5E26B1125F282CBC367FE5707
BA6044AC6378A24BE69FE23AF2D5DCE46DEFB5C1F10F5CC4E832B925E7B28C44
8BA606E716995E46A7DBCD302988D5643ACDB4EFD760D0B2389145FB9D857FC2
272060104439D08EE93C424875646C0D84C8F105CE3C36B840D95F0C13A8A047
D254E458BFA999AB393D639CD3DC58144ED58B59117A4E7B7BAC1C377C500793
DDC3A6100BA306C16057B88B0393EE69355541810FEA870F3749FF44A1C13F92
6EA8E01E94BFACA608B735C47FC3F97A4DA5C3BB2DEA9CA59B8A18C7081BF96A
5D1279B684EA704EFB8EE1B6B26B2E51CD85CD67B3ABEA718BF7066D14087C5F
881BAA203915490F257D968F6E40E10AD44F934E3CD426A8EECEF13C08DFCFD5
2079651C860CE400231BABBF5EC6741962E0FCE784AA84C37CA4614FECDA0084
F4C01FED1221983FC3262CAD8F43F891546B61FD3159CD360EA5FED8E6B01BF2
F7DB867A16B910FEA001061DFD3D7D554C283286F20978281881FA4605F4126C
260E2A9061FA6DACB7413AFFC384B17A8E1B36FCAC15B3D494BB8A52CD548B43
37EB6A156D5BA53D2FADAD7AA4BFE2FBBEBA8373B334DB9C680AF1565919EF2F
1F3C07E6629351B0058273C8236A46A1139E370A7BD46135804E7BB97A75192E
D7A6AA540DA7921E1924CB4DC4B663F37E53A6A9A99392CEC48FCAC1E41CE32D
1645CC996C7FC03AD0B7D672268AD84624E92A9D9832AC8D99C8DC195731D728
FC6956B491824E2359C8F6A52483D7D29B3ADA4BC989C068941DF37927BD8269
20C37F2E35A776A250D5F774813D882734A7AFA686165EA10D9B3FC6D9079B39
1D1E4231257288241EF1DB09846149DC5346AE6F47AB8ABC6A601C294775B544
A23A4824C59941CC24BEBFEAA4AAB438465D45B3B4587C21B3A9798D454E6391
754034CD9173723B25D41AB9D3BDA204E8B2C1610BA674DFD29D4B4F875D81BC
E194F895F553AA892BD9A7AD143C5647F3B2057667AF16181A480E9F557FF0DC
D573A6256AFEB4EA7C0B8E761AC9D4F87EDFC2A2C6DA84B4101A7CFB46D457B6
42443EBD5F2FA1A4E65B4E41FD705F012764F0ADCF74701AC249B68EC824353F
8AC36FFFF20803B7DE85B45C9F8D0D3D6E807D22EF5E55446C5C5A5A3A712339
64A0FC9059EAD71C24113BA6DCD538F856E366CC51D25DC74521F1E61BCA1468
A4A484C9780DAD089E9D10D92AC031A93F4754E28F4ECADB7F05390E3B02A1C0
440531028A11A03B52EB3E5C41C3431ED29E943B7D3227FC8352E00D80640718
C5687A43A12B1FF35DA2C59B9B7D4D338222F017805A5E2F756B6BD60433F05A
43D0B1E99C4177C4AED1170BC7098CE6E21457F08B328429123F3A2D4901812D
148BD3C06B37816048C75002368821E162E3F66867398304F5BDC04F4F8FF366
60BF5C08B595EFCB55C40A457F2C1B2D6117A81A2C40A70DB8CD878337108EEB
253BCEE64029A34ADCCEF782859696E39D4C26FB0AD2A6DC50674488F5434BA0
F06AA8F10B942566195FE84EE0A410430CF43FB870013DF786FA3860362B93C3
7A430086AF08163490762DD22472EF033A155B728398081C90F071E310834EAB
F1656D966ECB05FAF1B85F5B24DE25DB019D8632EECC8CD340A33D087500DFEC
9FF0330C8684D980C0F0195617AF3DD52891F434E80B1B8D75C13358FE2B0B28
BC24B829A1993F1FE1DF85B620B15A46B566D180552031EA35C47B336B687512
A740D1915D819113468AD461F349DB3011D21896CFCCBCD23406A91174639E4A
99D95D27806ABBE842B635F6F0E3D3D53B3E9546615A0E247A15C15082939756
88D7A43116AFF76943BCCCD2C3F1F4839B5DE20BE13EA4BE1A3774987F5E607F
A559EC44C7F01ECFA96CD352D277ACC1695E6D20D102E0939D1D3F40373D6065
FD6A2BDB8CF65A56D898DF19D28B0C05B380F9150CCE81FE622E088D0898A865
4ED52965ED1DF1A86EE626F1F9D188B86353F81AB76D51BD1D7098B886157A60
1123A91FA956DDC9D00C23A3754E32F67C4AAF7A5AD0CE7B7E5AFCAC1E80C4DB
F68B59FAAB5063C3A8176CD5AAE2DF36298B87BA36CB5056E5B93050F398890A
ADBE5E0F81A6EB284EBB806233A525CF540F658488791B8179F4D4E5473C2EDF
84DB8C24C8DD1CEC55974AC6F2DA11BDDC7DF2305492357942D0DD854C6CD3A8
CD31C867D6E8B21B517F4C42CC5700F8F32AB2779A5A372C0A871B06BBC02B75
ED34B0D48FACEF0CBCAFCE9B903A21A332378DF98663A9DBE138042F5E5675B7
A4966CFC18C3169F4FB498F8E761917FA0924BA1FDFF2F84079464CAAC1E8BD3
A9549F2FC3B38F1F28741F6E764D1B51104069BA305C0E413F64F9CB3AA26FA9
F8C8387C6ADE5EF71F40AD82CB995D14C0386DBC3BBB0D9D87752F3689303F1F
11EF0E47EACE96C0FCEA22408F0579F69735607DD2D139C8577777D9F6E18B17
1DF9535E0B40560AF2C81F06E2C14E2BE9920F1C40E29228C49C5BA65E97B84F
BA189715A218EC0AEC148C4BCD9D36C531E16CEEDBE3B99A67C59BB16683C6F6
041ED5087F1882BCCA968F1546DC1D57B6154CB871F9A7DD420662BF4433FB41
DC7FB28AD9F81F6BF360421F3ACAD3F34739604E6364D52502969F727C875189
0EED431195A75533A9C2811F85E0C5EBA9A626382C8058AE7E8C9627F36A4C80
ED8F1CDA2D49D7D248A373A7CFD5EF881F8B65718581920D7A4A2F6B3C951DCD
286B1C625CDB03D78F9CE6434EEDECA8E71773C592291BB47E4392C115B88B61
20B04629D14451B1436A186E2C51B38927DDB870CDF29FE496DEA6CB5D7223CD
08EFC2A867F3C7C8580CD0DE711270830F7B8C2BA88C9E0E8D9E78E3CF77F386
E90617CE2F9D9A8D3777312F3E8E47511FD7BE8EF0A7682CB66BE96A32A8A391
72ED5B0EE1F4A6E652FA8A0D7A2DECCAE3A74CC5F580F7FE10E8CB1F8B35F26B
AA87A2CC41CEE6FC18F2D478426947591EAAC6290FEA159377C5172C527988DE
DE65B08F1B7D0A79088393B152A170A8006568A59007B6ADA2CA4E9EE8392B7E
E0DA6F20B5957F6F7434F667D63BB727917905307CF814381D68C7209BDD856F
C8134EE54BA36E7A8E32B3211292D5CE11A2DE433802CB8661F55308AAFB3C9F
00CBF9A67866ABDE5DD567077776EF210A18D56670CAE6278CAB20D1BDB076F7
6E4A0F78EB7A29EC4599D330B8E825167EA0E5C836560E285FDB71DFC6539B5A
56BDBB745D35659462E92984DF7B51FC175F0CC66E10E316D8B1528D9DEF40FF
440B6AB7C131589192C9B0619215C8E646063F5D9937D4BBB243A17842DE34D0
845B83C1B63226FE59764F0B5FEA5A1E30928039F19E71975FD257A5CBE42C9B
EB67A7983607F217B64CFA9846978A7B97C7A92A6E259A35B289D0D9991AA608
90BFA45B8B229F8B7F1A0B023CDEAC9966C2F37F483E4C4D363E9C353A8DA7D1
71E0AC22DCA134892581643DCD9CFE29258ED57F180FB253D151BF0E4BEDEB73
51C3868C4584FAA89B2E9D39544B5A332353A14DDDC5CBAE6BFCD4715FE5554A
1FDCB47052F7AC91238A5F06CD636C1A611DEBB530443E9AECF48F7A1476A476
364EB2C1B93EE9AED990476CCD909788FF77E3819BB68B8D24173EC921FD4577
A40C7AB703975BF8EBABCB50C7A4CFFA321A71DF5463681DCB4C228C25B10D21
CB4D88F70E30B9931A428C5E92F5925377ED12F64CD462D9F9B1D5CC4803EEB5
EEF2F9D69672D7848716743A7115530DEC41E9E4CB8BE944463E54E5D7EFB69A
064CB8AD6E32E431D19B58DC677FFDC4242954E4084DB359F3A76CDF2542C721
E1EFA1CF26E806A0BD2F67FE3C874C001921C4180E72D793481F7DE57E3450B1
EFF135AF77320C9E1970AC0C6B4C791B5040E0C827F12CD02AC9D9C6AA54C00B
67013795979C6F2386E74D209A1171F0414843E562F3B235706AC414DDF341DA
7B8E3B635FBA37C724D3C32D9555C3B97769D605101922371514AAF7B187B355
3C1A2DFBE1DDC594C0C6D41131D62E86B2106249746F0524DF7224029E7A3BFA
7A5604E8804EDCAF0DB6FA29D1FABB67097A61E64FA58A640E7F374170F8289B
0F7816E89A1574E7AD80383A64A3CEC61198F0C0773C27E56B090D00A8D81C3F
3E94841A5A5930A90945BB08D48B9F317F33504305A9C67D7295D922D96FC627
B6C17A3F6944A0DA373BF6C4DE14256A20E387B18D9741B55A8A2638056832DA
5387AFFAAEEE6417BA32A8C674AF13E9F6BBC9C69DBA334DC34A677B85B0F2EF
33D66739F831F7DD87075EF97B490FA23C86740AB1C3274C232304C73C630974
6BEF016CF5B0740725567296D75E0893DC7D73925E074EEEAE21CE3CC5150432
F1C4662703FB5A5B8606E36EACAA7D02CD6251FC129065B4225B80743BE8605E
DE2BFA60ACB49C0B75B451E9BD408AD7DE708CF024CC83F344E360270B0DF14A
CDA9CC6A5312644E960B738BD2F20D6BC50D0892C9A21C18181140E832890145
268D18E071D00FEC8F9B4DEF02F4EAC960B6747A68780FCB0EAA6956FE6E2D66
0A36621DDF41C595785BE847FE139F7CCAEFBF0FDC11E0564EAB20354DAF9D04
C4CF668D5922D395038C317B94C82783401EB003A4DA80000C31EEA5E01C84FD
E32AEBF03AC92B5B975C3FE6DA9F4D79AAC64091BB6DB8C25C2D6E6A60B2D6D9
59882669ABD278505A068BC05AC0EDDB97391FFFC3211A9F49B95378F2E65612
2BD7D6254A0EE828B2729369C114332FE2635B745BA3EC032A7FDD47C0949C99
9CC293B5527F9C4C89C7C0D7CEB7CC586C0C1528ADCF9B7269C7ECC080ACE435
827465848C2BFF3C0819ED0722755DEB6DF9E6BC9C1858BA09EED56A8F39C246
6130E829CAE95BB82B8AC6BCB40D734336B4834CC78A04ACE9E88DB820F56B33
4893B023BBA4262F70EA90FD7627AD433F0E253CE9A9B7C3CECDD4D39E95F501
63FEB65A7FE9449CB8C42A40F717D1F29A9BF620DBCC278A57B627103C210FE9
4FCA1E00722EEB7CCE7BE86FBA7832EEF6A6D6694AF16C476FB35F8C4E835F9E
DF091221B26D55A4FE2F690B40E2E713A1DD6C8718AD31D7DD98E1C86A74BCCF
45C5AE639C1E507B1A7B781BFE22BC9385E0BF5B92C3D019A464D6D87A0D047C
91637E104E6E9B1A1C1D1F718B97104B8F142C32D113DE83B46A3EF1D7671E47
4302F8BD8F4B7D9625A5A4E045D508A8F33489BD100DD16ED4C44CCF436A27E5
DF4B9A52F0F6012FA79F8E516934E53C3CCA4BC1C5FC8CA723CFF8473E6D7C16
63F0F8F87F85E87AE890E57E0A36AB859DB5CA79DE5ED848439AC804D2792B4C
DDE035F712D9B43D75A2DCC32FFD94D86BD568BAA8D5CF4CB6145631DC9BBAF0
D5B905AD29A205EF8A0CE08774A770E97B7C591373D61925EE02EE8DC0BD04D1
09C891E5A3F9088DA91452A6ABD7E38AB5AB48A282254763A11C2BBDA86CB18F
D7AB8650FF9F38366C0BEFF223F00610E3B9B60696144F6084DDEF9C47C51814
7C2D08A008160353F8689E35F1AE32CA1902B873175E70998ED6B6959EBC17C6
7361EDB6AD5C10327473EADB6ABF0219C3F91F7E1759C0FA502B8363CC3AF8A8
30503A0AECDC1B3AE340C5BB0B6949
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /question put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFAB975C570A5D4B964B9A39EBC6D3327272589C6F61D91A7197B050F17
C83BA988AA2C67FAC8D9E2AA0F906C839FAA8B50BBA0F69C642343D7FA1E5542
7D0A015DA9043C0A36BC4E02A6EAE35220C779D22FCA7F7DB374E0E3D066CCAE
3C09162E8A4FC6CD4741B38836CB599DF98A21D0C90AE79806808157F97F850F
E90EC0DB9F2D8036BFB4D379696E73B84B015B308EFB52EB7278A37676B96C60
7DC49759734D8F1EBBF10A7E363AFFEAC9E499BF4794FA3293666AF2774FCABC
E014DB9E00021831DDAB3D794484C4A85B8F0097DEE9B526B39C6C9C9246F8DF
FA8CEA79A99AB0622795E0CDDA972B35EDC8A6EB58E6FC06BD6957EC65834BA3
4A8A5E5341FF7AE67D07BFD415AEC3451105733088528A1D21E9D9B496FB8E8A
AC305BC8750AF9D31CEE820D0D3FCCD90F36A8F4F1A4574E32BF6CE9E985793E
57BB8AC1EBDAF88B9DB778578220A039B9FE3AE3BFF1A3FE65E4BC3EF4F26630
E03875D37EB27A909ECC8CC627A70BCD1405C8FB63B919182C7E3FE4F4251BDA
DF9CE11EC9A9085411A7EC7D48467F2619418D0D84ED3BEEFC6F76A7F5A9DD30
5D4FADFEEF4AFAE170700FEB09422B5FDF858E1EF167285730E1FBF605A486FD
40186CD7FCB9D9C00D692F34AD722EE90281E238F571295EE9B982E0DFA217D6
E9ECC8287E76DDCC31047D9C72C8309F14FD09AF18D917AF44458A59D2BB6056
2C1FF17F25017850033A1BEE3AD17EC841C3687C2DCE84457EA050FE8A04C67E
07A912F7F5D781EA5184667EE07104045B8C6FF541089684B74F2A73F4CB7E98
29796E2CCD6E4CBB8DB242EEF63DB7B8C69F047EBF7965D248FE7DB6C732CF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
dup 32 /parenleftBigg put
dup 33 /parenrightBigg put
dup 57 /bracerighttp put
dup 59 /bracerightbt put
dup 61 /bracerightmid put
dup 62 /braceex put
dup 80 /summationtext put
dup 88 /summationdisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F6541E4AE241F8EF737A681844D034E5E0D491
925493CC8F34D4273FF9A307656223A0A4655AA77D9DB233FCCC8E1DFDD83161
C70DF4B9C3B112E6F87D55A143A4F0E10031A8D165147D4B72A35FC7FDBEA668
41F7C00F5B34B7A0ACA5F054888595593983C22F44ED609A4294E21BD4DF4A08
1B5806974BD045459493BAF2886380E8714C09964A1443F3FCC8E187AB359EB0
33D9856D60B61D8C27B17573B02FF9C9212132CEF2E0E31851A1C7F2A584EBB4
FF9D8E57A6FE0167CF19BAD3BFE8BD4EF61B76A4DD9216DB8F19F3AD9CAFEAAB
BDE4C1E38C03D56E806091893D94BA4402E53DD9BFD2DAC23FF5FE9081DCF1DA
09C062F436486001567DCB796F3BFAB33386D135300D3E681AAF3016D384254B
FBFB04089F9CF60A1D6C34BC5AD4DE4809E6C562A43DA392413140FB2D1228CF
3CF5BB9FC49325C54FD7D8B69BE31532E2E4997BBBC8D41C5EE33519CA3B05DA
7EEBA35DE8961E0FC1AF0D3AEB06050CE57F750423DA06A18A80B467BB58DA5D
7669666F2C792892BC63A6BFB59E02C84BCFDF77A05A27FFB38DD7CBFF25225F
06A3BFE818A9AB5C3C13544BBBB6C9F059D52CA13AC681010793BD48065000DC
58D9A2B15C14B006B5BFF4AD83FE87620AD6AF61A720749FDEB244320782E9A2
D0EA97CD45C985F9C4EE95BCA08222B71581D9DD0DB19D4245530CEED8284F44
72C8B53057D95FCA06E62DB062DCB2B3718EAAB1882451F26EE81FF4EE3A09A5
C804FD1F850213A2AE224B1889C905302F3A7B45EEA1A668FF1B7B51BE1B8582
7F206B120E313552810E5279FB99FC9F24EB5630DC24D87E95B8756FA3EF6138
A300DCB8F6E82EF29D8B454FB80C5315D9A3BF9AADD2509384631C57442E27EA
48993B1800067FC9A7639302DC3B75D06FB001AF8F74C34C810B64357AC31146
791A7A66649C897FC28FA6C08FF1F7D671E8975FA6B72A410A7CF232536A489E
0C6CDD2EF2FEBB612E65CD300C52DC13B4AF601986D67B5FE6C9D9B911C3DD38
F0554F64D78AB76ED5BD26307A75235FBD0E75F70B0F06F5E7F645144E88CD8E
5904A648437105A71FBC44BAFCBF7DC6F12545828E1EC0989C29092652AB6CD9
6AE1165821D8F86179CE2E4C688B9B72E9C13D95D9B9446BF7994D7AD0372C52
7307ECD765BBA8D88E9CE3F40812E77EBCF12C243BEEE59434071790FF65444A
16BE4069119F229B4A73439AC526B4DD15B1419B735713FD19BBD6FF2AF89177
FC5F69D31492F13045CAF52AB7C012FCB9688B6BFB1F5BDD39E4201F744177FF
0CB0F52721702801BFC38B939602D8F7A30B468129DE55332F918A487DC8056E
97CC1BA6C56B47138060FB2362FE7BF90C402664D192F123034250B71E1953F9
BCDD8FBE7A397573666F1698F34F0B37F882F9D8C01D98D92E36DDEA9EF8C47E
415A762FE6F808B0BB867C31D5EB42557945903C42F5804346C12641C981C6DF
791B70781900104736923405A58125CBFE6DB8BA00FB48A8D153603F987562C1
CDF0374EB1DD9123EA9B5B616C655ABCE58967371CD4F5EBA59ECCD28EF1DF4E
F641F5E9EB2011D40023D79FE127B6470E7E1253140AABD87CD966BE6B9C35AB
2472DEAE83634525DF88CB1EA77C4F3DD66F5992066EECDE20D23D5819C9B101
4AE211484176F2ED49288DC7ABE2591F7B477261DF3F0FD83BA508F8F9D0C8AC
5CCF26751FE0B848B81554BEE1A2E396A22EE737F97EE13685EA37D9CA615FCF
A85D19ABD7A7271961F320E03A6F4056A98602FBB96BB728F2F72C7677795E8B
68A350698C89CDA78FC8739FC41706A33CCB741E91C34CE942AB295EBB8E15AC
1796C084200A5E0DDCAB96E4EF4755A6C4318D8B44D203524B850C098676266A
818215154FA3593D66508A94BEEB4B11D8B24CA08D49130247CA14C18928BFBF
73E85DA127A2B1B4B8B364C1F0E6DAA442D73A4A595E7081866B67DEBD53DEC6
0DEDCEE4C4543CE9B37D369F595107D74D602F520FBE3E3583724C2D496244FB
64785C0FFC4B258A06287B2D4BAFD6A9ED6DEC61A74B261D76E898079688CB9E
C3B5FE2C04389CA9AB7DC7393B91208BA4DFED6D6D9A4EF90B9B901E83AFAAC6
8E3E7CC3C2311D479C415BDA3A23EA2757F34ABA4E91A03155F768153CD397FC
40BA1AEBC059D81B76696EA77E95B2E8CD8C4D57207E608600D862BE0FE3D25A
19F4BE7694C28F15BC90428BF54C0CA2974AF546CBB9C6A2D65B93904622F669
D6124B9654A706BE7AB9ED9BFB72201AEC00F2377D7669BD31845CFF6DF7D31D
9CB618338C8A0DDDB3109CAAA432193E7E288B6262366AED5C556836858A0025
7AB673E2EDB5E42432C1109A84477E3CBE523B933354B9C6EB5F4D77CF2ECD2D
F3884F9DDFCED79DFC0EE81723CB5949616CA1ADB0504E632D501B395C7DB7BD
2064A73CD93DA49CE8429B73581713BEBC2672D61055F882992D5FF3AA93D53B
5E5C6FA1CFAEE59C5171B2BCA0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 6 /plusminus put
dup 34 /arrowup put
dup 35 /arrowdown put
dup 104 /angbracketleft put
dup 105 /angbracketright put
dup 106 /bar put
dup 114 /nabla put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AD4B048D8180325CD4F510B7DD524F12DCD76DF0E9134A6508B698A235351152
00C6D6D23C4E29F329323CAC694FC1CF82BDF35FF5154D7B4054DD4FED1E5836
95BC3AD29232AC3A0E6E6FC26309275513DD15775514D1705F2B0FEA274CB889
AE5C54B0B44191647E741C2F01D60C66E4F07D96616FB4210A75A9B40D3B113F
CCCA9588C7FB98EEB87EDB9CAEF56FB96FFD19BFA2527829EDC8CE201FAE9DD1
96E1F5CAF8DC53B3D4745F7C2B816B81828C1FCC4C440C477A95362CC81AA642
CABD334B5F078780B3A8E64EEAEC535656CCE0D6D662BAC6209B876E9159FE36
0E09893AE62342FC239F8A0ECC479D68BF68CB7E132A01634C37772246B5F348
1055305D070A3E445573970D2A96672DC3E42F8E1527A160986A16A7463560D3
24F957745BC93A92EBAEDCC45DA52194493424D84F588AF6211C43372A2E6A16
FE3023CDF8F2E3B7958B651B45A6DDD6A3D26530F7E5196521A285119C43FE22
34B1945185D3E3D9A72A129E821E2AA41FF037B939EB5BC5C595EDE974CD0A62
A34BD754D8969D6ACA5BA6D3481E2627A160988A416E4F76A6796796F9A10193
9CAB04B4D1B114EC3627A601223D64D2D44C93B6CE6FCEC2966B049C13028577
FDA8F4CCEEB3406A2F2B606ABC8915A0DCF382C6EB721AE8908C75860C8E2725
9D9DB1B9AF9D90A25595F60F66E610B9C7BD5B7C7E0C25269B2048FDA3DF7E79
10DC3A1F2B945DE53E20EACA3E42B2E704E2A9B15482EFD9FF500C96871DEBD8
D8D1C1B56A9109DB1320D7B4DFEFADE9816CC2DCF19075DCB7F3F8ED3D6CF387
D097B2450BDC70012D235EEAC4896E8FE96CA8F6394CBE06FFE76C901F175DD3
382448FB19AD215080872E7E5CE7AC3584C58C3E0D42D357AE2554396919D699
89F24E2B25D0164DF7B78BC6464B9A67682C8BDF1DF671BD28A660C1564F3E72
14DBA1909381D67F6D8A16D60B2D207C1CA3713C51A3365467DC30E9AB62967F
26773D984A65E9AC5B14673316A10DEBB2E7F616050AAC28B0BBFC63D4D51DEA
ACFA8D96704D23DEF96C9B6B31CB41265AE7BC32FFEF3260CBAC926502BC032B
815070F88FDFE3DD130D9E3E046E39B6FC8A726E0A0978E8875C416EEB4E8D26
FC25E85B4FFB6C373B00F4A4D2461BB44021A7CDFD4D9AC80A8374E615360B84
F8CA5FA6998E890F0D8F8164679ABFAB961A186C1F313AA8D4D133D0BAF0B2B8
0D5A584F092BACF9954A1EE2F1BBC0FAD8926A0BEF5913B5465D3C96CCC5626F
586145977484B9DC4398FCDC29164CDD12D8132EA896CC73F75B045E923884DE
BEC7187B4888F62362B4B00C6D69779DA1BF26137A902953D4AEF31D3C376F22
7CCE08CC15270B7F78CD81702EF21F9E4B56E0FF2FDFB64EA095671A46A4D8C4
A1685D521AC0E842280AC865E8C69BCFD7A100CE78D054F1C1EAB1C56D26C0B4
6234592F58CBFADC8BBE3C0EAE3C91558640F0B5F8B3E96D0EA5D9B41BE7F78D
95B5B85AADC739985D089556E66484C05DC7DAB7F9AC0674213009AEB0FB0DA4
07DEC514074B7ADD976024E0BB5ECF6B07FDDE7E831328231FF614FC3724B5C3
510F3C3783EBB8560C10CF43D9A5256CA37D4E5BFC90A2A46D5DAAB74E58DF4A
26774DAF4C30A6A99526AE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 14 /delta put
dup 15 /epsilon1 put
dup 18 /theta put
dup 20 /kappa put
dup 21 /lambda put
dup 22 /mu put
dup 27 /sigma put
dup 28 /tau put
dup 30 /phi put
dup 31 /chi put
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 64 /partialdiff put
dup 66 /B put
dup 68 /D put
dup 74 /J put
dup 78 /N put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 84 /T put
dup 90 /Z put
dup 98 /b put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 110 /n put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C142709006B68486B326967A28D
41E878EF9CDFFA015BFD11310CB2305640182A131B96D73348B7ED8D31A29D7F
2D889D8EC4F6C7A55DD179594ABED611CE4DE790CDDCB68CC677A362B879F4A7
F4F84113A561F6D170454B0DC4DB2F973E21176E5B00D0774F0BDB3F0E22D753
FDC635611AC85411D57FCE2CC85BB5DAE17BC41F3C1E5CA1BE272ECDEC1C574E
E68E33D4D417A84B0C8332C0ABE15953794D5FF6B261CA10AC396A65C7C4FB21
177503D805A3A057C44347F6DBFC0F0814ED1E9870762B179B038D83C1837268
5B9F161A9D44EBDAFE1A20CAB17E30330007B4A87F79AB072E704173D211593E
C9D7F6CB65990B7D717FD5F35668D0E7C985B22294658421D1410317C02B5278
03D53625BABFE9264F5718DBE81666CA8B3EE1411D82ADC9092AB330007988A7
75A74C4B9433991B1F87394EFCA4DF64BE9426E5EE16B5B00E2BF893F63CE9A9
0CEA343E76F8B5B25E1B9AC5E0FB1EF3B026BB866AECCE5B0FE5ECF23DB0C529
F90CF89AD4A78C777DF29785B80DDC24263D0F0E21E28BDFCF6687F7BC87D711
34B7EF26D10EE0DC74AF90A97236B80D8EAB1D351404CC736B8E039BAE9E3EC2
1F34CBE80DE64140D8E69AE21C94D9928885FADDAA6B4FA41E7B8DDBF914117A
2675D8C6927CBE9C6AC5B8EBC8C27112B733158505909CA8A1E6B1B8A07824AE
D952E83CE4F676491E6923E63665608FD5D7849B502507E68E0185F4695477B7
BB3075534ABBF140A4B8CCF389ABB40FFE5C9C06D4A2FDD0DDF0A49EBDFB576D
ABB47BF1CC0D4E406E930102CD0DC4705E05C7EF3C518A163A5E6672E59F8A4D
D691AAEC2AA57F8C49E984886D61B62C4D0D488CBF10A57518BDE41D6377CFFC
482C0214FC1211315D0D6501CFBE7E0A995FE1F23ED1AE1984D78EF2399E862A
20FA66812873FEAAF44747FEFC5918EE391ACC2EBE58CCE03A260F2E92C7807C
74EFED2B132A2915E0454C2ACD6D7EAC386165819C19C75470FB635CB7271D8A
2DB88965B8D22AB04A724DED273BA060E797C1BB73CF35BCFC3ADB587959D05F
AC426FA4A439A7AEA497F13E68160AE0D42A628E9CEC9E0B59788EB9B9FC10E4
245E1F1A6B012114F6CC526A2939FAFB6C30A399FAE5E0F97FC9B58B6A605314
F854A16AC3011DA8D144B6C814E2F47D48B84F12297AF2D267279A477BC4EC6A
FFE3CDE50F7693D5A4D6BF6BA810B780AD3D7817E986BA77EC41DBACE2826B07
DD73D336E5B30DA51C210B2B158F31ADAC46B63CC00BEED35638A2E8173445CC
09C9417A6D014C32D1DA4DC02F8945783A3F7CAF095EA1D48A8A22F2FF862BF1
B6788CDFE9F83670EF9D7A2CCD66E815BA34A7CF42562BEAA0DEA380463BCC00
1CB369A9EF5051359F0532C002FC3B692E6AB3796052070F4C578076ADAF6658
0344FDEDCDF9C693C5E7BC811BE21F547C98F7712399F2C399FBB04C9FB9BCCA
731B4BF18A5B4E6CBA3BAFA6D5D3A50623049E73B1F9554C1930B37B74C72FB8
93305D4CB1D936D0DD331B54A02B253F7C83AC31CFD5F3B5EDE728739F5B1372
D66B7A4BA014A758FA6816D4F1C4FDA88656A37EC8F5AC94D698AD45C2E6E1EF
0FCFB020068B47686558111B1566FC91A0C9B502894B9743045EAF35E6A142E8
5E9BA72134CCC83B6EF77480164AFC424539ECD3BA865B757E8A132763F63726
6B57E210657C694176BB68783B63BADDD3605467881F7CA534E4490382666F77
BCE8BCBE2D8EA485D5BCEF24DBBFD388AD85F30C8A53FC6F8B065C026E1C4712
985DFBAE3A9E5EEB936185CED1820BC8C84AFE01CB0D62649724409B8870502F
535B2564F43A94EEB6F15B3D625DFE4E57098F96088C5C98E7AF24CFF8A8308E
A440CD671563654EEC38CA4CCB5F26D1C2D5C8005D2871DCD98B037C256415CE
508AB95A7437B8E9756223F2FF5B55BB9FEEB1A483ED40E46D101D182AA65AD1
F663FB2AD0CDAF240C096EA124FDA5B87D97FEE3A170D269AB8D436C77BD8C8D
332D0BCCD1046DD47CE6505D1BE43F14394DE102F5299CF5F4650A491A1ACBE8
F8EDCE1E4ED8FFDC78700C1D1F9278141F196787ADBB2951D1636170882441D1
A85D42EACCC563C0DB06FA56F51BFE1969E63D5DF40B1993C53ADDD85AF53C31
2325AB3E31EDD01225AE8782D46D190C7D64A65E7F3E1BD395D24065C8FD96BE
FB46F8A0091D81F189AFCAE69E7B32C3FB4A6BDDE7847DFC074301E76899F2DC
B33639CFB2730DCE0ADEE19781319081252FC0F31E97A5DBB2ED56D5D1C7D89F
9F4276171491D95D7C503CD64C975ACAE188834CEEF63252DF9AFC05B5C34668
7A1B1C62DC76D5B590D6BAE1D11AB49D009B1D93C17E3BCB75118C538EB577DC
E5BCA529C12B9C4F84AC252F058C79E14CC67ADDE394FF9454FCDFA89BFDDDF8
727B7F021BCE3F0E65AC62FA3808781135A92AE587C7CAC4629956D889E5E5E0
13EB8113EAC71C848889F263BFC680DA485559B49AC5111BCF78F9B5923B982E
F61833678EE096CBD6347C4DDCE58A37430D6852F5F4E819A96A6B2C20780EDC
3DE58E673EEDB08BD420DEFC0A6EE4F5283DB97601D3A75FC8B5DC93338D6FFD
3A4A557B22955DEE8E48CC5A852B315E79E912162F9ED1D27218FB8210279431
F6530D73CCB33757B93D89A2219A9C9F6C21D02C542C313D41FEC77739437A52
50AAC5CED3BC60C48DCB06F6C3622A6BE9C8076F9A8C1C0C0061E51C2E734B85
0CD78BE22D4D6F3AF931D8FE20068303AF2124DB8E4D3E1D4FD4A1ACCDCD3225
559B17159D7B47FD7C5DD23DE0A15FE33E3A86E999C29DF73C9EB8CFF76BE672
931F34279231579416C796557AB2CE8A6FE2272560371EE46494BB89664CBC96
FD900F02FA80806B4066B63245A9131326F6ED1CE2AFCBE3674C449CDC0B0DE7
6C25C9A2AB6ED09CFC2C5F39877F1059291C4B60DE4835AF7B8B1895F9783466
3B36A2A1E4D0584DD35BF2DEEB2E36F77A2E952A9DCE41C2A1AC8381FB0AD2F0
1C014BF42E1877F562D0268406C6E268ECE88EF8C8983E6B0AA2946846E414D0
D88A66D6B46069756B8F6AC834BB5D6E9305CA40268D93C628DCBB4CE5A8152C
70F67D02741B9C7E2DBCF1DA111F58DFA8DF3841EB5DDF9A0342A5DE93A1DE72
EE1C3F0BA00E70905D853655EB5332785B9ED98851F70B9210633C24BCBCC509
5B1562F61727A4AA976E752BFA0F6C76A355EDB7A686BFAC33EECC379FE02C92
FBC476E43D84E5211889479618417CDC8D72F5228F6B17FF43DC3548297924B4
B9E482E4ADC8604D598672C43892348E72251B56BFDA62568C7CA6AD54D83A8C
500AC0D9DE05E6AC1AD2E92E05290D751BCE44C465ED788EDC0EBEC9B0D5EC15
A7A640B8834D29F2E62373EA7AF30BD091C1E584AB76727F365128DFAFD81BF3
4D2997114891291017A0DAC8E2B4F9814EA928CECE0C83A7F080AF406DE82BB2
C5F6B4A1366C587B0E1DBC7266661FBCA5DEA6DB03955E593DAF765BC6679879
0426F6E4915FD2F30F2DCD665A2B5A4BB5A14E121796B82411FF6465EECF0D25
11B06BDA66B24005998E40DB310F68D72C2FDCA5F9BFFFA41D6FE84893366AA6
E097B387F191BF604C0049A962F3F660CD8D355EB49B1B028216FED8E2EBE3BB
711E7C951C9CD486E61B982DE685150014DD630CDF326AFAFF8A6047C0D8490D
6C99CD8C2C636934373404F0A4714C47FE773E96A5067A963B905B98081262C3
CD211DC6586A6132324CC730C699A02496216F99F6BD3F88A065E9D5D9A03930
09BD499891EB465FCA66054F13280DD973E1A71C338EBE0E85679D6E600FE604
2994CB993645029AC678DC164557A19F687C4662136D319F80F9EED413DFF744
31A405C047C50CB5C5618D8609CCB5AFD2A3D5620C5FB7DC9BDD3B1A24ED56BB
76C8EC67F713284C7D7D8FB6744F49D6CC2FACCBF8F9604CBFCDF852044F7907
C2A1B02FB06EB7FB9B90FD04E65BAB9FD5B24A411EA0F75537EA3E7A1E12E71D
A2F14B354F15D4958BF87FAC8C34C9463FE949E3FAC762E18CAB47D7B4106C8B
64ECE84B57C78B3DE6E50A3B37345D034C1048EFE385912E65B3B32B0C7F5387
A967B9AF655CD2944F75EAF71D2806688B66474CBB62EFAE61CAF8BC6C4B8D5F
498B303C0C1A6D44947BA0CC243766707216BF228A49A20E2FC5331492160A69
01DF2F642EC36F05D9CD69E47E215F857958A5281D83355746EC71413F5D9603
CCFFB7DF6566C86463A8580F5F457039CAD0CA0EF1584D44EDCD5A1199432E2F
BD11984765BA84824DC11855D79AC032434D961B5693D265708464AB45C674F3
91FB84FC946C340F0902EA24ABA8CE34250D267BF0C68D284C3F8C1F7E26D303
38FABFA06B69ED0D6033D2B1665F7BFF6DEE6FDFDF0E1912C41246DA654FEB26
D15C08A4E02C0C97157DBA5C1080978C4BEB49191216F8CD150440A1FDD8C036
BF42550ED97390764703069B1AA056A1D81AA68525A6C533F5ABE98F83B32729
B7AFF5C95D670ED711ACB4BC41995C3EA9DED65478366C7AD316FBB2FDBE226E
3C22B50908230EC9844B019045948F557BDA04ED4DD288480825A2AD2E011D2D
874E34D376E6BAB47B6E5DEFBD189B2032EE0863C752117D0A86C829D22BDEF1
570AC58F2C750E9FC56742F16BD02E48E108CF15595E100AAE7B9C30FD919F37
46EA0210251BF4CBFAFAEC9B148F749A094D0D9AE05882ED41602843464ABBBF
D221C6F0220E792CC29E29DDE83D52080CC1AC5AA68412AD77CA3799D374ABA5
36D1A765E281155CE1D00211F89F0F15DD5996ECE6D3B5C63E82C14A93EF468B
219D13ADF08A60BA62D4E3C21BF4C5B0E77FCE95DDEE00B6425BF36BF6483A58
5468FC12D948DB22383F89AE169EDA07F73B72DA99C1B100E34C1EA5CCEF1F4B
51AB0AEABB08C000468E499C90481AF432253C51B9E6E27ECDD40CAFCF5E9747
B1F57078B2CEBB20D75B0466188269FAA155D91CAF08AEE2F3331ECDADC09AE6
28BD307F0FEA1ECD3C20ABB71A32DC4E3C3ECA1802C6D7B7406A7F3AB23B943F
AFC61BD3861807979552FAF9D0A164EB6DFBAA24CD9ED2802FA0F5EDC39B6478
97DDBC69A9F64B95A6FBA4BC38FE6CFE9B60DCD387C03E5F3D77E38AA3456FE8
66C766EDFF91DABD28E1C7EEEED3B827DBA9423B5B51AF94F4EBAF7657DD0B32
33139474D56266E01BD1A5CA5928BBAD5ED4E2E694A43A2CA7AF513AF5977081
E6B61165915973DDD14027E52B4C61A8A00685DE04728B7AC765F31CCB880F98
E2B18F84A3441ECA42C7EEDABA2CA8E1258F77E0727CA8FF17C2F1FD9872FF25
D7C2A88CB6838711C61C4DC3D9B366210B607EF9DBAF8FCAEF8008FCED7D821C
1BAFBB430FF8EBD1AD2751EF599EE9832FC6295AF6BAF768387B1A7BE39AB963
D878E9C851198FF97CA6365E6EAEF94717401121A6F26620C6E5216456519B53
22D4ED624913128B460F9F41DBEF991AD0EE7A4B624299E76EAB31A74327325E
48EB28A2208B1994E093EB19F21BD7B023223F371C3B5C1B8019103A882C495D
CCA28E6395E9C42A4701A680C5950684107DFAF0300E50ED044C8B4CF39BE508
2D3274996FFCEE74494DEC3579BAD9750DBAB3B2C32CDC5ED1E8F6D18176B054
C153086EA230277586AE9725770C938059DD887A0C94E157C282D60FF6461E21
D47097839CBA65F0FE0DBFA675DB4CE334395BC5D9CEDC8ACBC4B1598C977418
AF9667C9C2E99D780365F581A36020301DA44AAD3E2980C30D8B48A09E2463A3
880A8F4F312328EAE323418105584B86374D1C170FE164A41BA4A00374A5C4CF
744A9CEDA7EB04E298144A78AAD3900FEEF2C9DF42B556FE7F672E976829A77A
504BFF9ACC0BD05F47D6D67584FCC03FBCB29C4DCC980CC8FC97DC659B9D3D3E
96DF82E861E3167F2AD807181EE052C69234E7962BC65FB3EFB3FA45C0F84600
62962CDFA1965D7CEE6D1BA97EF7BCD54F34547B9819D90D6BF20115CB0C2E57
E0AF67C4544CB89BA134C19539CDB94B219CE18FF823BA2B846C493ED9F21739
8E702CCEF3935B77B7FD0BEA52A6A25486A646223CCF5D098F7D805E98580751
3D253F3BE7C374C78D6B3631A680CEACD8885CDAB5AD6ED373F4BE11FA792629
C01F0AF92F6E394A94052534BA6C59151EBF4B2EA33074B0CF6AA17519E1D44B
772A3E4E0B75FD855FEEA1A2C51DFE35360DADE8CB2246D1BA10ACA865EF4755
AFBA7E074B1A28BBAB28482D89DC08EF5F8AD07359A0492EEA7A652D38105A38
0F77782092E87F8074D37FF52AB172CE3A51A5320D65A51A956B22164C2FE870
2465D3D0C4E403F541B27DC558095CF41FE174895BD2768FA44181B5CF325905
F5C42D3F2E64ED6F03F2CABF111E2589106EEC0FFF3FA3D82AE0617704AACE60
4E1FE50409948A5BA63FF8B05CF3912E5514F0C1EE3A0975BBDA7891A9EA9698
9481880459D62B5F9E9540A4E4BE32E1E31873ED1598A9B38A29E1045B61DB1E
DE8C056859C3D2B106474DC7E46F43C6B210AC2ACC0B03CC0750E4E899BB5DC1
B8FF4D0DF618266523145DE572F2C9DE18564AD9CBEFDF21BA008C15B6285F84
F8B00D8896713764599C1A5CBFEF320AF0DF907C26C36B55FCD125624CE76EB7
60644890F5BEB1FC79BEF68FB7ED712DAA23FF7AC46624EEA3D393530393FD6E
D6E49444A858ABC94C172EB8501CEE3A16DFC9BA29E78AC0AB8FBCC0F81BCD12
0A4AACF7C9AE22E2861C12A4E8A430008D638D75436ABFA247E3D7072058595A
26E2D150A9B360CDA18C5AE6A73772BCA420E81863730E543815B79FE3F6874A
2007C34D459276BF2D8F252092F0F12A9892716DC84EB7BBB41936DE31612C61
17CF0C7B6BACFCBD4967A73004CB9BA1C9EBE1A7557E336026ED02DFF25341B9
79D79782038F07354AD2343C7697731292AAAB00E68426B5A56C22999BEDEB4E
731FA9539D91D1E6F27A8020A92338A9BF40EBF36C5699DF15CAAED543C09CDF
5408B3D9C7A15C537477119AA182E837766B8D2E65F969D14F63B0BA61FD20D7
4471AA7E560A36634A7A763B391441EF63C9AE2FD29A4BC8E53C73290859FE5C
D819269DA8FF82908F790E0725C7B9F48F42312B80A6319F72C99985053E09D2
80B785F1D4A45284D70ED8A1CB775ECCBCF0BA836FAE8F6B42A3735D75C66BB3
7DCD502358C4DD8408A24AE3DCFBD2B4079AABA74D1187039ACDE10EA60ADA9F
F96B34DD26C4DC88F98079D4C02276F0E253A2B3294CFD7376688C8C24152D30
A2D29F284E5D7522B4587E7FD0E89215B6932CE28B6FEDCF1F96993140D29C4B
E5149929BEFF8DDC75C7F087046C3447A7C0D166FBB19F3D0697D81057C22730
2EEEAE7AE71A6CF7145AB813EE2945C75F19D77047B1646B281AF742F49C9BCB
5217B466D8AA37927020610CEF4B27BE129B697CDD4DCB5210BDAABDF91B02BD
B8E07724E8303D607EF661A83DB4E546ED7054CFC7C9F5080A56EA9214C8717E
224D7DE4D013F493FC20FDE96B9C65417B60BEF80A51BB442B160CBA48C3770D
6A0DE425E1D1D8F152714257AE83DA5202FA8820A1A78E201EB444D897BEF335
67E2495499EA0210B9EFE831FB3F818AC81AA97E1127A8F2AB25DB242D4BC6DF
B07D15896EFC9AFA1B92957BC4C21C3600B66E15083A2A92903395B82C1AFEE1
F3C66709629D3D8A28B67F6AAB834244DE3D71BF129247F112B18BB7EC66BFA5
81DBA6F1D1975197529F6A89FB6EAC4C6C752F4F50A888068173165F49376024
41918076FFDA74E0D01EDC61EF66703A50FFB90ED8100232AED1A45E8963D61D
49EA9FEF9F1C116138E385027E02F96E23D75C31ED8E7C87B1668A9CF12C2114
39335FEFA00F62519E4DD90689FD6172747E245CAD4A43EE003539409E59C31E
1E1D9BB0B01EE6F51F28FFF357F636E79D0D2588D0B32AC41F592C79305C7704
B36127D6150A908DB68F10057508E4D36223AB97279108AE40FC726EF6CB47AB
7C36C59D769FADB72B160062239A50B8A080C9541CCB6546374EB3C14667DB67
EC7E44898EE1B20042CBE2CE016A8978A34AF4245B48EF5FFB4E3ECDB311BCA3
14F9244EFCFFA9C3B3676CCB19C4836482F526FF686E5794D2AADBA52C7C0529
EF59800D874E2BF53028E64B7FD3F4FD6F314DE911E56AC01A9A632B68F8D8B0
AE4CE059D6BB0B4C09DC01FF6E0E0C91563D047DD90F0ED50D4F4D8389C9AFFC
7EEA2FB35866A517AC2EF2CF4FE9027CAAEBD2EC317AFC5C7F9FD55FEC290A8C
CB827CE535EA610C16C06BAA17B0AC0F200969EE3D3B65EBA93DB08AF0166D3E
E2EC8CA84151AE9B75EFA834B7D1117A60705BBFFAB242B26455E4B754D76768
988E5CBF26BC6283F037638A7E7F6E9D92E196B1A29EE1EC325E3554F9AFFD40
90D81243B93D3AB09DAABE1D896E7527A3432EB07A7181D0DB99F9795F471ABE
78DE32C25CE6ABAD80B489C5C7048CFD1E74DC996A0AFA717B1691D490E013D6
5E1739E2FC4059586D2CAF1A4B03DA84222F9F844D86C0E92305F6A9FB852BA3
D957830C31C5949B70E0933AADE562EC18CE72C98EC19DB82797815CC20A3061
FC8D7F97D2709B967D0D5B24CEEFE8EC593E2F62298CF599670DFB715B7746F2
4BAF2D67A74F25C0335B27CEB7AFD708B24DFBC4FA689EFC66153A15F6E06622
F14D8DA580AEE85EA0D6FDA826BA038289BAF1B47F8D69D77E75138A553900F2
6E7E00CB260F4CA3F4467487C4FFF9AED353D1B467EC77F65BBEDFE1C539207F
A95574AD3DE73C80185E98E219595A6F9A97E56B65825B3510992D6242E104B7
9515494DB7BECD5533C19D5B2766F49A045A6DC62C231F39FC15C03FE58A8F06
579E3DDCF1A1DDF431781162B11E7949C5CD3733F6E483B47DE003E4D44DA1C8
023C5CA67590E94EFA144BCC192B421C23EC81C5D0C14DF88162587784C53608
B805EAF5ADEBCBB381DFCB08181E828279BE05AF32133547589D5D679DF19D7A
56C8810C80EC4C5B1D807263F1FFB1B97F5402D20CC9761AA4A6F642BBD8EAE5
E0EDEBB971C1ABB97F45619D1CA9E6C00455C931E911EAFEC2DAC65EAADEEC20
342AC8AFB0D4DBAB6718B812D8BF9504ABCA07CAED42AA4CA1A5AA91E3F02539
02B6A64E2127B6F3070B8CCB23F49CCC82E2F3594721D6A1DFAF223477E7B255
D3E43A86403DB14B6E6B85480CD3AAF3BBC06DC7DFAF58C441C78EE3E9EF5B7A
B7FF58EA81532F6510C17E7540060FC1D0267699AB981B1AC27CF174A98EEAE9
27AA8F6BB6C1E646F9E839305F788E1A0EE606060DFAD6CAE2F0394C5674E8F6
B4395A7F576A8EF72AD28BECFB0762C0825248B1D69B96D07F2D61CB10568D08
3D152E33C4E8B542A9BD6009291A173D34DB45F83A567A867CC548A2F0A6A916
8315D8C0B822D3954005C098E663A806D8863ED94A636589688EDB257AB5A79C
F9D475E51C192C9DA18D370AC68BF001A4178D0BDF624EE680657AF524DD9812
54AB876335122245F000792EBE28543B7732D33F78E1FB6EB328E79C282F5902
D5EB87B80FD3B9C389A7339DD4EF39C7AFDD6DF4C243AEB3C924330F3F4F4F64
17998F2557D812527BD73D16EEF2E87D681385EC95EFDC0D0E3FA3CD71A95070
A9FEEEDD2F0855395FA4EACFEDF54BE3D2BB748B5F9271741B394B3EF8B383B4
1DE18AD7AD01BD84308A16B5675D51A6A0677B3445C9457B40E1D4297E2290F3
EDB42A3C9EA620CDF7BE885960D3A2B6AEBD3B335FD732C9F770B220CA796FB9
7926115FC064EFCD3C378ACCC5C6A2B87FC3EEC5BF9B0D2CD128986B4DB20E97
A54F912DD13CF97B4703B887DDB980F04190E0E97069AFAD531D2A7689CF1DAF
7D13A30717E1D687DD04BAFC5856B1AB5361663513B6E2FA031050900756C8A1
A25B6F84F37A08DA7642CF0ED08DFE2409672F50FCECD8FA55FD20ED26F6491F
7BA74B2258E22424E40E6DCAEDAA5AFE28B6594B59E6C6B22109AF48F13ED17A
28D01B970C44E3417859C88DBEDC8921D43BEB44E78952996B98BFE5B42FE172
A0DAC208D1B93A6025C4D4564E5CBA2AE8FDB09933A46F7A4FEC3E228747A512
11B9C4182B7AE7241BB6D8629E863007E0445F80F1E3A0B49F3A0C8A471FBF7F
4C7074B77D798F533323F8CCB686B96B0846817962CD944C5E5FAA0AE4ECB214
0644055E6DD01AB02FD679B412AE2D480A58CDB68D119A8B8AA10E8C2601284A
FC98DE3071B39713486B19A16A6854D44A3A1B7BEEB9199A8F255B3B85440E03
490DEDCCA7B4E84243335FB61AF3DE1549E5215120BF55EA96E65A634A398C63
87613883CFB10CBEBB0A0AF891346668C6ED9C7A37A1975445C4CB926DE94EA0
6689D3CB966BA8F3881E4C77381AE42DC9B321419D92C2E7BDCE7A69958AF911
E101C7445603BA81635B73260DF591CA89610304331B7741B63D7875A1AE53C4
14FB8687BDEEDB67E327DE293C6054D0F4037E8D9B364F77EA46500DDA6759C9
367BDD04F2B4E2CCD7447493C3C703D0894AFDFD0FEB76C4C38F51B79587A1B2
A4499D8D5B285B13149536F753E4A2C5E08801AA617C2E5F0CB483FB21180123
8599244308C4FCB684F78E2D5567C7F5B9CCBA3D8E5557F56A5682833344A26D
378F412BF648734B1C7EE01AD68D7D7981A6EE79B06F08494F4D8790ED32B4BA
F75EC36F2CB10FB1FD098A6979BB97F845B63F390FB198A2DB6E26B69B59C695
9832D485B22AF0EA6983FB37016E9F115330C4C68FEA415E2981F0015CC1CE0E
9C0CFE713A39B0CE7650AD370CE9AAD6D40857F0BD8E563423CD8DEF5F2AF228
EB4F7D6756BB85153706C147058E928DA45C5A0B42D8579FE1DFC5F893031918
597D249EDD727E881CA3CFD0C19A8B45363C27DE6DF4AACBB292D43BD2F09C6D
0936EB3EC1FE02680CD8567CF8B13A8A667297B851CB951153A25C78A2E84B68
4E1053DB74593BCF2841FBBFCBB325E5E4A0C51D95824EBFF79382D5FC7420A3
650D2D732E32B93F6EB411357415CB8AB083D86331A72DDAA50F4D0716FCC57B
ABD0F3510472377211B405C4BA242877D148790920B44B7683B373A016134EA8
E3CE85E8F1D37D0DCB691ACE7A5BCBBC9A49408580D709045603D79921BD787D
93D9AE59E0071494E90F81324610AD2C0745760C130E3B40D0C4151786B46021
A648250246686DC652465859BD3017130F67839445C3F4B9D157ADA841265D5E
4CC4EA4929B641DF10A983F62513EAAF8B5B87017BF28B7474066F28558DEDF4
59845D61E4D5794261BBC2FD097C7AB250C54706BA076EA39956ED68715B9A8B
4FC236A385449C2844703B4D1FE3712A8A79CC503A67C417026657BA31A7F19A
839A2E3E93575CAA40835CD1288E4D05D61C8254B2BAD04FE920C64D716D3E7F
13459C73E1E8AB0D01BB3666A75E179036D93BA32B7FC0339836627BA0C25EA8
000600823635D27D25AA5D9E3287EEBA13212DACAB382C00FA0C012EB52F4B5D
73F3DFD1E6C9AD7C71957A66760DE3D836D96CDCE65AABCE308672275C1BAA4A
A04552672D790AEAED4B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD47EE10B9AECC871B76227228CA161EA7B61DABB252EF91E607AC8D3F85774
DF0B1507B60BF52E4E9BC0FD04400A548D553D4A6EDB247875E0A2E013685C51
D23EE8A56AF57025AD67D929CE8BE791BE91A4C4D9F00DB8B4F16252C04F7BC2
02236296A9052306639F4672E90E3B9DDE466EAC17E200523B2AECD6C05A0A83
66D4EBC86C0DF27B789D5597FE88BCDAD2925CFF60F5A8EA618FE867857D585A
CE25A158AED63B8FE391030C518693AEC75AC0AADD0C11B0065E2ABCF51132F3
82E3718B9A9FAAF727F2D8286177EE27BAD040C66D0D2D7C092B45D9330265B5
6B5C8E29F71C9EF548BFA4BAFAB242B26455E4B7FC1882D68E408D25E6F58EC3
03AE9B7A5F45D61E02D0AB82AFBE793D708ABEF45FEE865969895654C00A5FA2
093A297AE74BF625A96FD85F58FF994921C9F1276635C8CB65FECFEE37C77BD7
FBD692DBDF1079AD35F8A8198D63A3526ACB37FD5DF7BF68D4B567B5A4D13F70
8F1F57EEF889BBA921B1DB9FC676D7526CFBD3C7467A15189A95F6AD8E116FE8
10D97A77A92B4A2F5ED6C2DCBC742C4B449CBC23AC64484BB48180A134128444
F731BF29661525944BB21F54EA971BB2A6DCBE4EB6BFD634093782C4D27B282A
168F0C731005D54A50504909B0A14E487E67677BDB2FBEA9710CA94E31EF6812
76AA994F97568461722DEBBDD764E8073FD9D53CE9FEB02D5261B65330DF2E2B
7FA9B49B40698079EE3CE836DD9EDC22E16C67D1882A2F258D1EEB8B821DBA3F
EA58A1647449827071D86B4106B7DD921785B1A5419E620E2FA5F5E3B7892D8D
92D2633E1AA79B2D892962E1BE317A919188CCA40F2EE2E5B5F3C1B9AE3AC841
FE53D85EFF1DD42501AEEFBA1327EF4DCD7FDB266910D968CF0EE334272DBB38
D7252899A7E192D7BDCA771D0EC829D403FA8383BFFB0E40189CE14D48529131
AEF148EE3F9B74DBB60E9E6230892C6087E4C0047BE55DB4E48FFE568222D007
580701BAAB4EC36D38B44F8AAB38966BF6EA90F94D15878CF0A261E0E2DBD348
24F92E6BA340A2D05BDF013A53125818A6E09A0A15ADDDE11B47B03B527BFCF6
56DE28EFEE0A8C6309C0608A55356ABAAF656D4B52873E3177209B1C06C27874
3B73BFC2FBBBF504D8A44626E0B341633A45F8D0533ABF4786A94983632F1586
257DECB8A486D4DD7326B60496A11B9D085A72B7E7577F1DA5AF024F70E4BE39
E678EDBEDCA6801D4E13795AB22E5EFB590A6A399C018E0814B3F827E677D2EF
BDC122B9D2172F322DCEB0D1E1A424
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /Lambda put
dup 10 /Omega put
dup 12 /fi put
dup 13 /fl put
dup 16 /dotlessi put
dup 19 /acute put
dup 22 /macron put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 64 /at put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 126 /tilde put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B5768B77E7B2B812E8C804239B23202AF0EAACB83E7A32BF32493421CE4EDA74
808C7F2D0818FA5CC7B9DE5158BC7A1B7A9C7B95BD29B01BC1DEB37D4EC57C01
38AE5277D067BF0242AD7D07C2EF591D6C3EE87A9D65A57C287DAAF60FDA68A2
1ADE7E7A457B95C7BC603CD8D9A6BD66548E5BB2167E415C21463C22C4459A92
374A9BF3C35E2A4FE2658D8835158A2BE0E39E2553001E83367987705ADB7596
D0E268828757AFC19E45C3C949A68D0C51B9508758F4EB2D3C223431379C61B5
036040B05ED02979AD1E8521F101524364A1F7CAFD8C47BE7AEC111FE399FC22
964665BC26EF6F88FA8F5B9A516ACA5FB0217CEF8518BFCBA0E1F363F0CF981E
526F1D803C9318A1A784629913009ED9AEE896BCB0C32014E9F4EB900062A9EE
8AE41F583A2DE4B46F8EB3B207344F9CA52989AD8A876F133878D5ADD253FE74
A224D2F07EB970C525B6BF8E81FB5B1150FC5006E25BA750372C86A036185BFC
21BF840FE1CCE706A0E23FA25DD02421950F5657E97AE07A1528D60051AA72AB
C6396607E9D5885A1D5F1E333B2B2AACF4272A05A41AEA04B2C18A82B1C66A40
753A3926C47C9FF722A8E9A3484FDAD4EDE22918770CAE1ED7091F9B137E0728
6751F44FD73F3E8CBA8FECC36D5C9CBD980FC2645C8F7F7ABAD26461D19B6EF6
AC83F17AF5EB5B27907A29553CEB646E1C3715F9BEE3706537A19C22363B4C40
2EBDC3BE495F903678F280EC30096CA3970EF446BE30F99435BA274FBAE626C8
E9AEEAB07261FFD5041D2C273AC69A26EFBC2E7AB5061D7825440062AA8B0EE8
9407262B92A22FFF1CC5816D7ED9780DC000FD01BA0AB9E0E109F726FF147AC8
005C2A5FDC33E36880555369148070BE15294E2F68C1126204403C8AB39EF9C5
A2A055836683104EC0C4FCCB53462F09C8DDA87FAB3802DB5B42EF3F5DCDBC55
36069A8F16F20B306F35FDFEBB8A80ABD3378F1FDDBE711F1D3B974CFDCCF5FF
8382D791C0742607DD4AC0CD0F31AA4FC2BA2FBA144CA1D63AE6C7C3C07DD228
58C5D7B93BB12FEAFAB495A6B76CC544AAA09186F23275FF1D280CC10695A3B9
B1E17649F94B00F4F7F0D4C77BE8938F66E173691888644E1A76A37A0CD8BD75
5479183F504F9495675F86A7BCCEDB48A088FB7BF00A83D988A712871B5DC14C
AB5DF310BC2FC9FEA187F66FC3F4C982A08CBE9B944548FD83C879A3AC860B8E
00F231AB0C1916817FF8ED4A4DBF833E19417CD6FC238B28410A4561A8AF8C11
029BB7864161B83622CF35C5D13CFD7688CD6B721D104D777387DE009B6FB962
03CB06E6FA64A78F296F31705DB94E48E6819D459F80A1686DC007370EA645BD
0DA94DCA3EA30B5C4553E61B674C42FAF0B6B936B83C7DECE90051C416A4DA26
22EFEE2BE338F72F7117C6DB188C28FDC294613F6AF8429DD28190670866E8C0
F163199924AD37F5AAB39A0C11F67C748C8AF5546C37E24A08AF4E6B5668FA62
2C4AF0950185055FBA77A7B29D47FC341327AAC307788B69B795258A0F6092DB
01F739E7B733E1B977D9837383FE6B2D0FFA1F081A67A0342C48D346DC081324
1B44EE1C72727E7C5389772FD708FC4278B2AEDF35F8C7B7C0FC9FD0106B7F7B
31E8E1FB0E9F1C220F91ED486854B1960A00EA60DBC2A425EEFBDE8E033FE5D1
7CAA0C96F1C2FFF3501E674BB24F92E8498380F8C602973FD9C1D095FF761C48
B9D625135864B67CB5810F724AE13AE2D35FE88716EC17343AA737821F533CA5
997093449128D523C602C59C47E1638A0CF47812BBE1F55D0E75C26C66876B54
46179456B49EB11A1BB9D506F3EEA21D047FD8ED9DBAACB24FF2953294DC0FF2
24FFACF50E8C9164C28361F23D7CE2AE630176558A0E15395108450BC48B8DA3
6207756D3205AD6E4F216F43A7616D7056B500C7F9FCA8472DAE20A29EF38C14
A7D3B99A35A1214974433D2ABF6BC142825B15E90EFEC059199C059E7F0C97C5
0690E5B822A288D1C6C372DC15398FFC4125CBE71CBE7F8E08C44500A4C164DB
CC596A6FACAA38B0618972D0A165EC5613ABDB5D82E03A88A3F2E6621911EB07
EA9FBC32EBE0ECB26956CAE499BF4794FA32939ACE833DCF26BC238D765DD2F3
2B9075FF6E153520B24DB64AE96CD4987FB59DCB40B121753A9824D98B48F142
AAE46544CB2879F6C780125B10EA0C7B8771DAF0953293FBC4720492689A742F
E0BF7EC9416F020FF86111883166E294F198A55B486D301BD466112D8D5EE6D5
272661E1F3284D36F2561D87A73F46ADCC3E5280E47C868308F390851846BA06
5DE08B2361FF7B534EA0CDDF0ADF8EC80A06823EB597D053DB11EC41620D96D4
6589EAB0C421D9821CFB4C3E3142581D887834097909CBB96FDE35508F62EEA7
E9E22554D1B62B7449206616F9A85A7BE9D5301D39E230BC2D0EFE3655BC968F
B5B46042C6BFE707D7CEDBA80F09F094FC124FD7CD9341AB5576E3BF1CAB7484
863761B25C83163255C08059AC567C36D4BF52F0D74C8AE15CB01F67F055FC3A
13E123C852903845C82A5A9DB79A5C31786FF635AF8298E01AE7E9366FF4B80D
84F1E85EF17502B4FD2E62068FD3189EB078D1B08CD454C568D8A128DA4D688E
FB052F43A85D7F87A4A84978CE429612753E3B373D0E96E99A2E05BABC591162
2CE184339B4B2F08C2870080F9F5B7B206DA27689AAA6BDDCB5125E2B7CF884E
E473730045D818C6D6A68C8F3924A541DA5F0BF468B9C319113018F1B9F51441
4B8EF3443892E464C1B483B9CC8B07D926B37AD31FCAAD95E640806C33A9A366
2502B4B1797BD1B747C52255C25D58F974201F41C6CEE60D6E2272B77D8B3EAD
81153F11273FA43E713B875ECAE4E624B46503E5E129A84043FF9994DEE33286
559F73B1DFBCAF2171E9B4C6D8A78EC5C1A581A33BD9B5D045A28B89ABB35171
41CFB10D2CDC39F78DCC384BA25C04C0BC6179DF74FE5AEC6AF8EB77DC37CE2F
D43C346F85DC12DD14FA370DDF37C50F199752526E300031012CCAC638AAA7F4
16065135572B2C5EA20D77B9485D1ED26C4869AC6F9D40EA62CF769E52FB59C2
371F421887658091A503CB59C09A4A658CD4017BEFEA793753B71FD0C7E16740
8775F45C93348DFF65907B9AB5371FB8775DA4706184EAF284F058848DA511CA
99BFB337B34D986F398DC2BAA9230C3B2C029EA93142EE3D80C992352FB5F587
B3F3257C8529D84547BD17DF1BE596936EC7D0A23242D3D4CCD5AB1DCE9A966B
BA36E4B60D0583098023176FCA273B71F1DCB1476D232AFABC8A3D09F3E78BF3
2FE1F58C3CD35CA285D8CCC3E4FCB6AA1824CC4F073C736C60F43CA66CD0DC30
B16BD6A8A865D362A6F9DEB471A77FBEB922F13909EC86A32430992CA25131C7
D4EFC00BEDF81C5B6DABF2E57456DF1B12CCDBF69FE70384665A3BC9C8C9AFA7
662FE3D30C204A8523B3F1EC777C726F05D729AB5E98A4B4085FDB7E32E8A620
F1E761C4079DA139E401B5BC4AE282C496D955438D6D2EE11604C17196B0DF96
B59517939C8EB0CB09B9A4F8B8D76E88D534FC75D02BFB51682CAAAD76A333C9
1C65F670F794A3331945D67EEE5AB32A72A2182829F28EF672442C051A1264F7
91CC920E8DD9C54BE0B86252C87496645607DD294ABE01925A4295E5597370E9
E48363352C0720817226BCDB37605B1EE8E76C329444CA8A049C4C65A1F3D19D
BD9F8A0BD4A5ADC653B9CECA31E572CCCCA12C0834C7D888D2D0E2092C7E164D
0E3AA76E62472E59C6878063530A6B75EDB677C4211A2160C3B5E1BC79EB4DD3
DDE670C987C3D685D3C804AE7AC4619C0922DCE2C53A0E58B2EA828F3802644E
1344A0889E69DA5AC9CB8751F37589C7DBD9FA79D75C13CB52DD4DEB9970F910
F8EA4056FDFD5CB01F0EAFD08A4701A8A5EBE6FD423B545F06D3B9CCDEE91ECB
7982B1073A713DDBE6F4A9135944AC9B8CF620B1630015735ACB54DC851CC768
BA973E45C4326F6D892B796F510E1C60783AC88F4C8BD0159D1BF32E5B824C2A
0A6040FCE3EF180D5C23D6E6B3984DFC6E4C5915BBCA66FB1C1FDCFCCC5ACA36
1867BEBAA22AC011463552DB68D50848051C43686188D6352DAA1F0B0428683D
82CE381F122F5428D07E37AEB5F356AD4D3511773020DA135F64CE1E83742399
06528C72DA10F3668C5E4AC4DB463CDDB968FC840E36D09F3B59D655E78BCEB2
C3BD6C9989A573D4E8DF5E9BF8BE1DE2607EDC5FBB7FF2E9E71AADCBEB4A34BC
583FCC6A9CE90E59CFBCB30856E7486BD6C54E966912C11E8A14E9E8535AFD3C
AACBB60F6F8C5A782A73A07EBD6A748EA5013D8AF2AAC9100BBD64BA959C4D25
8C948858B33C4F0BC5F3B932904B3C5E083E235B12C698E638D62F9D56C3EC6D
8B66795E1059DA670FB4D2EE23168F82186D3A4E1EC4D6F0BF0DB1BA6AF74132
AEBD7A59A73C11553B668BE1FA1070C69535E7E0A678B730A12A6F0E29CE0651
2B49E8E63B2D17FFE1F44C9C0500D7F93E77C94498B03696C8639DE48B31176C
840DD8DCFE99695E8EFFC051C54AFAD889E6526BD01747CCD486F7C97009E1DE
4F1DCEF8FBD8C9D57B806F0F69A02811BB1782047013A2F7A79A144FF11153C3
6DC8A64CF9589B56D216D26F0B35F6958AE0270C618466670B6F934F53024260
F707289EF23B0D09D6664EDA18561E9E697CFA1FC910C9F79F80EF37AA56C6E4
C36E34717DBC804BB4005160A0AC8656E418397210AE3E7F835044A3B6CCD9B0
145E3A2A84FE234EE200E3627416962EA78D3EF0719F2E2FE4D71B27AFF2737D
10286273FA4C6B400C2A6B06AA3FB6F6EC7E4226795F447E4161774E518D81A4
1A20F3BCA7B552E20A52D1EF11DBB8F8E7531E96F4C5BAD3C3323FD0918B4A2B
5387B7D69F4D1EADF1BE1DDD96AEE3B5188C2A57D84C7B4C7498DF771DF88ED9
DC025C53BFCE4E97996AB6D42039CB734B50CEDBCF3C24B267A1B12A4B854D00
81732B6B98BCE4914379CEEB014B2743AE729D0EE08D5B7226ABFC476B6DAD25
176C31CE6209ECBE65025A14348B50176FECD3E034A8112B64AAD8AB0D79B5C3
74FEED71FEE12EB2E16B898905FBB9E3808B84A59191F6DE6B2B44348C2D25E5
B3E72907FCA3397444CD097DA7B8ABEE7B1F1F2E5C36AA8F941913F75717706C
8E29759054DF1B426B66A8A50C090271B3F82DD1591CDCC6B8EFD1130744CE95
95B16E9FD0B684CCF8764A05291AC2718FD30F738BD5BBCFE62FFE420B7484C3
ADF1A8CB130B293D958DFDE95A2EC6D37026C287E42C20A96973D0E975A9529A
77FCE2CD6CAD4FFFB69A01C41444A4BCCE5728B918D13E586FA1B87C7177F54F
539ED84EAEDC95CD8C0F81EBB183695D3C2E9D5331A080468889080FB68E4C71
3F8488823BA8076294DACAA62F177ECE199ECF7659FF7C5C12B21391F2A3D9D0
EA4C62FEE5AA5B7620D98CA003284D85E55ADF32C9B331647A3F2C9096D77B08
A93F07F989570C840736F3A15080D7C5913EA070E81C985F59956C3289C70D9C
BAC883B826CE31095F0A243FFC0A32FF63590E071B58F4DBC00DEC94C618CBC2
E20E80BCCE1CC9DB2919C64BAD09D7BF08CEF61B4D8DB9DB3578233361CB145F
9B58DD9A85625111DF02C89C6699B53D3B2F35C9A32C5A49782F144DD9F5A453
E020EBDD34C25705E29E76F3036440D7096D5BA881DC9434719D203FC9C1DB68
158628474AD388DD2F311834E3B19732F12FF898E404D097D81C0CEC9673B484
08A781FBE2F55B7319C705307ED7EB2E25C44BFC33A818305B1AFD9638C8A98A
2B7419002699EFD7D5BBEC81EB64104928FC8D63FCF24F6F52E0D497AF2888AD
325D26937CE6477ACF42AE29AF44508E4DBFB4D35A114DE60919FA76BDEF52C5
ABC9FED0D55AC18F4D54CEC6864A93BC1EAC01F8F26CB741A91166FA5E73B048
73C12A56F1AEB0FABB832C3030DBE78DB1C9E0C5BF6D6F478DB50453620CC872
D23BCD123BCFD98FD60CEB08150AEEA2D577BC8C1DEDC1B91AE52B7041457455
647006BE0B365B96A5C602D437FFACB1257811A498904B4628094CE251F1AC52
702D235AC167FB99F4AD8F44A4E5A82C0DE931CAE74870B7B8381D578165860E
515290D19F3682DE40E8A4F22FD38003A744F3CA29D66D075DBFB24A2835E008
46FC5B61315047BB43F2516BC2D859B774BF51E23EF149CD97EA0C9DD2EFA5B2
59B1AACF92F470E1690A373F6FD9A110B91980D8E12766BA8CCBEE445E0ABCF3
F8601EAC9DB653BFC7A4AAF5358A5C2DB97729FECBDD4572E54DBDD8E2D4CA00
20FED126E171EE85C2B2AC69C402DC92A263CCF305B06BEEA61550019D4803DE
A86DFE08FCBD060AA9BB903C1A03B9440A00308E7A81B743DD24DE0D38D3C51A
CC2610BE79074888BA58F75738AD088EEC6486995E889E639041F065A5D9F26C
73C8182838EF4184227ACE32FA081087D54E3B1474298BA419FF073D62FA3947
8B23C787B9ACA425AFB2D963BE5B0FBFB15F45D400D95CE4BA9AFE834696EA3B
9C3AADF23AB9DC68CEEA38840723BA1E5F3AF5345B023880618CD67E4AB05AC3
693E7E9CC43A1F72A887B110C4367ABB5419F133DB74360E898087168A5084A5
D5C85256936F49BF195F9BFAADBBABFBAD895A7E7B03E2988CF145AB43B140AA
ED5397CD04BB1D1F8C2A7A1DF105884D69847363F7B376D9A50750CA8349B232
9C5A79BEAAF9E218C487658C54D6A4D2B3951DF01DDB3A66B06D82C3B776DE31
EB57594A78D7FD476C6689CC74F8BD2C283B8DA63BCEDB76E98D595F65F2F0F6
6C6EB33BC88AD102EA3DA710ECAFDC2BFEB8FDEDF30EC7908CED460F2170A5D3
142BF71A954B6EAE7247CF0AA5AAF95E40C83C8A2A288EEBF08E9C8353B084D5
C5B529C6CDA2687BD9F33D193276781FD240DDD541CC277BD416889B70D33DFB
998A810047B52A487EDEE68C4904B9D5F1E8E8BF260CCF159B3BA313DE1F70EA
1CA9464D413DBB36F715D6A87C2DAEEBFA0ED1EA1E0C666A31391ED0D5FB9BE6
DF447AAC23E05BFEE1EB30B38188E96B5810114D64139A9B6F52A46F87782386
05890E031FD05FF6267CAC5737655EA625A764ED23A78B4460C97BBF9DECAFA7
721AAD1EC7040A08CEEBD3EC760C253E9AD40B28C9ED36194B61B5F21676D42F
53CD1A142EC64E068CE74A5A4501E6D42FC216A388F6C12B17C491415B220F57
49D06EDCF5DB11060D9265F8462836F9B4AC793F375CA82FE2C048C64DBFAA32
58F80644BF1B93928462C6B475E4049B96E83C41B78A912D0D3961E24A07E793
7DD1F46FE4EB6408CA6C4F1A077092EE15937D666B8113CCA5F2C5F047688D2C
8391FEB4A71D95489C05757B7FF58367A128F47465021043F02CC7F5AD538AD0
F54AD9CD6DF089EEBA932094C204379796FFB14AE5F3F1641413F6F0AEAD2891
826B8324870DE656497D732D9A6D299D59ED3FED790A78B34E0CCB1608F60F3C
92BE0611354F8043D53262FFD37756FA3A9CBD4C1E6FF9434908F83989356869
DD084181D52017AC347C98AC405CA027A79D036406501BD231AB37C02E120339
A10B200B41A30756D776BCEC35A21FEEB21C41CCEE6D459076D0B52643E3E9E3
A28A98AD77E90D3AF9539FDDE00BD661CB2F2AA24E495FC1428A6D4F284AA18D
BECBADC6DB100D732EE4A6F93201BA13A7E06A229A9689C7CCE54FCF9AB925AD
E52C151A11F86357016A855FBB7DCCE793E4D74890C45FC6AC53B0834D7D113B
6F6A1F8F225B538C0C6D2FB1D864F3D0780E52F5BEEEB7571B13D28E585CA203
6CE9BDF3A373BD7756D995457B964D1C6B3E913FF75494D5593241AF69BC32B6
5C9D84C1C20D822500ECF0DEC9EFFA25EE95BDB881576C57A46C645D0511C448
D98C63A6EBFFD6F65B323F84279932099F805F1A8CA4BB7B25A7E68917B8082B
60947FBE78FCBF3E129A90585931C6A5855E1969D178FDAA6F745B2914B78C41
0759330823DBA649A23553D729B636F6EE86AE53A1C5C2E73AF9DA78E2B6A904
AA881C42B4988F48BEE03B0F6001C689600F054D7B816D3767C1183B144FEF9B
DE03DA23A225D77E161CBDE78302B9F6CB85DB4B1D558C1C974E9E359CB65B96
CC5C5A85BEB54F9E0ACA70F73825119F7546A83F81F107D216EC22D7A7CCCBFB
7512577917D8C5D8220178B2E6CCED357C1A1A2F039CAA1A464660C8E3552004
C70B187F58BD0DFDEBC41D0B3D5D963DDE09C41F70673243486AAD6BBA84753D
CD524614CD4503535B31102E80969E4CE2BA6FBA3409C832D02AE711D5E23AE3
46435792BD431522E498B7BAE9DC46160C5207229EB4D10953928D89362B3B0C
1B8E5625E4B05467CA3944D19EC4D880F524FEF4347FC24BF50712D3589696D0
F43C41AC84F98CE848D6F602A15A341C75424B8DFF558C8DFBFC7695E7DC37ED
3153A9AB0E0E845926412D6996E3B96C130E2B8C5E24D7FECD01B040104B0F90
463598616062A00343F34E4C97509BD26165B6BC1A8E508F4468CB4BB8598D0A
C022DDD138DBF51BEB3A5D861ED537ED9631A2EDDC22081E65320BCF855D1D45
30180129C3DA5DAE51C3057349B6261966F44404A24AF12CD58E527C1164B5ED
AF51ADC6AF5A1C03987671DA6D6EE57B622429882FC6F24C0E54C03D64ACFB14
5B5CA31D52B1AB23211D6B51413AC4837E3333EEBF334D5AF1355C75A6A52081
A5072C1B0BE0202EF7097ECCCF385908FD7F619426BB88444152C7E99D8CA2F8
A028445EF73D364C1D2C14FD08530C86013036D91AB9E545B7B50A7B18D5E35C
A881AD8C0D945D6BF974B49FC08CA053B2192A29437CD0974CFAE5D2FB8FCE00
35D14887EA0BE1BF7AB2F8F9BE679F19157158390ECDF297C3442F25BC41B4A6
4783A7E0463906A77DF2CA004527C8D36445CFE8142AEF5D5E3E11E065C98C28
E0A3604BBE8B157DBDF0A5D30F90CB0DD7876DACD73A99A357F7D6AA18AE8880
95A075287C80C6CB24E42C451172F181BED38D94459033BCC8EE30667B7A8CA6
29E25746B49D62D93741E053876A84CA9F588D99059CBFA72B62765187B2902A
C201F97BF0AE8670B7C7CCBF25D59EB10BBBF3CA028D197A49834CAB9F6B70DD
A80206FDF43119F7922982F4D9D3C8A5EF9D54033C14F33AB0E1534B8984D716
B2276BE25EF0721BC9FB2E280183B978DB1D1D0857799D47D5E646438E9BE332
6266B2D589B84037E90F92DE933190774E27A304D1954731BE079B1E0B46FEA0
5E63D02CE6A4969068B8DD384018861F8717F6F3FADC403639A16986B0763234
F5282D7BC824964DB2E4AA60BFED46B614BAA37C5A6AB078788AAA6C5F068E30
AA74B83E1C9FF2C8FF3AE7A2F318359CF23DF56E1A11CFA93EDD9C2D774221FC
2B199548007A541E15C75A02F4B081E9BE9504D73495479AABA8DDC168E6295E
74D29D5D0FE152D5B6F958AA6AC79185B4C8AFB517FE50B55976AEDE1F478CD4
AB570A182A348BD7266577578337387A7DA5D60D3FC1C6FBAEFCCCA2A3B6089E
FF8D90174770AC3F21DC8195FD4428CCCC9E6DB66F4979A1C78C4185DBDC59D9
E8E4D35217A1240288955F823516BFDF8E0DEE5DBFA997AAE2D2C3CB75D18C8D
859F4DF925623A07264127BACE97338592ACAE01D302167FB1A2A0B0174C6D20
B88183133B48FF57A980D730591FA10D76D28B597E9CCBF93398EC540220851C
6AB50A1F680D9360AB1062BBDB2825819DB68D09322B160A09484942D1EB74D4
05E31A8660CC0AB12032C0C58E66B4491AB2F643724CE1BA961482D55582D064
B0113BF039EBB0920341DD32EB67444DB8F74C32DE54BEE971B17520BD3CED4D
609007B1D1136519A6904B177EA0EBC1EADF9661A0EE05E5CEC513A8BC44A1BC
85B5943ADCB314B17B490CB7D7EC889D755059598AA33D2D1BC760AC78B1AF42
0D471AF790D77C76FB7FE325A88E30894A19A4AF0BB90471EE1A851407B9728B
CAC758AC7DEF7DB291DB7C90D23B8581356B7F077BE475BD0691A5927EB8E7D8
FABDC574170EC1E463FE74DA29182005FF1DDF9CE7094F865E4D728AE74EF465
35F62CC1274E582DC5E82CBE6F9AB4B96B724D32850236BB9D5352F844779FE2
E6A4021C1A0CFAA03C8DE21A5E2DB97E2EEB1ED2980469B30FF8CEC65186C91A
FF8A442D6AA7BA5DEA6F90A3483661918B7270C5384941FE9A431BAC96AF83E2
D1DF37046781DFCF3BD46F68E0B89996E0EFA985FFBCED8BC2C5B3077221AC29
18FC86B439C015A93EBC982F34543D011C3AFBD09D92C165A5C486F0E98BACCA
204E53228969C2C09A038816E9FDDCE666D3F36CC54CE278E6653DB4F14DF407
2FB1B27C7526607E1ED9D7C80D27327B72C8EAC2B81CE956DB76379624D9BDAB
ADC8597B453DFF880533A441A5BF38507EA040ED6B87D9BF2CE7CFADE2D4C482
34C1A60CCDA353FECC7CC1E49D844C9B9CC5C4A39E8F564C8DEB8966198022A6
8B7436200197881938D35A2098B1F722CC497CDD360B27BF03482D79630B921C
951251AC6962303C36394BB152D3C0F42D59F228FB9D04E7AC45E4D462D834F6
838114E4AD370BF419BCE0EAC6FC5941E3E662AE6136028DBF9C118E45624043
72686EA8700EFACC244C4D890A7B9CCCE63DB0168385271D51012EFB84EBB6AA
B9B501F2CB21C7DEB0BE0C39AF7576E8765F0B78FFFFF90289CB0E781C17BE34
F3C65663B50EDA1283D0BD4D9F1B803126743949CFDE17DC26ADE862E8C4121B
61A1FD76858641AED98ED32266E34739F693BA455C5FDF840E7FF164F1E0B604
21E266BCE14E9800368FBAE213675268382090242CD28F2A4AB78285BCCC5AC5
22E4B80D889A9A7276C249E31FE3887F18A26E1253594BE79C35F536EAFF445A
393BABAF26AB907D2877648AF58A60D8509E3012658D341BF5D27AF134C30727
EB83F8973215D2825EE4C7FF49F8DD7564117A77DA4032D088C6EA3D399BB848
32CD8C2C349F52AE38D6D931F14AEE584CDBDE87BB7F667D39F5B0099A74D84E
8D6FC9B18BCAA8CB13629B6246DA4B173E9F1EBBE43B721365EFB0CD2E7146EB
3F075907CB657F954128BDB92436F6C87B2F1AE9948F5B8C23A0F7DC6F43FF36
E5EC2646B1444DD47AF86948448DD0B887090103B724B76794110C0537522C55
470AB870559FF747C0841D9E4370272789926D9C3B7774051B6813CA87792FCB
1C2B79969EA0D5BD827CCAE4A5889247659E6A78A5303486B5FF2A8280D7D383
DD0D499D1257CF7B2ED9830FB447432C54C0D373A1D3ED5978246C623F2C5383
A6E73E61C2D7D144E6D2374E7DEC692361062EB37356F49DA339AE0E1FC8368C
2071BAFEB2FAB67E85A7424FBC8450182D2C026CA0161A939F0387850FC5D6A5
B37A81C157240C112E0565D1E1920035894761FF79159646458BF3FEC21BF5A6
6012F2E504A4BF78805C0121BEE7B43E25E539EE6BA3EB085AAEBCB41415BBEB
835B743B0B86BCBEDED1C10A94406C7243B18E411F5C4A23D3E1FF6C846DDD4C
74FED8678CC1477A2BE34221FBD0FE160DA21EC02D162777546F481AC9DC166A
05B11812A0AE42ED8B740432F047ECF3B25A4E52E70E7E7612ED79FCBC4EE58D
A04D47B3B71009B50B38B027EC2296B0ACCF567A393097C7114E727AAEC17A13
00ED277785248C09720D294E5F62EA280EDC5DC1B1C0456E85BB62784088BA10
3CD212FCE96C02AFE83D53DF635D80A66CD89229F4D82521214E6F29AEEE94B8
9AA199768A9E014170B46503F6E0781FF8233AA1AAE262269D75BD874EA58941
5F61BE61EAC565E1B9BB83CFB6F4790E5C62ABE7D0E2D1F46F693AF68EC87E04
1C09830B8B8B6EC37DAFE7E7E12D1D6F62D4D69CA7FA55C51EE3525EA1FF320D
785BED78E8CB05D20C45F0376EBF1A8612239A633B9EB73E62788138C359DDD1
53D2EDFB939FF2A2B706DE88103EC51BCB1B1A2BC312F8BE1F91F892085BCB8A
96755A83EBA274F704A18D3248E9C741FF38578424974AFD830DA5064B52A704
7CA9EE06536C4E9F51157563CA1EFB4B078F8072294F7FBF9F218902DBFEB0CF
E67F4196811BBB6E57E35D75416C7B99EEA9DF21D357A7493121349BE09C6A1E
143F2873492C51F0E9BB0880E0315286553E864CCD5D4DF2CB44104C78C8718E
742049016DBF2EBE2954A776B07E349A3C6EF5F558BF4BFF0C611FC4C1B18AD5
B385267F3FD1E533984B38F99F2A9803047327226341A07E14E311A771D26E15
4C3CBB7BBF71D4124584E478B115626A697F828B81A270A136F8E4C8AA4C99E6
FCD38340217E5FA7C08A6B08F7F121E06246DF1B8901462F84EC89A9A75366E7
3C0AD463C8125179BCDCAF7B5A1B918DA9F7F8A650B9983820C0B8CA4FA0C1A7
BC4923226B92FFE481EE4330032BE44DBDAD6D58234B499CED49A01C7C36E0A0
9C47768F603A699D192699C79EBB26F0495C60FE5E0964D27F7F8BB770FE476C
C85336553457E715AED253774358C67F3D94F0D863CA382EEC76493CF9C3DF86
445D33A2AB3EACB9E685A9F9EB59B10B65EF71B852C0D9DA5DB51775396A0184
797D1FEB7BE67480632097DA044AE77D5648813FD1B1E171F8FB84F76B875B50
120A2559596F24676627E74E28ABCBF08FBFA4829A44719D8BE4334FC8F37C4B
B057C31F3BC391368613D9653D38CE92E238D4F77904B2B61FBDE90B179D31C4
43C367A8980CA410D9CE1CEF198BCFAEB4808E3EA00C8D8AFCB23918D00006EE
2DD749475C210D809CED7EC6CDBA1E4439930826DCB6C688B203438D18A3E76A
6914E00B4EFF4D64C118C5AE818C17A84ECCB0DD3787894DBDC624F512E3A9F0
A7E1430246A32726F6F6A41B85CFF4453E6904FA00C3F119D5BA6BE4ACFCDB37
EBF345EB61CE87A5D05AE9066A0FF426F1B0C6E8D408B03C1F05DA02783D37C3
54531718F8F084A25DABCB548B364779CF208D8C738D69C5352DF41DF05300E1
F099FE3D59A7C2C23A4833AC99ACF296F5A4633F27312DBC83F1F499035E5965
545B76815E11243730C59E6E193F9A7F0B229F1ED8E9F788EC8B75685D878044
161DF989D48DC3050286CAB10B808985B33B44DA48ABEC376B06EF10980814D7
4280F591EF66A12F73D160231B5458729BDE2169E3AD555228BAE60C34A328E2
9EB3EB895C9F6108DBB5A23609BA5F042562388C3BF09E5CFE0715686C4FAEA0
DE9E8E6D246CA9E027715C77BA39D4FDB8BBCE905E81870DCF16EF9825F6B200
F124AEF8F4933B617E30148A2241A6D3C328AF08A8003F3A2F8031631B4426DE
8DDD877CBE228E89CD2A8371B378A6B5C5D7435FABFF7B80E428F4E941256D82
7F97A44364FE0152F0BCEEED6FC550D6876F14849191E86CDAF94D9E265371C2
7324128DC7662E3EC0039B2ED7C16636F7A87F0CE254695603CA03AA52351FAB
DE78E3774BCC67674195C88ADD8765E9A2C071B46F66358A5F430DAB62D63A47
01A298561B1369D443DE01A58E102FB21D5D2663D9446E0BB53F4D93CAE0A9D4
3D5E6316DCB41169D5DFDF6C82F91F7373780F93DCB9AF668DC4D59C09AD6900
829A429BB95897F1D4A31DFBFAFC3966D3444F6639417730B4C5C4E98C0346C7
A2735AC8689596A8A91CE6E21D2F3626D2E5634586A77AB9D2F2DE7FD85F06BF
F94BBC647B4672399B0176D5DDCC2580EB23DA1182F3E88C7419AD52EA2A5E0D
FAE8F5D6E2A4A8CBEAAD375D3AD8CD9C9220BAF24D01625A55244BC5F0BDD4CC
B8B68E4B93089FC30DB38656FA5FD0DC24BABC8F61069E1654CFBC8B68B92A57
0D242E2DA15F3DE6325D6878E8D3505F5A1709DCE3C83F0169FB113C834CF66D
8EECA55864796A716236EF4A618819AD091241680B5BCBDC20DF4FEC05BF4099
259DE877F084D8714362A220AAA68E2C492558B1536858178242AD57CBE31B59
A1F69DA4653635E315EDF9123BF059CD501615809559FAD1A39D152ECD5970BB
60909885279C6C700C00CE0E5F6B73A9E7DEE858DF2CD91D6F93994C7273A832
23C3F3B6651F28209575140CE0A510569D5580A6F30A68A01F19F4163CE994EF
7DBCF2BA7BB8898CA739845138BA5C2B261873E9164196CE6CFA77FBE0B882D8
548F0AA0C47653D5DEED78E831712D3EDD203C3AB255A4217E192E0DA169F978
D75E2DD7EDA0058353A896572A8E6D044771A6864245990F8DE7788E1EC80137
7D19FFE97D0BC94F2F613F172D96E02239A9B075F3731EB7A314DFF26FFF0695
C1DB7DAA1FC103CFF26DDCAE11A1203B2815DBEE385EBD858BBB898A90C2CCD2
464E493A1B0A178919B5160FDB1A0F93FB0630AE944938B0580A27D3DFCC5463
C7DBBF4B75ACA215D797FECF39E83FC4DA6195830EE86E1D56BA5447F332FB13
B50BE6A4A0AEC170CAE810FC68B3BA6783B1224D70CBED6520CAF2CFB5B9C650
7CEF166359833E7D093F8230C9458EDF8799933B157564878A3E732553601F39
272F6EAA082A5B71B298A8BDE33065DA5C9039368898155A9F4059177B487C5F
593D9139B304EAC5DC428D8886727F5BF50E1C0DEF297E9210B4207275E66521
D8664DB24C416080CEFD52292648771C82DF69A1CF1C1EFBBA5C8BDF226CB034
D1F261A0A1DE83DD89E623A2A7C50628B180CB258A882D000BE356D408C2FA75
618B1A78CF0B74535E437BD4E33C21E172F4E8E237E8827587137FE458A25E6F
B3D3A73B074163B65F103F6B1093E7E1287F2C62406B67452D82815446BA4CA7
C1374ECCD8C8535BDC1C86C409856329792EB18544A049CAA44649A5C09D8D04
FADB1FD83F056774CCDEF0348AF95F259788147A0E7F067F6017B217AB324514
4EB6A847B67F2D216813A37690F3CDDECB7581E1FF8CFCC5AD897210DEFFD7EC
DE7FDE7E351865EE37EC566BCD2479A34C34A739D9BC804F7F31604A698481CF
E658F8C9F5926BACC7C904C052F4E6BC916EBEB2273D03EC9DCACA07A5406CEA
7829A9A72B81BC846301BEDED4C666A10E9B1FA45E62BF34DC25270DACC4BF82
F404653852ED826850CEABACEBAB1294505E7ECB0D3D5ECE734F43BA20167ADD
69BF0F5EE165832AB3CC1C4AE8A9E8A1ABFABBF09B979C85422456EB4DA2596A
3CFBA486FBD91D5CEDA063FF7789A16B805D46B2CF1FC98826B12DC3904F9E62
BECC8B80C6A105F68D2BB4F8411B4429F93B4BFB231FF0A8B6CA5F80E96CA683
BF641B5F67E59B86D0D61B6B2CBDDD3D66B2CD9B8C31090127C11D99E55D79C9
B95331FD79655D2BF4AFE80C0244DCF7AE405F1B13971981288149C1E0F791A2
308AD218913784E6BD8DCC66EBABA65FB9496E8CE5C80B5337A11402F9616947
2A4D998E7EC990B0C0D335B338676C44B30246CE77B31BF0F3B9E07AB91C6E9E
64C66256E76611483AB052A8E241F32E44411E67C254421D19823AA7B7CC644D
4CA5565376CBA3BB2F022CA4265519950414F3F35323ECA6E7C58F6F5528F91E
EEB3F8B1D59E18CBF1833FE72DDCBFE4933817FDDD3AD2772FDAC6E069E5FB23
84FD60A2F8870231F666D400705049E67B8185BE80DBA3944B0399AAC8A03C06
293536568CD704BC4D1F218266A056F66F4F40CA3617A4CDA60713DFB757DCEC
05802626D2EC5E0D31437F0BC026168C59D84ECF82CFAF3C91A8C086A5521CA0
9BFD43395B8C1BA43A63AFA2C8453C13F39AAED50168D02A7940DB885DD20015
54B31F629AD949B77686D552E662EB068162EC56423274D6455E6D1D7ECEB49C
8B490AE44052E47C90DAC0B389C42F4877F48DF05BDBAC2F8A4B60D04FBFD0E7
0C46B7390FA2C99D6C96AEC107A16794E1AE2420460D29AAAF0817C7279AFC68
1C60C480EB2B3808FD25A678F1C4DD6E04B05CBD8AD434655172A51DB2900DE3
A215D4DA11C29FC3413605274523062ACD326062397F43C0C5D96DE652F30A56
7B46296AFEFAABB7A874C5AC445566C2CC307B5CFAF789A5F4E2B9F4BFE1AE85
5973123E65C20B810E302E0E439FF7BFE86F586A4569C030B0D05C06CFA7999E
C1C71C98BE491EACF01301B03ECBB7893AE123FEE129F15851B61ECB35444149
A96A46AE6FCCCECAFE2CB8C0D10607A4BC0FE36DF50F7C3F5593D322C5C1A899
317A0143A8147D3E2C8D1E84AE575DEA75E4ACF00573369BDAD4C5130231C699
D791341F4DB5D7B1328A2E395B65741EF6476DB581F0CDCF524633705EEF462F
D2E0D0743BD9D99DE138DD644CDE6CAFF4C03327F304A3875CE043BCB8D68C6D
7B23B4A4E32E96EC5AE5373FF69E77DEF93B2DCF6C0A206AF4A49C913B0A97D8
25D181889F938A9EF65D655FA9E5A52E9D6407A08790C6904410C1A69F66F1E3
1C21CEDC9DF88E7B2339109371E1807F562BA0F4E2FB830B63F4688938AB67F9
73C8B7E6628886240792432F6EFD6E0B3ECDF7F7A895B23D6EDB92EBBD3D43CC
256872F31FF228D58B69BA4C5F2A7D50C49139B58D81361D062A0C81553F37F9
76354C09FEB59B3ECCBD317BB4265F0526621EF3FC7E262791B90A22C7E3FCF2
8736898D95D46B8EBDA1E0401632BB3DBD5B0703A9EB2EF6F2AB25E2126CF0D4
788CCE314B58738B5F35762B76DD9EB41A5175B297C56FD4021AFF842B23B9E7
28315A4F8CD33D9EB6873CB85A65CC4D41267D9ABA0A5190A24A7868F066E430
2F51EAF357932CD28134457EBFF735918C7249B83682232B439B4E98F1BD3ED0
7D0B43CE571E842EF8912687968723409A5CC5B7F1E56532E51D1B1382AAAB80
F91CE72BF009505AA88EAF4FE964DAC71D9733C36D32017B2DEF6DDBB1CB5ACF
7060F725D527503FCEE4BFDE9A9D193ACB3ADEA0715AD4F665790992FC3E72AB
35EBD8638D0A5B16ECF4392D8317354B6F302D646BBBC26199D9BF311B735CD6
DF0A16086C22987C93AE52F1D852A1F53AD1A9CED998F03EEE08451252EA2FC6
2B16CD2FA670101359A963032BAA0E939AD8F28D0404DE17A9D53954B3F4ED57
98B17DBF63F2F9E32D642F062DEF0460837ECCEA1E0442661F531F0707F54CDE
6127B1107E7FE33C361C951FCE8606EFB1AAAE2B640E0C5DFF2661D9A34F6FF4
F162B8EDD675501FC4712F26FAD9A30BC994B4DDEA2A2DD31E53B2D0A299FACD
293C000F4575870448F83453CB36AD51F52446BBA298294994F6E91DE096C77A
066E8E60F7724C043AEC14EBC25C250924068CF8A810878B51818E314F6E860F
8A0EF1A5A1BC66953FC4074864A82FC70315FFC21F726581DB934C859AED0922
0F1C98D66300F588B5D2D522DA2A5EDF409AAA9A95451AA274CA0869EDA2978D
5182168797FB3A1B9F8DD3C655D6AB6E29FC273DFE1C8A4947704FBA4DC2AC07
CDED21A07742A153EF36F6E21C644B81275177BD61C8D63C45C3E9BF237BA1FF
C0F563CF048A6521C72696DE1CAF1B3560601425BC98381243A4DA9C08B39923
375CBA5ED6BF815C37F554C5E5CEE10C7FCAA777E7693B08873D31B459105B9E
45758F8B9615E002E1D4976BD391C84123778325133D740C6619C87FBA7CA429
29C70901CE54D2A6410A6F597BBB5210C30C10C4E63E658399F1A4A652467A4B
93E7CD27987F31426096B768400278454CA6F14A3411E48AA186CAB78FD5C987
FD4C7DE67622B47DC477AD8E852B7BE73208E56BBA10E6FB26848DB311C88047
9C7FC1D58617A4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 72 /H put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DF78C6A
92E4809D9EE17C674DFA503700AA098B44C0A422D2DA0EE611A41C5DD94E4543
FA4B87601FEC1A6E5B805A0EDDD8A901220A9763DA32471DDD5F620C7E451943
A71C334EDB0BC61B5534D7586C4ACA0080FF7EA271019D39D9F2E90F712DF853
3B2B6D42AEA28A08F8A12C4E64D1E01B09FE682EE128C28E930169DBAF16CB02
2ADCE9B243C773862E06BD9EB89855E00FA4F2651ABDC5D1E325C4F1739B462F
1998B2FAAE8AAF2110740A6F22569A9BD942A13C1FF22C22F84C48B075063B7A
789EB1E6F3A07B777B22BE5EA7B6D8F16C74AAC9214825540B01B34472A56C5A
B4179BA79365BE5A9574D5351815A959020591659CF35B170D15B89110845142
660F556F69906E2416B7550D5216AA51CFC2969B1167135C7417CFC430FE7C80
16B3ECB533CA84397F0CABC125351097FD8497D3BB8E9F0454FDB31505C03137
97A2C62016519BEF23B160A29C67BAE7ABB9AD43927837F9B19E1BC01AD5D908
1E247BA7912A5ED1744D95E2567CB1C2EFFA64B2ECAD898EEA1FF192AF561E7A
FB4C6710520C895701EC10BF0793FF880C9E2BC216AAEDA4CD5A9F739E976128
3FC8BF2B9B0546E7C1E9D971C61DDB4D12E9D6A39B957D04B07A36EB7B608D2A
D018C84F470192BF326C93EEB03E750342AC615286E4AC04B289D3EDBE86B805
2ECDDA95F37929EE55B032A5FBFE5991BAC2556AE99AB2DA4DDED557FF9ED386
DA52D10615E700751C842C100577295F4A4A6E8ACC3C497A4BAE5D53523C335A
4C690E7BF4BEB7FD5733825CDF4A716744D3D19D52BD7CE32F63CD69865AF201
C6804F829C4DE8EEAB740828C19BBDACAB70E1FF207560FABBC42680DA46936A
9FFA26F1D282EBC19257DBC8AFC1D266C3CD4D3B9F7CEB198392CDFEAAB4E9A7
5A7A4817071CADB863B504A3B51AB7386DEC1D1553299043885CBFBFF18ADAEA
56771C7B51FA8F32FB10CD06184AE9C945344954FA49B03BB40DE7F8FBFBD36B
12A1C1F95A92C435208D09E1CA8A979105D528F46923FF8EB1F262505D47F4D3
7C1876C615489F76449C05CDD1A3E631366FD5441FE2F5A3B451290BCA5D5413
20D8DE866103820D7D1EB275BC1AB6F8847D80E4BD474269F936D2A152D962B0
51BE2AD06C8870D1AFC62C10CE19B162CAEFC82368E361D4034E462F659DFFB6
4C404825C329C8F2E29BB880EFC696D77D210536D7D1148AC9EA94C31AC2EFB4
24F73D1CB7518F207500359B651D485E23CC776B375C6FAE55DC2FEF611B802E
5B34CDD2896605951627A6010A110BB390AA5312E192C2AFB9293EEB016EFB6E
B11CFEA1E3EF6F42974E0BFBEE0F5CFB7E4C30290176B3E0B546690BB453861E
1F1EF1709625C6252298B7CF41850F6CDDFCF2AFDAE0299FDA210D80EDBC25E6
8F37C127C759E4AC2BC639F1D8B96A0B21897DEBDA83ED31DF02F789D9CADF5D
33E8137ED7C80E3F59122480E3550DCCBC72CEB885C8D927882B91A9AEBF21A6
B56BA6F0EF04DF0147757A6D5C9FA0ABCFE99CAD99710371D2E8C5D72F07E01D
59DD1FDAFAF936350DBC9FA19A444C09C4146BF7CD68738224D03D17BFCC27DD
BE651B99D6DCCFD2E022ABED2FB1BE1343BEE124B8EA44B8768926ED98FA9EF0
212D7B431129648347A9C8528D36B7FF008B19475A1CD6B4E542AB5068893636
F5893286CFC13035CF8C424B312D1610FB7BD7EE4F2916C96C05AA2CCE26A9D4
CAC63E65156057701A509780D9A7E2E5A2C2114056906816544C9AB6F2DFE35B
8757DD28326BEF1B93E9FF8BE3ABB6A73E4E979DF31D1079A5361C14C248027C
BC9AC7ED80AAE07275113AAE1E5F7A87731A259D2F919349BCA2E59D96B57A25
44E0F0B60E9BC25621B7BE718F040F3F2CE2DCD692111C35F0D997C1DC333A46
85099E7393ADE331A6F11421788451F5F643CDCAC3867EE7E94E7FF2BCE7F6B6
F5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.0: CMTI12 003.002
%%Title: CMTI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI12 known{/CMTI12 findfont dup/UniqueID known{dup
/UniqueID get 5000829 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI12 def
/FontBBox {-36 -251 1103 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI12.) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dotlessi put
dup 19 /acute put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5E0311AE44B83C3E
4FBCDB0B74ABB18FDD877252FD3501E05E597A77D142BED9940318B98D508672
4ECF79C43A857674E4DCF2556325CA8CC1C432E54543F706987376A084BF512F
0E4C517917FB1D607C83E479DD094240C3F309A57561CDF8496722F1D3EBF6FA
45CD3D7D810E2C07D39BFE08C0A25FD568DD37C2D182E5D30A7B2855BAD24559
D455B29B1F723BE1C4F827D72B1156DC2C1EEA76C9B27733FBB23ED36F61919B
4A6E8253C8C05F3D4BDC64B99B8494F7C37E9C19DB6A9CA8E9B0F9E7E3346EE0
EF416016CEE932E53A26599DD8CD09D77DF591A9D532AAD3E321CDCB28636809
E61D9EC969F2E27190A475407B90211902429778103D18665A681B0DD51F6E92
58D1288E2AB3FAEF05854938FEFFD3B4F376AAD303ECD28B23649E5D4C3CB85A
5C9CDCD1853BBF3282BCB5CF57720C6CF7AE468048D7AE5BCD2F15DEC1B33B5F
9917BF69BB64261CF101BB47A09E47D6508250374D00ACEC3E3FE8C5330AD9DB
9D9F60CC170F2FD6DEA12DA24CEA846E25ED6683A213E4FFD0BA239894C920B0
EFF562ED994A7A46F8EE2AF98F88317E513A06AB82A629979AAD3ACE316E7074
01EAD920A9E1D54E8FBD623773429C58A2964B498990E8420E5F7A45B3D4342C
1AC109FA67D4BF33C9D1E0E2973BB8B2495DDF5A7F8E306A0C712BD7A7FC98C7
44B26D102D3CD44A320FE89CBA6B3AB39627DA4679A5BB7C27276B34ED66260F
DEB659189A797BC41D05323454CA4600A6D840CA3C1DC31BB7FEE8DE367B8177
3F1546C9EA98FA9F7CD61F177CEC2950526D54A6E7A0038F2B20609E7BE31EFB
51FDB6829852937071FEAAA3A0E51E625D7FBF2F7C224467C7DB77F7AFE006A5
418CF691841AB7A9923506845BFE066769A01A51EA48840E898FC6FF0ED9C2A6
1DB61E8840029ED92A129D38CAFAD4084B17679A84A262D2F9376363D4B5E46B
1C94302E5CD24CBE93A27319A8F79138414B2E94CE6F78C6F06B544D5862C2C6
297EFE524BBEF0CC2C32F63CDCE433E19B52BF0C2C7064E3ACD429E2466BB85A
ED82C6EDC8AF5D75855B43A61504128F75C2DAF7F5C4405BE36C136CB809DF31
A40E0DEE80C10F6E6442CDCEDEF8DD0C01FB2C035A1D136693D366552862A421
81A290080EB8A3C5160FC2CD760A69F8254E8B0EC8E7280EC33802EC2668C149
73CADCFBD4E56A1E7A9CDA3F6A50E00AA536B02B4BBF4CE60B7A791098C3E434
B5A7F17D6E461FEE23C6C8C148C54D14345DECB7A619E56268131F65F86C51B0
E45860D46A1A798134AB3283BC8B73D9B39EC5D0C1241A85AA46B02E51DE6433
60BEAC76351AB35D8DBFD60C6F12F8B32E08C671E0269174E1E142E687B1C558
5668FDA480255261DC29288FF5ED56B50DD8512BD4948F31F14C71CB4F8FEFEC
DD8E4F4EBE9C28312640334BE454634EF26B5FD02A93210D487AA4F3AF284479
303995AD31F4A6DD2C2DCDED3380D50EA1D8743A3C6561CBF4DE91634374DE87
FED0CF17C73B49060648AC6AF2921D19FFE1B7C7E76AA84600078A0160160D5B
BFAA2007AE70640698BBBFEBFA5C11F351610023F563840413AF6934156D93B6
551069D681492EE73D480D648503801A921E37868B4ABBB013B628772DAC3683
3E44C318352E7700094ED0FF624AE560D2A783343B266FB925AE0D990B65F8E4
7A9725F23F0A08EFA08F81616A5D51E5EC31CD1BA229A89AB63ED782A6D716C7
1F00BA66A3158CDEAE3399653D7A29193760AD92F65C066A4DF35F91BDE771B1
74E17E4879428B5692343AA963A349064693B52F14B09C5F4B329C4AF4078998
D3F6C1046538F989C8AE84AE032A112C3E657907EE7A844B14C6A0FA8C9A1CD9
797E195186C478057525CBCCAA0FFB09F67F97E69BC402F6199B6900D9F285E6
47D359B1728728770C95B1A85E22D2132FDE7075F8FA1123F62504E53AB106D7
99B33689D55D0BC0C552745C5129CEF9F874850240FA6BF5F4779E35BF15A8F9
F425ED40480C60FE3ED85173E620320A462092834C0BCF6EFF9F1D5912CEB941
9C18D8EED5CA36CF2C7D3965BB0929EDBF7FC997A9CFE79A9FA9C54A11E1F421
7F3FA4ABB80A3C60E9165DBFB0EA765BD21846FD1260F1AA4644CBE05CEC736E
638311023F9F51F4C0166733A32BC1F615C8D9256E44BE8C2FFEC45B7B612FCB
21C52DB57E87EC8E166498AA8A4528B7C612E3BB8117D6BAF5CA8F9D038C1430
B7EA8699F31ACDC03774AEDDF6B73233944A1A89ECBAED2EFBD30DDF42821846
AF828EC54BEA6E7312B3255A7F55783C5D4AF1D9780A9670C9C7E02A50535A13
6D957F895D53E4E18A4B4263695DF2BD9626E717D5C3B80E908E59EF5D093798
7215550A5613AB86D67C1F89C95FBB0E6ACCAAB397479D483AEE4607E111EF34
2FD92DC7F991B6AE84BC7CB982D819A17022ECFEFFB981A6F678655A6278825F
0EFB5733C5F46529EF1FBB01C6BA7413BA9211251C0A70A470F735A96F6E0D45
DB1342D6B97ABC234790D346C74927F5C910F71918D615CA907984F0229E3F54
4F5F75AFF784C7A470DDCFFC308ADF6EF43979DD3B54C6A8DF3B53DB783B81E3
9C57413C3A317419C190F207720743084DC20288C1AD08B8B0FD4ED805FBA8B5
BB874DCE4AE93AE3B8A117612787DA6C8C7512191BC36F6D8AA38F39099474AE
CD570CB5570BBA932C9C7A63DD386CABF1956FF87C266BF145ED5D27547234BD
943841047FE9A41C24B82FD3D3EA49A56C56840B1B359FB2A3F28E10AB09AECA
2FE2520DEE9B5542591E72ACE610DA4BF31C6E204574DC78033008F019519B2F
E45C99F1B938D212602E824CA1CA020211420C77FF545DF586702451B0923EDA
CA15BFF98CF2F0A56404591E57F7C89CAC6D22E0FEF9094770CF003801E5CC08
110B272A50805F89C0BB5C2966B9385C26F4A5008AAD97A29408A5116BE613CD
5ED9F85D2BCDE96FCF3121D5EE1D455A4CB03BF2AC33493FEEBEB955EF737F7A
EABF96C137DD84B3EA39C61CE95B5967405CEF17D9CF1BDD1199346F95E77CB8
5FA2D38D858DAEF10D0DD660211C8C4C69EF58B60DEDE48DF76300EAB8F0A547
6DBC87BEE8DD4EDFE3020BA56F362503AFA62D8C13BB270C3884560E227AFABB
5D810B2B092531A679485FCFFB88BA8313646B644A35C413053DECCD4B371450
18F54701F610E52E727AE8D25A8093B60093FAF775B6414F66F43F517488B4A4
00AA4F672A34A73531218601904A7F50A045E80CD804D028EAFF506EDA1ED998
ECF16435C6CA8E203F2A813506F4B8CDAC0A3D69F4B704AB80F170EC87B7C732
AEFCBA3BF4050A9CFADB87F7AD4B53BECE197C10A2E84571A640328B90E9A294
73F6CDDE4F4AF9F1F3A257BD130454CF95D390ECA95FC4221D5041E71D65FC21
8323BA5A3335E2E905E33D5BA56BBBC9CC30D25764A066D013B116E693C56762
4F683F112A572C2C04ED041CF7BB4FAB0D899B3F2679B431E8993A650184CB4B
1B391B39929AF803F868245A69C964B560A274B07DFCB88A6508082DD6092E38
80D9187A146B60B225CA22F593AA6B4B7EE1EE41A0D375C4FA69EC6C8E02B54F
B855D385C973A7223DE22465D039D213315C35F0D079E8CD030F62993495B2EB
A0F9BA98565F89D2E09BB60D90B0CFFFF1F0845810ED27CC8F1088F74D48A30D
7FA0728498E78A381B0169B7678520EB5769522BB5838212D32C8C1ED5635753
EAA3C14E6640BC34D43EC162711996E0CABBBDE0932FCB6B2838C22C0E42DCE7
1BC85E372F24C1145655D59CCD50EA6E1A673CB0342BB744A43EA1B9104CF736
324E367D82ED67E01B0608294A91386045C1564E4E417E1A62EFBC148C0B4A56
73A98AE2F2433164740B839F851F9C38124B3C01CD976128DF6A06FEFE14B960
4573E748370D70F9FBFDBF875584852E70264766FA5CE893F74D0D5884889178
078CB149821A743D797E9577A7D27E7ED607349CB2CC6968A7CE402DF9A55069
4A985B517B714C603F993944CC64083DE3D5F969F9C5913C297E8493D310CA42
795C94740A5E5D3415CE7B4A5AA11A940D93992329D8B00213244405BBE73958
37CD65B6AEBCCB2263B937F671FFF3C6314D400983E5AEB6A34709D854FDD0AA
3D27A62BB23E253E6E2CA994294009B857B5F1FFB66E772A0BF9D83F4F72B89F
51B125AC9E495343C9D84A4BB4759DA4D2ADA38A195C7905CE288FD8634ED996
9068F0DC8DD08F3D3A1288A271E7F7EC4AF76EF6A78C47BAD95FA14A3AB690E1
19A13639774593D77FC1610D7F1E25A31AF94C5354B35500B8E57B0F65AC82C2
2A519581B587F5E3C941734A4269842D38F74E89C2AADB8ADB3D16542B0485BF
BD4F1EDB4064E96A330D735F73789614C8D606DC553A0A2409CF4C595AE51505
CF203817971BD7F9B3346C036A18FECA44CE1C2042BA4E7FFA3FFEB6371A06F9
30082F47FE87B207E13A68BCA122968AD74CF6A12EF6767988F0EB0CB64981C9
30D9717F6C7D07F4B37CFDD68EE4480C0CA305AFA4BD21DFE131D6715E839973
E1271BF576F70C2F8C6827B3EF02CCA123EA46A02B2722E06078C3D9B3743CDE
45B43B561743264277D0D1FCACDDA80E5C6185E90F82D1DA4DC076B6BE49D2BE
F03EF513F1861CF66D2B7F8D52C7A5C21DF1276B72CC1CDAAB5A16D20722A95F
8B1EB6E6B605D3878831204A0EFC95CB3C5B588D4F0A540D466D13B8468ECDC1
DB08D36E7FA19709A67A0FA08421053EEC9068ED464D29BB1BEDD0BA88882707
9F41334C3BD3F995321711B6ABDE3C12A8907F930F7AF490D774A05398ED03D6
789D91B4DACEA3D8EE11C2CD850A6EF4128B60EDE9BD37710F43836EF6D53FD2
D8123F81EC6F01A93A8B36FAE49692E7276F7CDCCB09F332ECE359E3E7DB2364
A60B192438FD158B18CB3EB40FD28F74A740367F02D5CB6B53959A0D11BDF388
9AAEE02F0E96AE2F802FF08BF778F26DBBAC8F5AA04CF3AEB180235BFDE493DA
4D0B13E0B61696A8ACE4FF7A09956A1896B2875E5B2BDBA09DA08B9589957E85
51084D76A00FB728E286CCFD2F53088158005599835B18F6F5AAAA6051270AF2
59F7BF641B0AF4E79F4491725189B89E57CD10B442B8EF89345D04EE3E18EC98
217D81FFB1B473B9562605F7B0AC3FA8CFB798A988E5FF20F068A6B2399C71B8
2E3C19E58601B0AD3872170B0AE8FA33F3A50EC5E67EC22C00D3DDDCD7B592E1
0D1CF31DAA48D10F7C6A56CA052A5AE914EE08CEE011FFF20D00B46A7738C434
D70F1040C611168D2C1851DBA89DA526428E6D5DDA244AA267AE3559B0C7DC8F
AAE1687F823CE628AAD59999E74DFFACCF7D3412B466F6C3A315D8AA3350FB18
9EBE417717C42F3201D19E1870A2A3424E96F1A9734F32E85DF220E08C4DDF8A
AE6F3491A3C805578924F36C146CBAF1D38C8C18D18E5A9B38236BD3E6B9E5BA
595F66A2A8DE9F52C9DFE00ABA5B99806A87D2EA39EF2C3A8D94FBFCB0CB5345
9AC36328B89AA13E4BBFAD70314009B0A2588847B7092C9EB938DD069CFA3679
73D9CF01F9756B931B34E70F4A5F1C41FC577515A5CDC49FE2C9A13D62E7E612
2AA5969248241BEAEEA5CAD34154EF5F9153D85ACD6FBD6B7F2834BC65C77E27
5ED803220949B14126BFAAC7728CAE16EF205F408232C5D7B83AFDB9C2191997
38005204EF424640DE1163B577274FB455EC0383BC6CC17F35112AB638743DEF
9954A5B2DF6A50DAA8662967E8E2208A9D1E3506309A9EC4C001CF91896E79A1
F3F6FE998DDF7C7971707CF7DF7415F6D42EE28620C0A225A1B9E389F397F972
552E566F748613EA1FD417CAA7B90A2BEC1AB07F44BB8AB6ED829F2D7F4DD597
989617E6BEF5E701498823382DEFC2D5FD078DF888DDCA99E62890AC0E5BE8BE
0CB662B561A49D2221847151D203457C797A904BCB5A1D68A51EEA20A167047C
36FF0FDD999E46C857864D1CE7568CE9518230418124EE5E51FD96C0FD8EB7BC
2A49F49AD72BB71F849B112147271000A77F41CF476AD687E6BC3DFDDE0CDE1D
ABE816BF31348D25FE0A11FE7F5559BEDFC24A14F91BB73BE7F5FA95DA24D705
3DA96E8D05B84A1E5BFB0F15D7D4638CE4C63B74404128CF56A016180EAA054B
85FEE6937681557D0B5BC3C560947D456F48D7F4CB7A5EED52B103281B152E3F
ADCE8B98497B74B05096AABA261D2A2EF56572904ACE2866C6A081C926BAC3E0
DE02EBB63FA29197B3812809F08A9E3D5ECFFF751E60F7082749F57352040E06
CAF9290336395684E85FA2446FBF1D0223F74B0D3464B06975010B83D0975181
3DB6C0E2967CFBDAFBD555018305184953487AFAE112D36E696DB8A18F3E3A74
C8B123F16D077DBBC85A226A26D406F622858EB7F1646BC0093A7C9711A1DCD2
6302B0611AC20A3870195D8BBA4E8E4F2CC73030B2354308CF8C06D68DD7FA14
87CE9D6FC7A8A356AA2DC356231B4993655A0FF55AF67090E2947C2B7FB9E96C
EAAF52A01ABA6D69B738D6E3D4B2CF1E037D991EB5943BB0E6AB3868138CBF20
A112805F4CC00C65A4BE86D7492C23E34CC0BEEFAA0403E2AC21FD33D7A7FD09
9DCAC0BE550881647B322FE5806735FD993F5ED7C62173AB29095F67A626B9F3
20829E4788786C978B4BC9BAB9B3A750F130F9D4AFDA6EA3A7DF09D7615951D1
0C783A653F0BBFC23902019BA276A6D7944F1A34C1EC7E2710091C0B94CC3938
01C50C5E4A9C19F47D69074023F574D7A7302565EF9920A8E2A5076E6E3DDD2F
409CF1AB8BCE348FE63A136E03A520DDACA32571675AEB94D761B7B625AF1626
8BA9ED761E12A52C511890DAF1F790857C3C9FD3FD033A8330CD8E19266FE888
76AB1F3B3C8BA1FFCF3A6CA570290FC1640B6C4231D8346BD346E647D138B2B7
F7861E2C7C7C4431E3E91E318BA1DF8338AD4EB4AC104EBE7AAD8F5A09E6AB3A
48B9EB51A85277B221E3A22AAF38219B681918DBBB2F77FA8AA27F310159C763
A6E66D93879B592289B919B425FD7A367B7820FF430100E1EAE0877F84326FCF
5F1DD99964BC6BEB63528D2B218CCE41024EA2CE703959071A65EDE99127EFB8
0CC01566E5E52DB32D01512383A7711C7770AE17A71E5D95629642AA79CD5F01
D37FC89696F25C2EE4DD70DBDECEFA4FA2CD5D2F8ACE75937D2B1FEC7A31A893
16D314D800AFD3EA28068983A2ED3A7C75A5570F30A2824A47D6A789AC554C3C
A78C2DE9771B86F73C66EF8E1D0FD046DD4F19A31EEAEE04D5F38B73C623F326
F146C7164C9B18B5EED2113363092ADE0ABF0D7BD4C10BE9766F81C34878B236
1A0FD6D8AB4BC7E3C01F1C880C3A9186E4006210D22EB64CD7690FDA750EAE7E
C87A9D29128D49082578ECC0BC977D91E9CBB1ECC0D3527DC0ACAB39402015F1
B067FC5E7705586D97E81F8911FC2BC8E7C077384AAD4DDDEDBEF65CA4B75F6E
39E41528CF53CADA928537D557B518BB740593A6E4D0100ACBF126FF20888342
A0D3D7C201C4CDE8CBF59A1BA4F924E4EBC3E02883D5FDF2C8249AD8117332E1
BB52D2F621115C0F98037D4962EFAC0FA86B14F3C046A1F7085E40E99C0F2841
8B2C299411F9DC8FA0C8C7E5D7822A10D31D881F6C47B6C47CFA943FF9A9F5E8
D5F1C3E6CCFA324059B942FBA2C6D0E9A3D080DA0CD80D8DF76B0FB6BB706F45
C84054E62F75294ED126A95DBB4FA2D09EF80D1F2C507DF980D3DD2BFA3DBF49
6A99DCC954BE39E51507B12ECDD92C397E82B1E979FBFCE731CDDAE1D9147448
8C312DF818A0E08266A2B60C9C0902AE64276F7A1C6D7BB2EDCCB2E3B7659B13
AEA47A527FB302716624B48AB754218E2E3D99115C606CBC90B5EF73B9F99439
6184472986249C8D8E52A404FE76E17FF814D5BDCA95AC580B44DAE8C593939C
9E7C0ED996B9D2B8118F71BC2F0EBBEA6D7E18FC7CCDC78BF05A034BE39DF9EE
C6BDAE8886C7058B15DABA55E85757137873AE811F25AC7EE3A0CCB8649F6095
7249EDD95E20DF06719DE1E109E5BEFC2A4098E77020110C37A90B5BDBF09654
0F72A7AA528BB009E0FC966D03BF5EC2AB2F109FB09BABE1DE6A9F210B590563
EA94F930201F1676F3D23805CB9620828E3A3B42E9FC4459744013528BFB0E0C
F46A06EA698545C376603E34B998965C47F537F260EB79FA98C230E7ED5D4E50
9039E8A40DA24A30CB183C5CDCF006E69D4F02BE5C215D48178A2457F9D730EE
6938E1BA8AA780B544FD555E35E0E849F7EAB85D41FC56BBAF1D5853A06437EB
67132D3877B5E9635D9C8B937E62FEB6CA192FF5210B4A0007AD0D52D97A350C
2BA0B54DCE2C3F87A3228FE1476CF394C4C8430BBD1FB1626DC9DA0501F2B1DE
7B539DBBFA30333B49FEAD67ECA9FE1DCB131C75A80747D2FC709067D7DE954A
3035BBC5B27B39503CA05D4E2DED4E58249B1C91B26E01FC737B06DF048FAC43
FCD4AFFDD664975ADFC839491356FF52CB64098E815496F852D1CBC14C13CD9F
A307E7F55FE1497E20F2FB58D201385FA86AE4F6712BD40410B91CBAE7C38BAC
9AD358FE2EF22F34C684466FA6989D32FA1F1D5B41339C8E5CD31C1B053820E2
78E49A51BA034AB1F7FFA5556C7FC0F7D171AFAE1255D64BFD86C20E7ED3E642
D365C9D105A791471E6DD2260843FC8BCADF49715EFAAB96D35DA734541DB52A
779D494FFACD175B96553792D1659A579E9625F8CBBC1A2CCB53FADA2CD8CCCF
F01DBA89F515EA177BA6897D8700B9DB61DA5EDF91DE94A50F5BDDE15460D84B
1C5347A2C35A57F93A182CE28FFCFFEE0E2AAD6B500733B53B92B654354798E3
875FD06F5E6E3A2D629461953FD9D4E4998339D15E239A85342ECE72C42B398C
6081AF8B9E9CA6D4B12FB048E8190B93EB39B1CAD207152C8EBB6B49386466BC
3A583F11198D15EDF9D91A6CA2E324BE21B7B4E525527BF9A3F35BEB482C8F28
5CDA5A42F413123EFD609F9D47C3395BDA9FDDA730978C2B6FC830CCD8E2D0C7
980E17E6D0F9D4320FB4FA148071204AAAB9118DA71BD95959245ED1E9B47DF6
DFC304FBB1B5C9D3357B96983476DA502D20D8A4C0E8F2C0845B0C59AAB859A4
F97D67040ACAD0E5F593B9EF904A1C8BD6771633F2952EFBDB858777D1CF9B80
AE9D1FD921F7D523872711871F4C0DD07C91EF7890933299C8755AF3A7360D0B
01B844A38A5D0A53BF0911D6C9CD520981C9016195C7569E0C0B90B09627FADB
B9F571B1BE8A1CA41BCFA45DE72C8CE27933DABD281E978777527ECB67D551A1
BC9A05A00D2E1DCB921524312CC9976623B3FE50EDCD0CAD0853EFDA0FF2B8C9
06D32B5A461DCBC6EBF2C241C238BC789FAB82F00F94359AC74DC3F275F73B28
5D4E8E4E87812318DF81746EF342C6A82D7C4F4E3C3AFAFE5534BC8073B52C0C
D1A78725C2AA0CB608BDD4B747C04B4790E6974449D27CBD0B5EC7AB95B9C66E
6F6EE4CE4ACFE877E096FC7AF1A995B487EE54175C7909F853737A874D92DAA0
9C2E99560D16AF424FDA8CCABC823C7290EE52C26F646F6D5C540FE1B7E264C8
3CFF151F4801C55F2DE2F9200CB1ACEFE62524C526B02AD0E0BA742C544C7692
0B68AB70768820324C991CB66651BCA88A3632708248600A015BE015A2D77D48
B8A5A904991E2B1F244FAD69D866002ED14B7760A3E43BE637B70B99B3BC2E4B
64BE3EFADFD96552A8987D74FB91C543012918F42C17A80E598E6C939DB61E7C
2C9B95B7370CBEDDB12F607C529CFBDB4E8E6E11849E46904B6B1C676948F65F
20C6A68A153CBBC71D9E00C567849BD8CAA01DB94139FAAC4A73449CB4EBA308
5CF327DD7E59EB67B656C92D8DDC293243354A90A8059641B6AA635E152DB6D2
5D2FDE399D3AE783B00D9E9FB09185D31598F6615C85181718FA49E3DEDACF25
C5E84D902E73996574E6E362EC7C5351250894C021C12388BE52892E6FEB72A7
DA0EECDAE9151B4B704964E5FB2641C0330BEC5EF3241C6836236DAEDFBA515B
411179B740B9DEFC63C47904F89F708C61A64550B95C6A9F7E24EB2D4B5FF54C
0C2415CD922D5997E1F2B15B62A98664EBFE497892D94D13A78A4501813C79E0
45F6C90FF4B084E066202761EA5F66EBBC5AEC65D715901D9E0F1C6B8F78D533
51A5ACF7B60B90E6754CBF896ACBBBBC6A83EC50BA60BB2219BDBDC8EA30EE11
D778C3A4859C8728E1CB5A5C9FB3FABC82F6566F446B97D630842F41AB6B2A60
8F3F924C718D429B766BEB9B1BA7AB8DA41A69F2DFBF9C2E48A22EF7DF81740D
5937FFA7DFD21698EC8C062878E3D090C008F1D93DC521CD6BA0119F264AEDD9
35018D616E4BB9BDF1709BD19AAAE3ED37DFC363E50E9D9719C4B7C22C597978
D2FC659A885FC2470E23E8CAF0385EB76B2EF6F69B797FCBDE048E1ED286B89F
D5800CF222331222612A123F0E8C8691845723DAEF7DC79C272B10064E391F7D
D57761DEA250CA2D412FDD82CA1871011D86F83E80D66ED56C0403D1F621ECFB
1422AF8A4B07CBAFA1B2E52E09158AB643293F3A8FCBB55A19C8D6ED1C3DFAC0
F887B31B6B7BB613EDDF05F9C97079C7A46A0DF0E34E184E1668CB65D91C9496
556A797BBF13E0DEE8CA26F76658C639C23D5C1ABF7876D0476102963F5BFA7F
676EC49D771F4701503D6DBC1DEE6F4D159F046D47E632F92A956E46ABC9C35C
4ACE8A43EDB4859EC71718CB63B7B8230025585B5739BF437022FC506686D87D
57CD9875B9E0E0B18B74D4CFBC0B3D7D817F40808C7DCFB3BC94A245887B63E4
C9B61FD55C156360966B7A6BA5E64FAB08AAB788998AD17AECA88ADA26A1010D
283EFBCFF0C95EE114C286ED44ED142A4125A4D90F94D858A06623F4242976C6
F5998FF6C4E78D6263C81CBDC278C258697B73135E82560CB650A105CA6AEB18
AE4BCAB88121F3D5E8029AF37437BCDE947AEA5CB78586B44798C257ECC917EB
58E8AA6955076186917793514556541A4A51903BE1D375B65B0F96309B997D1E
2B0F63F82670E32C0F9658440D47132814038BDF19C7450D165414F56BDEDB01
3AA42B31CF54170DF8D0F66DDAF1B19C59B525B2F6987BE8FBFE5D028524407B
B7E8F64688258765F12C865694B840A1986C3B0D6D8AC2EE0E21D606BB37C6B3
80980D189D50BF1448BF163FA4CEF6E02493C81C4A03B8FA7BF7C92772F308D1
947A37976EEF8E50CF618C442042F1B0D879BF316ADB4879A8A8F1AF3648621A
8087747AA3CAA0E733FE4505F197B2FE6507653896BFB844780C4F7538B4BC33
B51315AF32D1EE3520F99C6CB46B534DFA6B9826AC91B9435A49D715CE43DB3B
77ECE81184C3C4DD027C38CF018466FE29531361C0D9977DC9AC1E3C74E969B4
A7D67AA570DF3ED302A5DB956370B71DEE66D4B73D2B712CB455562AAE827AA2
0A933488AAE3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 170636867 223761600 1000 600 600 (PueblaAngel.dvi)
@start /Fa 138[127 2[124 8[62 1[132 5[127 26[147 70[{}6
206.559 /CMCSC10 rf /Fb 192[110 63[{}1 206.559 /CMBX12
rf /Fc 175[182 80[{}1 172.188 /CMEX10 rf /Fd 249[93 6[{}1
119.552 /CMSY10 rf /Fe 150[40 26[94 78[{}2 119.552 /CMMI12
rf /Ff 249[134 5[134{}2 172.188 /CMSY10 rf /Fg 194[91
10[59 59 5[91 43[{}4 119.552 /CMR12 rf /Fh 194[124 10[79
79 5[124 1[61 61 40[{}6 172.188 /CMR17 rf /Fi 167[298
25[184 184 1[184 1[184 23[164 164 10[109 109 152 152
18[{}11 206.559 /CMEX10 rf /Fj 150[58 6[72 19[135 50[96
4[101 6[68 2[95 107 11[{}8 172.188 /CMMI12 rf /Fk 141[172
7[57 80 80 68[103 103 27[161 4[57 161{}9 206.559 /CMSY10
rf /Fl 183[161 72[{}1 206.559 /MSBM10 rf /Fm 138[108
67 83 85 1[103 1[114 1[52 6[93 103 93 1[103 77[103 2[62
16[{}13 206.559 /CMTI12 rf /Fn 135[115 3[73 1[91 90 102
1[121 7[100 94 2[86 7[138 5[119 1[154 160 130 1[162 3[112
5[168 1[154 1[107 1[157 2[56 56 26[127 120 1[88 115 4[122
118 116 1[94 2[82 90 105 13[{}33 206.559 /CMMI12 rf /Fo
129[95 3[84 100 100 1[100 106 73 74 73 100 106 95 106
159 52 1[57 52 106 95 57 84 106 84 106 95 2[95 52 1[52
3[197 1[143 138 106 141 1[130 149 143 176 119 1[97 68
143 1[124 130 146 138 1[143 3[149 1[52 52 95 1[95 95
95 95 95 95 95 95 1[52 1[52 149 1[73 73 17[95 2[95 2[52
2[103 103 1[138 6[132 3[{}70 206.559 /CMR17 rf /Fp 135[120
1[120 127 88 89 88 1[127 114 127 191 62 120 1[62 1[114
1[101 127 101 1[114 19[211 8[175 2[172 178 17[62 1[62
1[114 22[114 19[{}26 247.904 /CMR17 rf /Fq 134[144 3[152
1[107 105 1[152 136 152 230 74 2[74 1[136 1[121 152 121
1[136 13[152 202 4[253 171 1[140 6[199 1[206 22[136 22[136
19[{}24 297.468 /CMR17 rf /Fr 134[315 3[315 304 235 310
1[287 327 315 384 264 2[155 1[330 1[287 321 304 1[315
19[508 3[208 3[381 1[404 20[164 26[284 2[155 16[{}23
514.072 /CMCSC10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 83 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 0.0 2475.38976 -3243.61417 .5 Frame
 gsave false 1 0.0 0.0  gsave 1 0.92 0.59  setrgbcolor currentrgbcolor
grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore 300 0.1
0. false tx@GradientDict begin GradientFill end grestore gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 829 2057 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 1 0.5 0  setrgbcolor  0.3 true 28.5114 neg 157.44199 neg
2302.00246 169.88199 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1 1 1  setrgbcolor gsave
fill grestore stroke grestore gsave false 1 0.0 0.0  gsave 1 1 1  setrgbcolor
currentrgbcolor grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 892 2796 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 892 2796 a @beginspecial
0 @llx 0 @lly 225 @urx 126 @ury 3375 @rwi @setspecial
%%BeginDocument: logogrande.ps
%!PS-Adobe-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Sun Jul  7 21:48:48 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%DocumentMedia: 79x44mm 224 126 0 () ()
%%BoundingBox: 0 0 225 126
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
3 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 3 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 79x44mm
%%PageBoundingBox: 0 0 225 126
225 126 cairo_set_page_size
%%EndPageSetup
q 0 0 225 126 rectclip
1 0 0 -1 0 126 cm q
Q q
q
0 0 225 126 re W n
[ 224.25 0 0 -126 0 126 ] concat
/cairo_ascii85_file currentfile /ASCII85Decode filter def
/DeviceRGB setcolorspace
<<
  /ImageType 3
  /InterleaveType 2
  /DataDict <<
    /ImageType 1
    /Width 299
    /Height 168
    /Interpolate true
    /BitsPerComponent 8
    /Decode [ 0 1 0 1 0 1 ]
    /DataSource cairo_ascii85_file /FlateDecode filter
    /ImageMatrix [ 299 0 0 -168 0 168 ]
  >>
  /MaskDict <<
    /ImageType 1
    /Width 299
    /Height 168
    /Interpolate true
    /BitsPerComponent 1
    /Decode [ 1 0 ]
    /ImageMatrix [ 299 0 0 -168 0 168 ]
  >>
>>
image
 Gb"/L=_nemepeV@@tMt0Rqof,6GaMT*^Wskm&P]An,%8Ap*I6p(s`cN!+n#'!b"#r$"+1o`
 ^"dYIt84=77'UQGi8frMJhttrB['Yj<3LYc?.b$1Y'r34l+Z=A%qqVAG:3?FJ#_=?e),SkF
 >Ea'qPu06;[gCs.NiFL/Q?;X/&GOkO-%\en$Hc.k`A%:689ANEau+Ld%0df26_gN[Wj""^X
 Mooj9+HV'r`nXhVs#qb$E"=0>e>i`EV4n*\HX5A0Ds^4#mdD;2KbK*K0rZ\#&KS%ejp4!R4
 R>ea_-RBu)#>m0A_R[P^,Ya@sW:G9J(:\%6I71DuiKVlQ2qG5RhrVB1$A&jUtELhUSn<#G8
 a/,T-fHcLuB]$Q&OsNaS>dtL"Y8/ZkBTkQ+Cu+fa,PSSR^+_(0.lAje<@"RD*]Pa;Bq./&.
 Ocf<rd>:l*&_ik=1`[ko1g+6Ks;08jc:<;g0j)i^%g_/DnKMf85YN6o*H:k,ROfOPA=l9=l
 3pSDVY$*]J$W6]mBF=,E1FYZAp"k+m/QBm_&@9jGAcL5g[?Z$\k\K<dJOq>*W?bBmTI+ou;
 t14*'X69q'ie.>rKXRe:78=#=[A8?td0ULhW73BM<TNa=4cL,+l?%tecU\iY.\_&tT-e^?9
 BBNjB%=QZi,d:3(]H$O\#JhV?48'Jq2DqV/(,:J#SHhS-GKSbIue#)$5qn71QXBDn"f@8="
 -Vp?3-4[fiqJ3!(SbTMPn(TMb8Y(Mqs&/*Z1u2)KBmRDhDMo8^pucb_d,F*0QQZt9l)1/@M
 tcH*0!hJFr3pW8OUmkAkhET(NLM5=c]tQ_(^&HW/R*lB42oI62e*3G^V=SpU0S%X+1WjdTD
 juLpUSa^RD>,jgPhYGn_uu72.b"!Z-:0_T;f0!S2kpKB!_$]!&RBneEPFpi1iP?kl4$c42L
 g_%l>K_dBAT=IT/fK#X<?0h:)CRol#8Sl!&(K2KDun5(,lMP^i`1hos'=VK_"9V7(6q$@]k
 17b=g!aQOVT;NJkN&$9"+G>VpHE<!XL/+0XC/FecN+)CrhRT;I$<kR(k2rFDP5VH"-A]Tt,
 pr^s3QJ]5S>#l\cf^r?VaO"m?0Ve>2N>as,p.SG:'+>sH_OsF/)Dj/8Ruosl?4?LeVB:1>a
 S<jj-;5+R?aSZB\Ui]6nIpR>>^aJR.8q*oqne&F7$T[HO$EU\QUn<rlUZn>&lh]M'c17G(m
 dkt['3>t4:tS/qY'<30E-GqfB"5;3E]`e'4b`ON_9T?c7`J;@abG%_.u?c8_Meeraa!*Q(i
 "f;,OS=&+t6VqXbZ"b*h1S?[a`gr&fDI9KSh@)Npj37^^]c)+W*I)]hf1cESfI.=_9cLQIB
 l?!Z9g>;nVbm5;]>a,bog1<#bDF%qJ<Ue-d9`N^e0&f1/4VG!7-2tt4[S/bCKVssVn@NXn.
 ^pnCE7?oRCe#,t\2Jd&%Qplq"Lj_=PnE:RBdrH<oq42l7>IQNb>PR0,s8-.He`Z&;QZ'V6V
 V"Cs(TD+_?+P+q2CrXffQ"TNpP'is,9[=0%j*tL;S3\t<&#t`fBY";]e/a<A-1/cg5?<VBt
 4Z3Z[Zf#o(-A3Nf0o'E%+Wp'c2CYIJWTlR2aKWKKpUi@ks^\,D#s7)NT@Em5JW<2I:e/nL(
 %P9em8ST48$akd4a;?nj&<IL[Sq+dK"3Z8*XL6e$/p6u$K%=1`\Jcae&%,d,fMJUm9HOKp1
 b\8e94H.oW>;bt<M;%Hi]XhI*!"Z(]-#7anO84cC0W-WRDi'H]"(e9>k*=P]u6Us4bp?^Gp
 M2"8W*F,LVe#(\bg:F[uL5R:F5,cSY<:_F+_0>sJ!t==Fe0=sPFBc.fAR-Q+B[j!.WRGM?q
 T6g@UMLQtK.hD(Z.".#q%lBYaiqu1O5]*4\rm?M/".6F^E>"Ocqcn),buoDbAc("6:?\;'D
 CgfU>k=[S(f(p#LI?k\'r$8nNro00THrl.;A:F.Rk'qL$A\5Vg^Hse>5DRZriB.Kkf2?R4,
 oDOQlA))e3$X\=%tl4'g)#G?j@c[Jim@qs+S6i_,!SJoPejAr4;K3t3,e'^-JgJI597c]-l
 .h=&hAgPHXl-7mm8TJIAOIi2=\7O#WT<uqrZCPC5hENs9O)R1+6ZtY`gHGna&5Q7lE:KNGi
 /T-p42?!,(J,`WD0Ett):3Yd_f>?WXgoqG6!EpJn&N!5?J5`jK8/HWt['V[:=3YeB''n+e&
 1\fV7;nW!-)Eq%VK$&.csc'/o&\&]R@3Rk=#C7FfP_i5Zp^o=be=BWdiCMng2YgDr-W;@XM
 _6Vrb>Bo1lo[uc*F8IbaGej#SS#ug$.i2'nqskVCUDP!%j>5#b!)Z^hNNa4m]\[^beW5ji^
 AE)Y5[l_F3]+\Tm@#e"3hA@DYe6lIDpf?0o^Jgn6q8S.R-b;-,/G&M?Y39%1\5O4\YrJSC:
 K3/QrE.4ON2kqbXY2.FKp+kJH/7ZA=;OqCb5?G1O<<frnEl"gD5`'cFVe::K4J%0nC(RQNU
 0R'[fO=LeF%!Z./V2cNY-L+LK&[.`8?AGZRW8Zanfm4#l5lQ>"&Q*BO8^e%`/gVkmgNj6YB
 p-[D0QXIFcX)0(ld`&&^oJ>=ZY%I@gZdcYhbKY!?,Bku"4?ad"AKObi)G<q6XZ?.^m$9H70
 t;':bE=7-2)p[Y]&D_K1._Dn.5osUnje#?,%QA7b3*GRHQK@<Dk/P#sPV.P-c[I9uC?S@cO
 tFn%S^!h]4dj)R7aSI/$O,8.-4dP'/LbLnlI0O`=P[%AX.8$;?Wd(c?'8Fce5d2!Dd,q-?-
 g\o]B5ToC'S:7=;<MX)knP;#6kUP_I:.5^u@)=?P@947Np-sFc1'<ioO8825;":o#IrVH3M
 Qe:?=O!T^kB$K3Zh_@kodM+(r%6?%C,U<nrEd$T&U+,$<%gQ;N7Yj]i*p,Jf[NXO'a"2$M!
 Nd"u>TD/`JWdf*Q#)a#QmN,9?=%M<(a1L@HFS"gRf!m@-Vhh8/#t$nT%Io(Nsa@`$rRWK's
 8fq^o8PmL'4AF$<`_t'^3u<LG9DHJcm&Th;ZC.QG0^4*BJ:5i,E[(e"Dl&1`\GWJ/'D;FQj
 u#9iB&a6]Jp)a/n4;M,Wtd&?]9G>$FVFSiq.6Z"D:Eb"fhj8Q1,udId!R=.OY[!n/F.HM,E
 cb&+C9%=76i:\HiB9q!odg?G-Pr+@b_SXi#&%=^f'X`.CJ=u^!O+:sne#uF`+(p<qfErV"k
 O'iO0JKQQe?nH>!^).]-)TDK&GT$L<=BjagA1C3pb.V,bK)u<PPP"G-9:sNHfA2.m1iOReV
 8p#]gK%?Uddl)bl"?._d)'ZR@^FFZBgMrmY2<VE2/?IDY!jQh9i<CbPhS+,2!Daf;s28d-V
 ;GXq<+Bo$uTZhVB^_aKFA[#UT*N!QtS>Df[6#+I6FZ:\a&RkhnaZXVFcBbj)9ZNDG.E`6B_
 BYK?QCY@(]8$FP;\43BM:&=dN)Y<a!fU7+*ocikk<d.<WE/"/Fip[rQM0R/I*8,Q[W+gLin
 k>?r0>i5fG"g$LlTr5R)Ghn=76eEJd[:!a=f1l+'kZMb'XPfu1eO_]WI^F'4[-(?!u;Y3dI
 R,g>KKjVe%>cMAYQ8+)]3,t*ec`)u"U10%=[$\Xb&L4]a"`3!qPFI$Z5hkIs[#dM7*"1_o;
 ]VMfp!hC=iIFkKPBkN0d_ua)[L@_$OoW=+O=uOqQNfTHS.t^LcITh-b"b`N7pYl_k3nWi%u
 bT_>du'Z^A:Y4WR=c54UFi48-#)N*gbgK`]JCZDq?TcRB>*u8Qp0A!spRhH8p!>SCgY]'3M
 _]4oWT+$fiG8_St&eQmt=sBlY4gSI@KkHL8:<RJHKZIt*..V6qub9Tp0JQ#bX4AC""&haRS
 j!Z8'!4cX(<%u6'9[ghOfV.lbu;q80HBU\*@9dMIZXDP.ZQeuA5)Ih/@EMi<aHE4AXcY3g`
 q]*s=.9<TV`U!U/\4rGNng.GC@%mLf7YaUZ8fslY#rpb;rcLg[q(i+Mg[!CY`;0Pa,QU)3]
 .U*;M6O:X,C65]-8iP<;QAQfEn+o[KLq,An`Vf(Eg3FV?#LF"afq_KL*`\*)$d*s'.4*^C"
 /C%T^p3HC!_JWHD[F/mmQN*6,k'q%2>"&C&2)*L8bH.Y9Bk@2s?>sP-mL!$A;'</B(u8VF^
 i&Ds^L@(B\?[,c$u?i:2&p(Z3_(3do"ARDKNBDV[>c>"rJZ9dH0"[[q_+]YnjE+gT`W8Pbs
 BAO<'Q3YuFZ@;F//4X;="SN(U]n#1opY>MQ=o+q-\AYIPZ_P`PSr4Ri^JahP%:'`,ubfH2!
 KP"3LLEJKL&n'"TLm6XgRl1ERc^%(\#8XY_Qj2HO5^oSZ,sfDe]aRVlV)RTL9dNTh61`?(7
 >*_=0G'^#8XjaIajOaPT/05%&g^<"W)9>5hd+bol:@e$`O;V^idaYM#:`Hq]P5a]$r+(7-d
 0.Ch[uu3kNG9DZ"]@$bYrl%btCZIMgWf0iCKk80miV1cI#t3HV9QU_C<*@*E7VSn5Gbg0-m
 iu6EV`gMf42>.J&Ri(uTi>%rctG2GK>mjgKg;-k"@Nl`:n#C2.M53>mES?foHEL;K(Wq)YH
 2-(QFSl#hZVbEf>nGrpIa"TI=QCmlWbaH<7eoc5kC1+rUtf2kq]l^>XE;0$ItJKqjQ*E54c
 TdYe[6%`0/.)0i,[9QK@:)('t*^sJ*UenF_gQLUU#qfMt_F.id?+O#7EkU`%l$)QEYBP*KV
 TglMTl@sH>m!Jn'Q5InVNU,kRl>9230%HArFfBY.u6o`";iuZ6[\jIARob[W_Hml==5ID5C
 NAB)C3F6!'^G\$b\psig>N?3H3.;*JR0b1/3Y32cQ_lPo4Nj3N3s1FW]WR0*9TJ!QrPe^GO
 'CJVo>B);Dt!))FWp:.4n9'`K<8P$Pd.P*1u'SiSJ'^0q00BSpgR4dSf?D,daA!57gCeSBJ
 $[B@/gQnrBX5ahbAbl4"oT?J07Xf)!Ta,c'b8&'3iSN4`Jk=GA/@.`Y;no#F9R&8D*FYrb)
 R];Z!B`Y,pZd3SkqZ9rsVmk,:b.tqFomCEl%qu?ADj?QaVPW67:eF\@D%[Nhi&eMDb'"nTh
 6Cqh:fNla8u-1[q$W?k)SS4O;X\;3Zk/]R$.MU;for:MY#qrlfu&IFE<_=Z5ttd]S!1pmn9
 'nN7lF=-f$H7Pe7LD8<4s:4"Ir'oPOI88+6Vk"4aY1k26gkY!)WQ[>=cii<a&PL\4$lK4G4
 =55QCP?Hp*[c_8?kSNlR>-5F!3[hN5t0Zq;*.jTd3qjaEtLaIFoPnQ"k6i8r.K9Z"/]>7M<
 K]66?DVsO*tX_^Xs0""mr#(.qQA<R4Or+-^9nqJ'O5#>u1:99TnE,+07,6[q4EQ6&7+N1-K
 !bg%C1C7I-UAW<Mo^m7<VcU'.;$GF[+%lU+'4&5==dI)P;KZI#m/r1PpTQKVQ9s%^GJ?(SY
 7UhrcbQC#=%mtrLeX(4=]ril9^CTn`^HcZA.b0C];d4ta80B]daHQ'*mS-Z@$<(`JMn1#Xb
 `Wa7;X#K/PUlkhHY*Z!K873&>j[$8t`*71eE5qHoC3>VVi#fmp5,%SR9'VV'jpoq[S:$l"-
 VeS7q-n>.&)ke!h!sDnn2p',TN#a1M'%+;/bXcI4iXo]9`HN!Zb'P-c[IEILf:d&-T9Mn8-
 2^%\<TgTIIb=e,:tVq,&,Y]5l6H_KL0WcMPn9cr#4B?;3XT[89oX*<()"0L348V#UOLoDPH
 AcpLi-@@R(1@Poj;/u<bH/W5NKXNn7#g`9<cNg4ubGr64k7a#kToQ"l[58?F9iJfV\;aSAJ
 8ZK<N2n9J4AF7rJ,YiOl#.\,$re19Fl;2oR"G;0f3cO!WtL-Sh7I`gnj?CDK=&1"Pe9;)%]
 lM+c060"?M[E;?5np:S#B.MZ"]@$9_o%-I"i4)m.h_%$KE^jF24;;/c0MVcsaUTg;"aicq>
 ?$*%6)b8lJM;:&X%c'mADVeh!fF++H9#J%u%-G7gDn8XjaI_M!b46rfsU3\kJpEr\@Oe##i
 .8R`8/dCE34[W97(<J$AVE7HtQQDSiFL#4@/A)'TA7W**?muZ1uq8B.%!\j<[kVGI9&L-Lj
 !Uo'P0Y@MYR2/Ht5ag!1BMfcLk+j6tS)bF9I!(rYBj/-].Ht7-#rq&!fBiRq:+1:66K)XAS
 iqG?W,kF;@:S<LZ/\NShQg]c>_6ZgQV%7-[5c:OCf26&d+--)_&k:M1([HV")DUc>?j-A-6
 o;!q!73te*bs&%ja,.&qER<mI?uW]lr5+OMcfa7:+I7gMajG/!t]3FT0_4:8KIMiq_tl5@!
 '$VS8L#?s?l\+Lk)B7J-[K.#qXN-f;UO#Z$Y[mC/J4^@C4T))ep6jf6iX"FKq5TbT<+JJ6?
 ?kgZSq/4&Q/dp*cF5@!&;D8FiOe@)l+af1nEbg]qG+ImkZF_a'V.Q1!6J?cVtn\uNe2f>$!
 Dp4TRphRd%%A>(%-^agS=M<SR**4o;Wt/'d)E$7"lNb:\NG.U\fci6f*H2>mU#7GA!M'cLL
 tBB-9>].'BmnhS/i'ue9]>ec);!u\F3Wm@\8k$iA&LQMHr8CI$=npq/$WiXFTb$>?+78lK9
 W8,`.^jmRLdTaiZ.&mgT_$hBp&ITocth0jjI]r-Jq"8qVn]oIV8gW9D.T#/"b.#WMJMYJ$f
 PD"u8Y%H-0+`/flY2g>i]ORKdN8#Yg!WS6iaP:%B9G_;Tn.*TG;.$\@e(8O*4L,BJe%_ahW
 qQ*qb9p0/6TOeC%U5Z$p2r1rZ^*fn@QBho8uK!(h)I6d[0)q$Z9%]8@"Qe@pV<d:&Y!5m!U
 UnkLu_Ec;?NPGem>EnElM\jSeYS+_^Q(MMua2W[IX6E%uD[;%H-t-ob$+gcXq^'!NNka]OD
 _F]gD\efh.AV-cN7]g01:XD-%)fQRba:+pKa?gsiJ&#WiRI]Br+.`:J>$[oi2QMD%5O]-!,
 ^K!jlE/%Z_4Gi1eE4?le$#%d&50Z3K'YM'qW/o.6Cc"Tp(e.p?^Hg+]<mJ+Q'#]Y7Jb$e5)
 a^r$DIja,3AkntP0]XbWRfKpA]>lQ(TN:7=DIfJH/C2%aKNa`J@:9qFHnn"75<S39r&k?^a
 Em:414I'Fo/fW_HUr<ho(Eoi0D_;qL!iWgYe[?*f"Q7Y+t.@<Olnck%fO`B?Ch*[VfBu69=
 Pj+,V4AA^EouHOPNL'VNl>KAb<[.W\EC"C!OoW49<H?Lg$6'c\M+HJ7!KhB\[\iWCK&admp
 YL>?Z'&SF,SBtMkF[^BT5fC)HKNEhi?B!QbKbsDW.'q!f5Kjnh3f4D.1?C;LYNRfOuGco(e
 met3\<.0JZfGQG#_Mk[(sO=&Q84Rjp$G-NX37@mk/uSQb]u?Kgd[*cPZ5da!q"mrH"[aMb)
 \9!F^!,!^e5mJ01'?a=<Hadj/?aH1GLsXP$(ERMct\#7hi8R6\_2?G(O1U.#Fr-)h&t/?$f
 X/-g+,,rT!j,'cNY#Ycg#?N42+ET>&u77_/-S<UIF>nnfC%j,3b3@LI^HNp8FTgOTLVaZ"t
 hgu">91hhUqWfg3"N\c-Ad*)ScBORd9Q[-T1r2UKnqIF+8`(Y9JNNjg.u_Z^9F,j^Nsa6eT
 0@Z1C@/oo%tFE:QajoF9`shC<*)]-T1"cZJgOk<fN<bZ>gTlUi=R1o/Hq[$0#&q4"`h9?jh
 !!O5d)Mi2"KUib7DUq06OmJ#N*-QLK%WjTVKt84_0DHg2uVgU/e6pj`g.W*Rue!Be-RN72V
 e@dT"gsBU9k7q)ZWAWFaY7AMA#WG\N=Kn/$P4#JP.[f1(HaJ.,O3"e:Gk8B1]X1d_0sn-^$
 aejeR_;t2n''up)D]K.lE7ui&caO5[1<<4Ak2,Ne/k_ocGE,i3@I2;fl21<C!r;@fB1^a3r
 g?'tkAI?nrET<dfiY*\7C"9?-PG\]\+I%rPlKZ$p4KZUgf"aEJm7$hbP5&a`jbL#Q#YM5c%
 i7853XsH&n8nAce[TR<4h`*/P?GTpk*sdE;:)>5)`MWb*pqIVPC6@d'(G8@Z`#U#TR"sOLP
 [-8Mr4hPn(GmeaWh$5<T3`]Q7imWQTGL7p!`Y3&H;:V8mJmeQ(1.P3.47T25L.OFSqUh<G2
 =/"]<TsG/Ye("8hTRYJ4u1\2!8@&/cAQYr9Kk?>^k[lWHkbGF_$Cp12@u#_ZsKGH6,`D5[T
 F'Gh7ZSRp4.^qbL`Pt#f/hRdtRAe-85G`Np7k2tg_^OQ9E5Q43h@4R-:Jj"S\Gi-5`j2R)1
 1RVkOI+hO4r)MG;!'`o:I5uHFJ.W?*-"UQl^C(Y_;ajuSW\)XuIe`j/4aZi38ab1FS\tSFf
 <1/`#+Ud@QI[7B?t@+*GC0%:2m2!*835%-b?*mJ$>6;Qdmg2g'G`JjioCPKFeP\SFaqX=S8
 sM0%e.N0P5BB^g\&BMLRiH?[0\PV>.AM`-a$OVWF(K>.49E.@#CgUS)1YX@fH*M._LqaL-N
 .6;u(8Ga,16SOQ:k=p$+E)UEubGB?d%.nMlW07lWcCO1@%:[SK,O,7Fch[N;rQor"#V977V
 R.8>He+M"Y9NB?&tFDO2N1iM6@j*>K;.(q8.ENU!0;OK^sLA^s863*I"rrE31cF-$.h+"uI
 aj6mp,qhoQ#f$^tP?p3Q;"BA(2"rBNCGL<*f<2cBA`;S.5R1joEZKue"XI(+?!l_gQnT+/6
 Uqd``.aL/>7M]:jPu:cM:WZ_="e@kB39Q?_Bo#!\cg^i3C]-iBj.;)5-LZZM=_62/3A%QKZ
 jt*Oa=kY?,$F:O3A,I20(luQ'@h#I0KnZ5ht-[0L7mRi%F4NTo_u5QhkBlRl534qeXopC&N
 dGjuuW-5?YTNl6h''YHpHAk+(L98j;FQ]kFto?+=k4_M&@6/mPo*iPL9V(G8t&E8eZf$PtF
 #\8^EDKaS\L>e"b3_M&@6/mPo*iPL9V(G8t&E8eZf$PtF#\8^EDKaS\L>e"b3_M&@6/mPo*
 iPL9V(G8t&E8eZf$PtF#\4BSD/*f).DifFi;O$5I;1DG@H92\nQ(:)6K+A0/mFn[L^]*96:
 KXoER></OlOuJ]plgsn=2?73-ca=(lSiW*kJN(]ACt[Vr<Eh[&hpW>NY0XIY]A9/+W!gGq!
 +.u2+#cAD#_.:M\]0ne=]*[@9Ha!QWpRNB[W[_g#tY.J<BG-[;&.>Dj?R?,#_r\f'GD=>?%
 @mQWHgP8eQ0\`.YmC?,W*e?+W#g68]cFAo\Z0H(EmA1g[[K23!,`R[uQg(9\Y-\kSZ.e#%c
 ?!U;;DL:nf^E63l.ds0j"e222oFL-_!S(')o8oibjI,]ec'Bs\45(/iV2?bZLfXGc`)[&kp
 `(SQH"c)^Dm3a"$o%KhBB5deHmgle2P+$>lU$9t.O,k,4o&-4Zbl.\L&!A-m\,UsY&JGm>^
 0p=T=VEaY\b[reGHG:qkg4luT/qCT\P2OQ>I6D+e>SMdWqNV0ih`V2m*4Gfp=o%tm7We\F&
 j+dF#<jX`(?u3^#!#TTX'T;*1E2L^-c&u[u?9E=%Z8,8%3E%P_p23!KjTCKu"&NILTueakC
 lZgSH?cVV$?uVpfhWgc=ZqY:EkH`XA-1V?&O0Y#Hgbc0a@R8lCAKq0DN5poi+f]@%j$Br2;
 :cC@$fJ"]poZi#9EY7p_NBNeS?%Qa4WD_FEf*E,!YkNobN`^p]PpW6@304+M#]%.=2Sj%3*
 jFiMk-YR3tIchbCHbK3OkrZcL:7XQfQS&>8$I=VX@cO13r"*1PiV@Do>I?_Z$PtFHr'a&n;
 ,;.aVBr(JCJ-OF#DAEL`M/p0J7jPh#fUB1\o=dM(sY&q;[sNBDAoq^<%?#?Sn_%9r:>ZUSg
 o5gg@nkB<b3_2s7mi!%JfaOG(md8Gl!>L!s]_Y&EEOE-iO&'l07GW#hu7Q?`d1UaLc3[)LV
 )pDnOK*CU_Pm[RTB9XtTDCp$7YdFIP1*3dg].'5ONKb=@R4"c>H#CH$(^n@eRBBe'Id.9+V
 :6\a$]JE6=ac"GnW`(AY<\oidh[K(rl^4]]9-R[A+c'gL/5CN[H?@3YjD/ogTCtuB8MW3ZW
 59XMJW&l+(3Rk?G9DT;=Ulq:mbD29/9UOJ+6O.p9&0=G'2`GE_X9bIO04):.F=E9k6[+,]9
 :%6F?%*T^)&H"u#=NS\9Y*#91R%0Y!@uhZC@l2FB@sF>r,X9V*BSH<kj^9sT(%'>PG_*.<X
 kZ-eWO0G`/'QFb#YZMe[B=!EX7-k_$>U+/_[f';ei"Wg=rZPmh7'DiCcIb-C:1td58?I]Ub
 ??CWuZPMmBZ:7s4(s*`&C_'A)s-['X7E=\"JnUZYT+SrgG8>93\Znp7?fVZ'3,=&!@3&.1Q
 -r=B;W3VkW3KaF2722'#u41]>.#5f4m&!X6Ram_R>SqW(<l^\G!kO@FTL;d-+g:c8$8^TW2
 B$K6'=%^q#hgCX%=H%7[`oF6cHbN!.)#k.PGo=E0h7rt4r<c7)h-R<niKu?0kuXN,o_j*f;
 'Lc=d-*ePTQfPjkqb<N@0#ugSTh[/*UV:O$Z<$)U+*kS3E/i(]$m?R7Rh`P_W8g;oR>Q)EF
 W7GJbimZR[0n@U=\->PS3+q&jWS='o^EJ_8$W9&+02.*N#G0onu^NHZA?/<iL=pN4tDMYJ:
 qURKfd,B_j.LF-rhc64^0Eo]ijMd'qE+clPJs"YC>BPEM)\]0/:D$;UXL6Vg)D5Q_6e7_^^
 L>kd[B7un\n]V0[-I6N:TGu3Oo[A@6h[DT,?IAD4_fWapBBhImG>FhHJmas6-Mi,iA9%.:j
 lI6M]9VM'1`Z:6a:8T$TVC=F9/+Lt#>!ZDg>IS;KGD&/4p,X>9JV+3&>Tt*U1`]QD6%_@SX
 /2Yhd@H120;7.KBStP&U*[U2%*r.eC"%h%^m(]!d&V^=f"Z_7aDSLJH,013+#nB+Ygh0%H3
 g!T-r%g%>ISJZ<<CcY5i+_Ldqta/[E0q6>m59/4`E^Xiddmj(DQ`DlG!CmhuD\]DN<`&K!B
 %HUS!&8q=icrJ+U?!R]bPPO`#g$<2g,!M!eWT@O9ibOrt]/?Wt#&bah7"!.BoGj#.9e%'fo
 Cq!c2;FMGXa#:^2=*\qgcXX:Ok?+=hch8V:J_a1di4<r[CH`!_u`JskONF^0mX@?Z[&Q%?*
 #,WgMW!e4_%tU;eO.uDZe%PSSl1V_PHd^W*4d2Z7**U/1KIXR+VpXW?1hp2R=CnmMC`8S9U
 INeaMLTIBS8?uj=T[k:h%,qfft]FuTbCGUoCBW42Zi\LS&(rE=/\03V]R?^!PhH6KpF;t62
 0Do%6#Z%)H3P_7/%@0!)3h.Hp1p4?U6uTcbJdkc;5h1Vp]\5c[1-9rR%B1Q=u.kc*?:VkVb
 >`i2TL!G+]GC4(2eq[rDKZC),EP%NDmloHaLgXc)T,#adD\0&8->r%GWeG5Dbd=CD2%pX>Q
 :7uOP-T_kFGddqH]7AX_1Fu9eggJ@kkZ;]?eL8HX]Lh^bcdhJ.g(HWgm#3__GQ7<tY=-tse
 &j?GU#i,]6O:>n\V-4J[PMo\2)h(IZr8&/g6_`>"mKC%JV1W&I;`nk"l@Ys.[_):t62/9aS
 o1/]I?nc'rWM7%Z;%>1cu`&L@AY^UcP*0i;B8J]<b\#skQaa;SM>141&h:llRl0Y5j>")gU
 F@8Dr:Y-*k^%#[D3:X.L3LD%(YnnYlb3u[Q0^6Da(R.1Y&+X*jCAdC!,Y3!33G9ofFWtktl
 WkfQ$ZnfXqVu45%D+KpG!M!7%Jke9^tYQtHb@(U[$Q'i6FEV7(gK)*W_]+'OTackPaR[Dbi
 <BGs)1)DXV-OZfNi]MN4uLs8gk=lBjRZ@gR>e6P3tZ.f:mf4787&Hmt$fcX:n&unR?"2u)U
 k:+LCAgKTATN9Rje.\]nSgBhG5[-CQj3_%%T#4gW(G=55o,!c/YQceG+WE-/V)p,#Bo,a7(
 )&K%92duJQ%6U?!<_1+)jmMVRmt(j>k=iBEi6$NnH/?%\kNFSEbL>70._jPNWlDV6ec`U;l
 q&O.s]_jB:3_o*47!<=/NBVdeAHTGP'-hUBgmZJB:9\3m\,#q?nd;;#"B,9p;Rk-)AsGYD/
 nh@VH/Q$!mJVYE)W2;QjDLb/sVbL[aMUd%Co/cU<A.%lu(;kFA*RFQ_G)o.A,<]QnS(#OC=
 gpBIX5&^pi5QDPcS4Z[r`Cuup@eY$2-VC?0Q(b\UAMMg@INu^;WqgL]_@n]/*"!^b^Tj[Dh
 Ag<).=PI)dF;]/6G5O[@Rd'Du-Y(\tR6JZG:28+L1kdY:F"(i[`AFF93UI&"n.>:o8QhmQ*
 8:#>'7t^!;h#'dlDmgqKVfo41kdEiE7&-.;c8_qYjNZ\7>rBTK>IX"d*+qL?DTW%oGA"p@!
 G13!#T_''^@Qg>ECWmR[di$MPin:@GSG-1]C5:9N7J+S2j72&WG'NqM&"Nf74JI20q57RY&
 *Qj#3k/0[>[sVBVG*f`!UMn.;HrWJ!`SMG6slGRYT-:",>--Z)@;EDe^NL3>C9Djjbl$c0S
 ]Rej'!T3.P"fXN@[Ja+:#P,=,Z<'8^"S=E7^\JV!ZA7n^#hq^7d[r2//1N0;G8Q-+ndZdVl
 0OiHe0CPs?N=^e`R_g<-nTRql85g#`),7dJTj?2ZhR&$7JL\WWJu52W'HI)gq-`r\^%qPn7
 MZ=87L#'S9VpOpdSs*@8B/o(r:gSW@gccf!bT?FNugFgX"+Bg$6;$*[M:[<*JOi`-Vm<*WT
 !8\5Z:KORAMAq]cE%_i%_4-f-!drLs`2#-bK](=<R"LM3G0GfVPPkJu4T\ec%nSql#gX\O.
 *]Tfu38]I!_CV1<=dT#-/DT[0F,O`OKj.]UYm*D7((5nA(6FO[7fk$mU&JPAZ>BhHWfMJDF
 0+Ys!gLCQ))?M^?/GX?()CKB76)!DeBm\4'fiPQd4nb`TuE%>"mU3.?3QV^:-rTrCIQ^gu]
 BY#STpX`*[A1:Z+671ouTdd,e[(8!-4Wh,@d0UR*Cb\t-Wd<pWP^r!RWHm^m[Hho^&.9$>Y
 tL*CRSr5V\n&f^P?L0;UT)gtUkKAK@V#hW3[i(0D31XIN5?;"4S7/iRVGPf>0*BdIJ^NaTf
 P[XR\G)k0MQs!SjHd"d*tuee*U>-@[CLCYXSX6)cig)]HbsC[Be8M:2*m\k8pjeI.0fBY*H
 @]`L_73B.nDP<XdHAg:"A0*L(D<BrZ#[BRRq?YGE]A!U"_$;@&sFS[-<85m1./1.Y@1A&Tk
 c\BgI7;`nX*ABE8ef=-C0fS>$.H9UBGN7Kg*/O;Y"-"4RpUr`*%]IHX(hV&:(m5]=W%5maS
 MV8l0hdN\j$JbTe7b2,jdtAC>!%rbFQ#>'>NkGX:KKr,nD/)qBD%Kb#(akGj-Y.1\'9%J3U
 $KZVl.A$H9sGcn!MtCof88qFdM,Kq_g%W\#S\M'kFeRu'/X9p5np-2o^<mLC-n[dkJn"ZPY
 OA"CtOi;SHj"qDG-iUmSYB%<]L^()Il[FeBQJQRVJl+eL>Jk8&p87I>NL*1nl7r2"_KMmO?
 6Le^2fQj"0C#3t)&W5`+i;K"Ja-Y)3<_"qCEjDW<1l0p.JSfPcJl'M$>S-Y3H=6duo]f9^d
 T.!G5_,'=)71rTg.h`i)&U+Wj2%S`X[1(fh:Lq$HEl@hX8)7MNjI7UEO6(6eWJZ!)dW',[!
 K#`up#&/r&$5Xi7BP^8K85nm2\7]_DF#9o'+B@d4GFK4J)Re'.7d@LkJD\e*5oauu#G@#O)
 %@9&/U\c".tld/YBUE__TojRZ"[2i9cjt95'd2VDV;U\?3=Lk0U4Jfn/'e?Ca6pD*uq,j+D
 ?;T:(,S`QRem]<`ZL**5$$4$X+!ZGDgm9@!$uJEssP3W%VjV.if<^pA'Y>;^Kj6)#I7l8a<
 62V<W&8C+?ASX3e)3qCika.<a3Nr5Sif2@Jd^XW$\8Yj-+fVRYC#JZA;c$euq#2f7D<\$_E
 ?;/&Xf(as-(rGgm$jd@,GAOOM.%rOdT\-)G(s6Li^kr'F="[_'B@E;4Hfs6d@CF<Z0JS[U#
 E$1XEWeHD8"HXA@K2,GY5V6AC@Vcp:C(AS!FP1]o?VaZc>"=+oGg$:bhYI[#kKdLc#N#:RC
 ()2',A]:X3cs$.[Hh7#"JpgMJ.0j?]@FeID>!0ObEf=S0;#H?&r[Y^'&F&H7/X3l.NXkP=N
 Q='#N=VR`f(dnRm#ID)5J_T@fuFW%M*,A)]nA.$CVe;!)H3:4+0eT1rY(W-k0jjT][Q=Ls+
 ["9lgD&\d_@AFQ(RW;"@&O.<Z5UrNg._L0"I1#YRUgR5WG,hB8%FLcQtH)o#+K!o>CU`O1M
 $+m>INVas8]Il6`%R`:gt8(+ae9[b(M2<ArVbW2fs+U0@oGj:#kpR]&qSPqfOW"Uok%isfN
 O>Gk0fF8o)^F4^kAXjG`J2I01)5un!]`irP\Aa=t;d^+G_pAHdD1a[aWAZ/<]fpT8CfD42I
 f9,l3%on@Kg$=a^*u;f_.nWlRU3[N?!AEGnYS6_QLLXSY\D2hRY'P?FC,0!qXe>'n^,d*1(
 ;XrIp\Hg[&9@;+bd6]A1?%d?:^Z,P*I^qGLb,@;%7hMVgbE^nNoN.>G*o^%gk+qa<2;37X3
 %$o;80>C8ZL6[;-#i!:uHE'sn5boqSGp/i6-Hk"QSuo>=KTMJCfF-H2K64`THq@fYuP[i\N
 ^os-N,?4D,+ejNn1oW7h5%FS3Qj#<>5@bpLRh7FO\09"jTN-OM['pWWp@3#%CV'0g7<)JoG
 VTQm%h>lUX5(!L9(^*)r`f+?TKFIK2bQU;eM]1(Jr@8Q$81k'_$#Sffc]]lB.Qn<,j9d2'8
 Zj<F[c+i]r*0Q30B;kX8i:[HE$#(`!ldAWDLe_rrK(>l0+-'o61E-'[dMeQ;et!@$@%b]p?
 $;joJ<uhd#JbhF02AXqJ6]Ig*R`oBFaMS"c**]Edn#`(NH9L!^7VgHit@`S=R4Eq!FFKYsA
 tQS&,nj7W8Nh=kB<9O;A%Br4p.$9StE8,N3fM[s\Ue%nA[L"'jfC*BA'rGf;S;BSKOjM?Vi
 Ee-?i``2mnL=7B,G)<#4)6U4CN1Is=nVGQDoG:<LLXtTUq&kE2+.X=9=*sfi1gVngnBNAd_
 0)fd?j5+0&>ai6C@14b_?+<FM\28?e,2qM/e:ig6LJ(P^/eT3X9jP8"GiT'\4*KtD%h;VUK
 )Z!Bqq%_~>
Q
Q Q
showpage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 3704 2796 a
 currentpoint grestore moveto
 3704 2796 a 0 TeXcolorgray 0
TeXcolorgray 0.96 0.45 0.18 TeXcolorrgb 7666 1290 a Fr(Congreso)194
b(interna)-11 b(cional)194 b(de)p 0 TeXcolorgray 0.96 0.45 0.18
TeXcolorrgb 7020 1793 a(Ma)-34 b(tem)8800 1750 y(\023)8784
1793 y(aticas)195 b(y)f(sus)i(aplica)-11 b(ciones.)p
0 TeXcolorgray 4722 2390 a(El)194 b(modelo)g(de)f(Ising)j(aplicado)e(a)
h(la)f(ciencia)h(pol)16514 2347 y(\023)16578 2390 y(\020tica)7727
2775 y Fq(Juan)90 b(Man)-8 b(uel)90 b(Romero)h(Sanp)8
b(edro*)91 b(y)11998 2700 y(\023)11963 2775 y(Angel)g(C\023)-136
b(aceres)89 b(Licona**)4550 3024 y Fp(*Departamen)-6
b(to)72 b(de)i(Matem\023)-114 b(aticas)73 b(Aplicadas,)g(v)-6
b(eri@correo.cua.uam.mx)72 b(,)i(**Alumno)g(de)g(Matem\023)-114
b(aticas)73 b(Aplicadas,)g(angelcaceres@outlo)6 b(ok.com)p
0 TeXcolorgray 0 TeXcolorgray 672 4409 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 1 0.5 0  setrgbcolor  0.1 true 28.5114 neg 2685.73402
neg 742.19551 74.30058 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1 1 1  setrgbcolor gsave
fill grestore stroke grestore gsave false 1 0.0 0.0  gsave 1 1 1  setrgbcolor
currentrgbcolor grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 571 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 1 0.5 0  setrgbcolor  0.1 true 28.5114 neg 28.5114 neg
602.4652 45.78918 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1 1 1  setrgbcolor gsave
fill grestore stroke grestore gsave false 1 0.0 0.0  gsave 1 1 1  setrgbcolor
currentrgbcolor grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2022 w Fo(Abstract)735
5111 y(El)84 b(mo)5 b(delo)85 b(de)f(Ising)g(es)i(un)e(sistema)h(de)g
(la)g(F)-22 b(\023)-73 b(\020sica)84 b(Estad)-22 b(\023)-73
b(\020stica)84 b(el)h(cual)f(se)735 5360 y(ha)f(usado)g(para)g(en)-5
b(tender)83 b(div)-5 b(ersos)83 b(fen\023)-95 b(omenos)83
b(so)5 b(ciales,)83 b(como)h(con\015ictos)735 5609 y(b)-5
b(\023)-89 b(elicos)52 b(y)j(comerciales.)f(En)g(en)h(este)g(traba)11
b(jo)54 b(se)h(m)-5 b(uestra)55 b(una)e(analog)-22 b(\023)-73
b(\020a)53 b(en)-5 b(tre)735 5858 y(el)77 b(mo)5 b(delo)77
b(de)h(Ising)e(y)i(la)g(teor)-22 b(\023)-73 b(\020a)77
b(de)g(juegos.)g(Adem\023)-95 b(as)78 b(este)g(mo)5 b(delo)77
b(se)h(usa)735 6107 y(para)i(estudiar)g(un)g(tratado)h(de)g(libre)f
(comercio)h(en)-5 b(tre)80 b(dos)h(pa)-22 b(\023)-73
b(\020ses.)80 b(En)h(este)735 6356 y(ejemplo,)52 b(los)h(pa)-22
b(\023)-73 b(\020ses)52 b(pueden)g(escoger)h(en)-5 b(tre)52
b(seguir)h(p)5 b(ol)-22 b(\023)-73 b(\020ticas)52 b(proteccionistas)735
6605 y(o)62 b(de)f(libre)h(mercado.)1243 7549 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 1 0.5 0  setrgbcolor  0.1 true 28.5114 neg 28.5114 neg
602.4652 45.78918 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1 1 1  setrgbcolor gsave
fill grestore stroke grestore gsave false 1 0.0 0.0  gsave 1 1 1  setrgbcolor
currentrgbcolor grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1860 w(In)-5 b(tro)5 b(ducci\023)-95
b(on)735 8333 y(El)75 b(mo)5 b(delo)76 b(de)h(Ising)e(es)i(un)e(mo)5
b(delo)76 b(f)-22 b(\023)-73 b(\020sico)76 b(originalmen)-5
b(te)74 b(propuesto)h(para)735 8582 y(estudiar)70 b(el)g(comp)5
b(ortamien)-5 b(to)71 b(de)f(materiales)h(ferromagn)-5
b(\023)-89 b(eticos.)69 b(El)i(mo)5 b(delo)735 8831 y(de)93
b(Ising)g(fue)h(propuesto)f(p)5 b(or)94 b(Wilhelm)f(Lenz)h(que)f(lo)h
(concibi\023)-95 b(o)92 b(como)i(un)735 9081 y(problema)79
b(para)h(su)h(alumno)e(Ernst)i(Ising.)e(Ising)g(logr\023)-95
b(o)80 b(resolv)-5 b(er)80 b(el)h(mo)5 b(delo)735 9330
y(unidimensional)120 b(para)j(su)i(tesis)f(de)g(1924)f(y)i(el)f(mo)5
b(delo)123 b(bidimensional)735 9579 y(fue)106 b(resuelto)g(p)5
b(or)107 b(Lars)g(Onsager)f(hasta)g(1944.)g(En)g(el)h(mo)5
b(delo)106 b(de)g(Ising)735 9828 y(tenemos)71 b Fn(N)93
b Fo(part)-22 b(\023)-73 b(\020culas)69 b(en)i(una)f(matriz)h
(cuadrada.)e(Cada)h(part)-22 b(\023)-73 b(\020cula)70
b(puede)735 10077 y(esy)-5 b(at)99 b(apun)-5 b(tando)97
b(hacia)h(arriba)h(o)g(hacia)f(aba)11 b(jo)99 b(y)h(a)f(cada)g(una)g
(de)g(esas)735 10326 y(orien)-5 b(taciones)51 b(se)i(le)h(llama)e
Fm(esp)-21 b(\023)-83 b(\020n)65 b(de)f(la)g(p)-10 b(art)-21
b(\023)-83 b(\020cula)p Fo(.)55 b(El)e(sen)-5 b(tido)52
b(de)h(este)h(esp)-22 b(\023)-73 b(\020n)735 10575 y(es)62
b(determinado)f(p)5 b(or)62 b(la)f(in)-5 b(teracc\023)-95
b(on)61 b(de)g(la)h(part)-22 b(\023)-73 b(\020cula)60
b(con)i(sus)g(v)-5 b(ecinas.)735 11073 y(El)129 b(mo)5
b(delo)130 b(de)g(Ising)f(es)i(uno)e(de)h(los)g(p)5 b(o)g(cos)131
b(mo)5 b(delos)130 b(de)g(part)-22 b(\023)-73 b(\020culas)735
11322 y(in)-5 b(teractuan)g(tes)67 b(para)j(el)g(cual)f(se)h(cono)5
b(ce)70 b(una)f(soluci\023)-95 b(on)68 b(exacta.)i(Es)g(de)g(gran)735
11571 y(utilidad)102 b(y)-5 b(a)105 b(que,)f(aunque)g(originalmen)-5
b(te)102 b(fue)j(form)-5 b(ulado)103 b(para)i(resolv)-5
b(er)735 11820 y(problemas)84 b(f)-22 b(\023)-73 b(\020sicos)84
b(\(ferromagnetismo\))h(tiene)g(m)-5 b(uc)g(h)-22 b(\023)-73
b(\020sima)83 b(aplicaciones)f(en)735 12069 y(el)g(mo)5
b(delado)82 b(de)h(problemas)f(de)h(otras)h(\023)-95
b(areas)83 b(como)g(la)g(biolog)-22 b(\023)-73 b(\020a,)80
b(\014nanzas,)735 12318 y(etc)62 b(como)g(se)h(mostrar\023)-95
b(a.)1243 13511 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 1 0.5 0  setrgbcolor  0.1 true 28.5114 neg 33.35077 neg
602.4652 45.78918 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1 1 1  setrgbcolor gsave
fill grestore stroke grestore gsave false 1 0.0 0.0  gsave 1 1 1  setrgbcolor
currentrgbcolor grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1723 w(Mo)5 b(delo)61 b(de)h(Ising)735 14336 y(En)97
b(una)g(dimensi\023)-95 b(on,)97 b(el)h(Hamiltoniano)d(del)j(mo)5
b(delo)98 b(de)g(Ising)f(puede)g(ser)735 14585 y(escrito)62
b(como)2216 15446 y Fl(H)57 b Fo(=)g Fk(\000)p Fn(\017)2989
15188 y Fj(N)2917 15250 y Fi(X)2936 15707 y Fj(i)p Fh(=1)3249
15446 y Fn(\033)3364 15488 y Fj(i)3426 15446 y Fn(\033)3541
15488 y Fj(i)p Fh(+1)3851 15446 y Fk(\000)46 b Fn(\026B)4451
15188 y Fj(N)4378 15250 y Fi(X)4397 15707 y Fj(i)p Fh(=1)4711
15446 y Fn(\033)4826 15488 y Fj(i)p 0 TeXcolorgray 6148
15446 a Fo(\(3.1\))p 0 TeXcolorgray 735 16087 a(donde)53
b Fn(\033)65 b Fo(=)57 b Fk(\006)p Fo(1)e(y)g(estos)h(v)-11
b(alores)55 b(indican)e(cada)i(uno)f(de)h(los)g(estados)g(p)5
b(osibles:)735 16336 y(Si)78 b(la)h(part)-22 b(\023)-73
b(\020cula)77 b(apun)-5 b(ta)77 b(hacia)h(arriba)g(o)i(hacia)d(aba)11
b(jo.)78 b(Se)h(usa)g(tam)-5 b(bi)g(\023)-89 b(en)77
b(la)735 16585 y(siguien)-5 b(te)60 b(represen)-5 b(taci\023)-95
b(on)60 b(matricial:)3109 17142 y Fk(j)e("i)84 b Fo(=)3722
16851 y Fi(\024)3831 17016 y Fo(1)3831 17265 y(0)3926
16851 y Fi(\025)4070 17142 y Fn(;)p 0 TeXcolorgray 2022
w Fo(\(3.2\))p 0 TeXcolorgray 3109 17674 a Fk(j)58 b(#i)84
b Fo(=)3722 17382 y Fi(\024)3831 17547 y Fo(0)3831 17796
y(1)3926 17382 y Fi(\025)4070 17674 y Fn(;)p 0 TeXcolorgray
2022 w Fo(\(3.3\))p 0 TeXcolorgray 735 18230 a(y)62 b(se)h(considera)d
(que)i(la)g(red)g(es)g(c)-22 b(\023)-73 b(\020clica,)60
b(es)j(decir:)3101 18687 y Fn(\033)3216 18733 y Fj(N)3431
18687 y Fo(=)57 b Fn(\033)3752 18733 y Fj(N)18 b Fh(+1)4112
18687 y Fn(;)735 19143 y Fo(lo)61 b(cual)g(equiv)-11
b(ale)61 b(a)h(resolv)-5 b(er)62 b(el)g(problema)f(en)h(un)f(anillo.)
735 19393 y(Una)99 b(funci\023)-95 b(on)97 b(m)-5 b(uy)105
b(\023)-100 b(util)98 b(para)h(describir)g(el)g(sistema,)h(y)g(que)f(a)
g(partir)g(de)735 19642 y(ella)70 b(se)i(pueden)d(calcular)h
(propiedades)f(del)i(sistema)h(como)f(la)g(energ)-22
b(\023)-73 b(\020a)71 b(libre,)735 19891 y(temp)5 b(eratura)57
b(del)f(sistema,)i(etc.)f(En)g(el)g(caso)g(del)f(mo)5
b(delo)57 b(de)g(Ising)f(la)h(funci\023)-95 b(on)735
20140 y(de)61 b(partici\023)-95 b(on)61 b(est\023)-95
b(a)62 b(dada)f(p)5 b(or:)1109 20627 y Fn(Z)1247 20674
y Fj(N)1404 20627 y Fo(\()p Fn(T)17 b(;)34 b(B)10 b Fo(\))58
b(=)2303 20431 y Fi(X)2204 20886 y Fj(\033)2300 20912
y Fg(1)2363 20886 y Fh(=)p Ff(\006)p Fh(1)2734 20627
y Fk(\001)34 b(\001)g(\001)3084 20431 y Fi(X)3009 20865
y Fj(\033)3105 20891 y Fe(N)12 b Fg(=)p Fd(\006)p Fg(1)3492
20627 y Fn(e)3586 20542 y Fj(\014)3720 20413 y Fc(P)3930
20542 y Fj(i)p Fh(=1)4191 20479 y Fe(N)4301 20551 y Fo([)4352
20542 y Fj(\017\033)4516 20568 y Fe(i)4560 20542 y Fj(\033)4656
20568 y Fe(i)p Fg(+1)4850 20542 y Fh(+)4984 20474 y Fg(1)p
4984 20502 59 7 v 4984 20601 a(2)5052 20542 y Fj(\026\014)e
Fh(\()p Fj(\033)5415 20568 y Fe(i)5459 20542 y Fj(\033)c(i)p
Fh(+1\))5883 20551 y Fo(])5939 20627 y Fn(:)p 0 TeXcolorgray
153 w Fo(\(3.4\))p 0 TeXcolorgray 735 21292 a(La)76 b(funci\023)-95
b(on)75 b(de)i(partici\023)-95 b(on)75 b(puede)h(ser)h(escrita)g(en)g
(t)-5 b(\023)-89 b(erminos)76 b(de)h(la)f(siguien)-5
b(te)735 21541 y(matriz,)61 b(que)h(es)h(cono)5 b(cida)60
b(como)j(matriz)f(de)g(transferencia:)2370 22106 y(\026)2321
22159 y Fn(P)86 b Fo(=)2743 21805 y Fi( )2907 22032 y
Fn(e)3001 21957 y Fj(\014)10 b Fh(\()p Fj(\017)p Fh(+)p
Fj(\026\014)g Fh(\))3959 22032 y Fn(e)4053 21957 y Ff(\000)p
Fj(\014)g(\017)3066 22311 y Fn(e)3160 22236 y Ff(\000)p
Fj(\014)g(\017)3795 22311 y Fn(e)3889 22236 y Fj(\014)g
Fh(\()p Fj(\017)p Ff(\000)p Fj(\026\014)g Fh(\))4528
21805 y Fi(!)4726 22159 y Fn(;)p 0 TeXcolorgray 1366
w Fo(\(3.5\))p 0 TeXcolorgray 735 22776 a(Se)61 b(puede)g(mostrar,)i
(de)f(manera)f(an\023)-95 b(alitica)60 b(que)1750 23249
y Fn(Z)1888 23296 y Fj(N)2046 23249 y Fo(\()p Fn(T)17
b(;)34 b(B)10 b Fo(\))58 b(=)2944 23053 y Fi(X)2846 23508
y Fj(\033)2942 23534 y Fg(1)3004 23508 y Fh(=)p Ff(\006)p
Fh(1)3341 23249 y Fk(h)p Fn(\033)3536 23289 y Fh(1)3619
23249 y Fk(j)3726 23197 y Fo(\026)3676 23249 y Fn(P)3834
23164 y Fj(N)3992 23249 y Fk(j)p Fn(\033)4164 23289 y
Fh(1)4248 23249 y Fk(i)g Fo(=)f Fn(T)28 b(r)6 b Fo(\()4957
23197 y(\026)4909 23249 y Fn(P)5067 23164 y Fj(N)5224
23249 y Fo(\))p Fn(:)p 0 TeXcolorgray 795 w Fo(\(3.6\))p
0 TeXcolorgray 7304 4173 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 1 0.5 0  setrgbcolor  0.1 true 28.5114 neg 2714.24542
neg 742.19551 45.78918 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1 1 1  setrgbcolor gsave
fill grestore stroke grestore gsave false 1 0.0 0.0  gsave 1 1 1  setrgbcolor
currentrgbcolor grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 63 w(Sup)f(ongamos)73 b(que)h(las)h(bacterias,)f(adem\023)
-95 b(as)74 b(de)h(mo)-5 b(v)g(erse)75 b(aleatoriamen)-5
b(te)73 b(en)7367 4422 y(la)101 b(regi\023)-95 b(on,)100
b(tienden)g(a)i(dirigirse)e(a)i(regiones)e(donde)g(la)i(concen)-5
b(traci\023)-95 b(on)99 b(de)7367 4671 y(sustrato)70
b(es)h(mas)g(elev)-11 b(ada,)69 b(es)h(decir)g(se)h(presen)-5
b(ta)69 b(taxis.)h(P)-5 b(ara)70 b(mo)5 b(delar)70 b(este)7367
4920 y(fen\023)-95 b(omeno,)39 b(al)h(\015ujo)h(que)g(dedujimos)e(an)-5
b(teriormen)g(te)39 b(deb)5 b(e)41 b(a)5 b(~)-100 b(nad)-22
b(\023)-73 b(\020rsele)39 b(el)h(efecto)7367 5169 y(quimiot\023)-95
b(actico)62 b(que)h(p)5 b(osee)64 b(una)f(direcci\023)-95
b(on)61 b(opuesta)i(al)g(del)g(\015ujo)g(de)h(difusi\023)-95
b(on,)7367 5418 y(es)62 b(decir)9043 5709 y Fn(J)19 b
Fo(\()p Fn(x;)34 b(t)p Fo(\))59 b(=)e Fk(\000)p Fn(D)10264
5570 y(@)p 10208 5662 233 9 v 10208 5851 a(@)11 b(x)10450
5709 y(p)10552 5749 y Fh(2)10680 5709 y Fo(+)46 b Fn(\026)11064
5570 y(@)p 11007 5662 V 11007 5851 a(@)11 b(x)11249 5709
y(p)11351 5749 y Fh(2)11434 5709 y Fn(:)7367 6111 y Fo(En)43
b(este)i(caso)e Fn(\026)p Fo(,)h(que)g(represen)-5 b(ta)43
b(el)h(mo)-5 b(vimien)g(to)42 b(de)i(las)g(bacterias)f(hacia)g(altas)
7367 6360 y(concen)-5 b(traciones)63 b(de)k(recurso,)e(no)h(es)h(una)f
(constan)-5 b(te)65 b(pues)h(el)g(\015ujo)g(inducido)7367
6609 y(p)5 b(or)64 b(taxis)h(es)g(ciertamen)-5 b(te)64
b(prop)5 b(orcional)62 b(a)j(la)f(densidad)e(lo)5 b(cal)64
b(de)g(bacterias.)7367 6858 y(Es)58 b(aqu)-22 b(\023)-73
b(\020)58 b(precisamen)-5 b(te)57 b(donde)g(in)-5 b(tro)5
b(duciremos)57 b(la)h(sensibilidad)e(de)i(qu\023)-95
b(orum.)7367 7107 y(En)65 b(general)g(tomaremos)i Fn(\026)d
Fo(=)g Fn(\026)p Fo(\()p Fn(p)9992 7147 y Fh(1)10075
7107 y Fn(;)34 b(p)10267 7147 y Fh(2)10350 7107 y Fo(\).)66
b(As)-22 b(\023)-73 b(\020)66 b(la)g(ecuaci\023)-95 b(on)64
b(para)i(la)f(bacteria)7367 7356 y(ser\023)-95 b(a)8002
7758 y Fn(@)p 7966 7850 192 9 v 7966 8039 a(@)11 b(t)8167
7898 y(p)8269 7938 y Fh(2)8409 7898 y Fo(=)57 b Fn(f)22
b Fo(\()p Fn(p)8912 7938 y Fh(1)8994 7898 y Fo(\))p Fn(p)9169
7938 y Fh(2)9298 7898 y Fk(\000)45 b Fn(\016)8 b(p)9704
7938 y Fh(2)9832 7898 y Fo(+)46 b Fn(D)10195 7938 y Fh(2)10288
7758 y Fn(@)10406 7683 y Fh(2)10489 7758 y Fn(p)10591
7798 y Fh(2)p 10288 7850 386 9 v 10323 8046 a Fn(@)11
b(x)10556 7986 y Fh(2)10730 7898 y Fk(\000)11004 7758
y Fn(@)p 10946 7850 233 9 v 10946 8039 a(@)g(x)11223
7606 y Fi(\022)11375 7898 y Fn(\026)p Fo(\()p Fn(p)11672
7938 y Fh(1)11755 7898 y Fn(;)34 b(p)11947 7938 y Fh(2)12030
7898 y Fo(\))12113 7758 y Fn(@)11 b(p)12333 7798 y Fh(1)p
12113 7850 303 9 v 12148 8039 a Fn(@)g(x)12426 7606 y
Fi(\023)7367 8451 y Fo(En)61 b(resumen)h(tenemos)8627
8847 y Fn(@)p 8590 8939 192 9 v 8590 9129 a(@)11 b(t)8791
8987 y(p)8893 9027 y Fh(1)9033 8987 y Fo(=)57 b(\003)46
b Fk(\000)g Fn(f)22 b Fo(\()p Fn(p)9921 9027 y Fh(1)10004
8987 y Fo(\))p Fn(p)10179 9027 y Fh(2)10307 8987 y Fk(\000)46
b Fn(ep)10710 9027 y Fh(1)10838 8987 y Fo(+)g Fn(D)11201
9027 y Fh(1)11284 8987 y Fk(r)11456 8902 y Fh(2)11539
8987 y Fn(p)11641 9027 y Fh(1)11724 8987 y Fn(;)8627
9305 y(@)p 8590 9398 V 8590 9587 a(@)11 b(t)8791 9445
y(p)8893 9485 y Fh(2)9033 9445 y Fo(=)57 b Fn(f)22 b
Fo(\()p Fn(p)9536 9485 y Fh(1)9619 9445 y Fo(\))p Fn(p)9794
9485 y Fh(2)9922 9445 y Fk(\000)46 b Fn(\016)8 b(p)10329
9485 y Fh(2)10457 9445 y Fo(+)45 b Fn(D)10819 9485 y
Fh(2)10902 9445 y Fk(r)11074 9360 y Fh(2)11158 9445 y
Fn(p)11260 9485 y Fh(2)11342 9445 y Fk(\000)8976 9794
y(r)h(\001)g Fo(\()p Fn(\026)p Fo(\()p Fn(p)9667 9834
y Fh(1)9750 9794 y Fn(;)34 b(p)9942 9834 y Fh(2)10025
9794 y Fo(\))p Fk(r)p Fn(p)10372 9834 y Fh(1)10455 9794
y Fo(\))g Fn(;)11780 8667 y Fi(9)11780 8853 y(>)11780
8915 y(>)11780 8977 y(>)11780 9039 y(>)11780 9101 y(=)11780
9472 y(>)11780 9534 y(>)11780 9596 y(>)11780 9658 y(>)11780
9720 y(;)12780 9338 y Fo(\(3.7\))7367 10265 y(La)69 b(forma)h(esp)5
b(ec)-22 b(\023)-73 b(\020\014ca)70 b(de)f Fn(\026)h
Fo(e)g(hip\023)-95 b(otesis)69 b(b\023)-95 b(asicas)69
b(que)g(nos)h(in)-5 b(teresan)68 b(para)h(el)7367 10514
y(an\023)-95 b(alisis)60 b(del)h(mo)5 b(delo)62 b(ser\023)-95
b(an)62 b(esp)5 b(eci\014cados)61 b(a)h(con)-5 b(tin)g(uaci\023)-95
b(on.)7875 11416 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 1 0.5 0  setrgbcolor  0.1 true 28.5114 neg 33.35077 neg
602.4652 45.78918 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1 1 1  setrgbcolor gsave
fill grestore stroke grestore gsave false 1 0.0 0.0  gsave 1 1 1  setrgbcolor
currentrgbcolor grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1691 w(T)-16 b(eor)-22
b(\023)-73 b(\020a)61 b(de)h(Juegos)7367 12157 y(En)68
b(fen\023)-95 b(omeno)68 b(llamado)f(sensibilidad)e(de)k(qu\023)-95
b(orum)68 b(las)h(bacterias)f(resp)5 b(onden)7367 12406
y(de)94 b(manera)h(colectiv)-11 b(a)94 b(y)i(co)5 b(ordinada)92
b(a)j(est)-22 b(\023)-73 b(\020m)-5 b(ulos)95 b(del)f(medio)g(cuando)g
(la)7367 12655 y(agregaci\023)-95 b(on)63 b(p)5 b(oblacional,)61
b(y)k(el)g(consecuen)-5 b(te)63 b(incremen)-5 b(to)64
b(lo)5 b(cal)64 b(en)g(densidad)7367 12904 y(p)5 b(oblacional,)120
b(alcanzan)i(un)h(cierto)h(um)-5 b(bral.)123 b(Es)h(p)5
b(osible,)123 b(en)g(principio,)7367 13153 y(mo)5 b(delar)68
b(parte)g(de)g(este)i(pro)5 b(ceso)68 b(usando)f(como)i(base)f(las)g
(ecuaciones)f(\(3.5\).)7367 13402 y(Consideremos)61 b(la)h(funci\023)
-95 b(on)9179 13859 y Fn(\026)34 b Fo(\()q Fn(p)9511
13899 y Fh(1)9593 13859 y Fn(;)g(p)9785 13899 y Fh(2)9869
13859 y Fo(\))57 b(=)g Fn(\037)p Fo(\()p Fn(p)10507 13899
y Fh(1)10590 13859 y Fo(\))p Fn(\036)p Fo(\()p Fn(p)10958
13899 y Fh(2)11040 13859 y Fo(\))p Fn(p)11215 13899 y
Fh(2)11298 13859 y Fn(;)7367 14316 y Fo(donde)90 b Fn(\037)109
b(>)h Fo(0)91 b(es)h(una)f(funci\023)-95 b(on)89 b(que)j(mide)f(in)-5
b(tensidad)88 b(de)k(atracci\023)-95 b(on)90 b(del)7367
14565 y(sustrato;)47 b Fn(\036)p Fo(\(0\))57 b Fn(>)h
Fo(0,)47 b(y)h(existe)g(una)67 b(^)-115 b Fn(p)10075
14605 y Fh(2)10215 14565 y Fn(>)57 b Fo(0)48 b(tal)f(que)h
Fn(\036)p Fo(\()20 b(^)-115 b Fn(p)11472 14605 y Fh(2)11554
14565 y Fo(\))58 b(=)f(0.)47 b(La)h(propiedad)7367 14814
y(de)94 b(acotamien)-5 b(to)93 b(impuesta)g(a)i(la)f(funci\023)-95
b(on)92 b Fn(\036)j Fo(constituy)-5 b(e)93 b(una)g(manera)i(de)7367
15063 y(sim)-5 b(ular)58 b(el)h(um)-5 b(bral)58 b(de)h(densidad)e(aso)5
b(ciado)58 b(con)g(la)h(sensibilidad)d(de)j(qu\023)-95
b(orum:)7367 15312 y(cuando)61 b Fn(p)8122 15352 y Fh(2)8264
15312 y Fo(=)79 b(^)-115 b Fn(p)8574 15352 y Fh(2)8657
15312 y Fo(,)63 b Fn(\026)c Fo(=)g(0)k(y)h(la)f(actividad)e(de)i
(atracci\023)-95 b(on)62 b(hacia)g(zonas)h(de)g(alta)7367
15561 y(concen)-5 b(traci\023)-95 b(on)59 b(de)j(bacteria)f(o)h
(recurso)g(se)g(susp)5 b(ende.)7367 15810 y(Esto)91 b(no)g(es)h(to)5
b(da)-5 b(v)-22 b(\023)-73 b(\020a)90 b(su\014cien)-5
b(te)90 b(para)h(la)g(mo)5 b(delaci\023)-95 b(on)89 b(de)i
(sensibilidad)e(de)7367 16059 y(qu\023)-95 b(orum.)48
b(Debido)g(a)h(que)g(el)h(op)5 b(erador)48 b(de)h(difusi\023)-95
b(on)47 b(p)5 b(ermite)50 b(que)f(una)f(bacteria)7367
16308 y(resp)5 b(onda)97 b(a)h(concen)-5 b(traciones)95
b(de)j(bacterias)f(m)-5 b(uy)98 b(alejadas)f(del)h(lugar)f(en)7367
16557 y(que)81 b(se)h(encuen)-5 b(tra,)79 b(de)i(hec)-5
b(ho,)79 b(resp)5 b(onde)81 b(a)g(concen)-5 b(traciones)79
b(en)i(cualquier)7367 16806 y(regi\023)-95 b(on)67 b(de)i(\012.)f(As)
-22 b(\023)-73 b(\020)69 b(sup)5 b(ondremos)68 b(que)g(la)h(v)-5
b(elo)5 b(cidad)66 b(de)j(disp)5 b(ersi\023)-95 b(on)67
b(es)i(\014nita)7367 17055 y(lo)77 b(que)h(har\023)-95
b(a)77 b(que)g(la)h(respuesta)f(a)h(la)f(densidad)f(um)-5
b(bral)77 b(sea)h(de)f(naturaleza)7367 17304 y(esencialmen)-5
b(te)60 b(lo)5 b(cal.)7367 17553 y(P)-5 b(ara)118 b(incorp)5
b(orar)118 b(este)i(pro)5 b(ceso)119 b(primero)g(consideremos)g(una)f
(caminata)7367 17803 y(aleatoria)61 b(para)i(la)f(bacteria)g(en)h
(\012.)g(La)g(bacteria)f(con)h(densidad)e Fn(p)12254
17842 y Fh(2)12400 17803 y Fo(tiene)h(una)7367 18052
y(v)-5 b(elo)5 b(cidad)46 b(constan)-5 b(te)46 b Fn(\015)60
b Fo(y)48 b(una)g(tasa)g(constan)-5 b(te)47 b(de)g(cam)-5
b(bio)47 b(de)h(direcci\023)-95 b(on)46 b Fn(\024)p Fo(.)j(Si)7367
18301 y(sup)5 b(onemos)60 b(que)h Fn(p)8784 18219 y Fh(+)8784
18374 y(2)8912 18301 y Fo(\()p Fn(x;)34 b(t)p Fo(\))62
b(y)f Fn(p)9661 18215 y Ff(\000)9661 18374 y Fh(2)9799
18301 y Fo(\()p Fn(x;)34 b(t)p Fo(\))62 b(son)e(las)h(densidades)e(de)i
(las)f(bacterias,)7367 18550 y(cuy)-5 b(o)66 b(mo)-5
b(vimien)g(to)66 b(inicial)f(fue)i(a)g(la)f(derec)-5
b(ha)66 b(o)h(la)g(izquierda,)e(en)i(la)g(p)5 b(osici\023)-95
b(on)7367 18799 y Fn(x)66 b Fo(al)g(tiemp)5 b(o)66 b
Fn(t)p Fo(,)g(resp)5 b(ectiv)-11 b(amen)-5 b(te,)65 b(estas)i(dos)f
(funciones)e(tienen)i(la)f(siguien)-5 b(te)7367 19048
y(din\023)-95 b(amica)60 b(en)i Fn(n)57 b Fo(=)g(1\(v)-5
b(er)62 b([)p Fb(?)o Fo(],)g([)p Fb(?)o Fo(])g(y)h([)p
Fb(?)o Fo(]\).)8253 19494 y Fn(@)11 b(p)8473 19412 y
Fh(+)8473 19567 y(2)p 8253 19600 348 9 v 8331 19789 a
Fn(@)g(t)8657 19648 y Fo(+)45 b Fn(\015)8977 19494 y(@)11
b(p)9197 19412 y Fh(+)9197 19567 y(2)p 8977 19600 V 9035
19789 a Fn(@)g(x)9392 19648 y Fo(=)57 b Fn(\024)p Fo(\()p
Fn(p)9889 19562 y Ff(\000)9889 19721 y Fh(2)10073 19648
y Fk(\000)46 b Fn(p)10382 19562 y Fh(+)10382 19717 y(2)10510
19648 y Fo(\))g(+)10833 19508 y(1)p 10833 19600 95 9
v 10833 19789 a(2)10938 19648 y Fn(Q)11098 19688 y Fh(2)11181
19648 y Fo(\()p Fn(p)11356 19688 y Fh(1)11439 19648 y
Fn(;)34 b(p)11631 19562 y Fh(+)11631 19717 y(2)11805
19648 y Fo(+)46 b Fn(p)12102 19562 y Ff(\000)12102 19721
y Fh(2)12239 19648 y Fo(\))8231 20009 y Fn(@)11 b(p)8451
19923 y Ff(\000)8451 20081 y Fh(2)p 8231 20115 358 9
v 8314 20304 a Fn(@)g(t)8645 20162 y Fk(\000)45 b Fn(\015)8977
20009 y(@)11 b(p)9197 19927 y Fh(+)9197 20081 y(2)p 8977
20115 348 9 v 9035 20304 a Fn(@)g(x)9392 20162 y Fo(=)57
b Fn(\024)p Fo(\()p Fn(p)9889 20077 y Fh(+)9889 20232
y(2)10063 20162 y Fk(\000)46 b Fn(p)10372 20077 y Ff(\000)10372
20235 y Fh(2)10510 20162 y Fo(\))g(+)10833 20022 y(1)p
10833 20115 95 9 v 10833 20304 a(2)10938 20162 y Fn(Q)11098
20202 y Fh(2)11181 20162 y Fo(\()p Fn(p)11356 20202 y
Fh(1)11439 20162 y Fn(;)34 b(p)11631 20077 y Fh(+)11631
20232 y(2)11805 20162 y Fo(+)46 b Fn(p)12102 20077 y
Ff(\000)12102 20235 y Fh(2)12239 20162 y Fo(\))7367 20663
y(donde)75 b(las)i(bacterias)g(creadas)f(escogen)h(cualquiera)e(de)i
(las)g(dos)g(direcciones)7367 20912 y(p)5 b(osibles)59
b(en)h Fn(R)i Fo(con)e(la)g(misma)h(probabilidad.)55
b(Resolviendo)j(n)-5 b(uestro)60 b(sistema)7367 21161
y(en)h(t)-5 b(\023)-89 b(erminos)62 b(de)f Fn(p)8750
21201 y Fh(2)8895 21161 y Fo(y)i(de)f Fn(q)69 b Fo(obtenemos)9399
21603 y(1)p 9388 21695 117 9 v 9388 21885 a Fn(\024)9561
21603 y(@)p 9524 21695 192 9 v 9524 21885 a(@)11 b(t)9725
21743 y(q)53 b Fo(+)46 b Fn(q)64 b Fo(=)57 b Fk(\000)10600
21603 y Fn(\015)10716 21528 y Fh(2)p 10594 21695 212
9 v 10594 21885 a Fo(2)p Fn(\024)10825 21603 y(@)11 b(p)11045
21643 y Fh(2)p 10825 21695 303 9 v 10860 21885 a Fn(@)g(x)9354
22061 y(@)g(p)9574 22101 y Fh(2)p 9354 22153 V 9410 22343
a Fn(@)g(t)9712 22201 y Fo(+)9926 22061 y Fn(@)g(q)p
9917 22153 233 9 v 9917 22343 a(@)g(x)10217 22201 y Fo(=)57
b Fn(Q)p Fo(\()p Fn(p)10758 22241 y Fh(1)10841 22201
y Fn(;)34 b(p)11033 22241 y Fh(2)11116 22201 y Fo(\))7367
22702 y(Cuando)60 b Fn(n)d Fo(=)g(2)62 b(las)g(ecuaciones)e(tendr\023)
-95 b(an)61 b(la)h(siguien)-5 b(te)60 b(forma)9245 23241
y Fn(\034)9403 23101 y(@)p 9366 23194 192 9 v 9366 23383
a(@)11 b(t)9567 23241 y(q)53 b Fo(+)46 b Fn(q)64 b Fo(=)57
b Fk(\000)p Fn(D)6 b Fk(r)p Fn(p)10874 23281 y Fh(2)9143
23560 y Fn(@)p 9107 23652 V 9107 23841 a(@)11 b(t)9308
23699 y(p)9410 23739 y Fh(2)9538 23699 y Fo(+)46 b Fk(r)p
Fn(q)64 b Fo(=)57 b Fn(f)22 b Fo(\()p Fn(p)10562 23739
y Fh(1)10645 23699 y Fo(\))p Fn(p)10820 23739 y Fh(2)10949
23699 y Fk(\000)45 b Fn(\016)8 b(p)11355 23739 y Fh(2)7367
24200 y Fo(P)-5 b(ara)119 b(in)-5 b(tro)5 b(ducir)119
b(taxis)h(en)h(n)-5 b(uestro)119 b(mo)5 b(delo,)120 b(el)g(\015ujo)h
(tendr\023)-95 b(a)119 b(que)i(ser)7367 24449 y Fn(J)19
b Fo(\()p Fn(x;)34 b(t)p Fo(\))82 b(=)g Fk(\000)p Fn(D)6
b Fk(r)p Fn(p)8844 24489 y Fh(2)8981 24449 y Fo(+)56
b Fn(\026)p Fo(\()p Fn(p)9483 24489 y Fh(1)9565 24449
y Fn(;)34 b(p)9757 24489 y Fh(2)9840 24449 y Fo(\))p
Fk(r)p Fn(p)10187 24489 y Fh(2)10346 24449 y Fo(en)76
b(v)-5 b(ez)76 b(de)f(s\023)-95 b(olo)76 b Fn(J)19 b
Fo(\()p Fn(x;)34 b(t)p Fo(\))83 b(=)e Fk(\000)p Fn(D)6
b Fk(r)p Fn(p)13085 24489 y Fh(2)7367 24698 y Fo(p)f(or)62
b(los)g(que)g(n)-5 b(uestro)61 b(sistema)h(ser\023)-95
b(a)8881 25109 y Fn(@)p 8845 25201 V 8845 25390 a(@)11
b(t)9046 25249 y(p)9148 25289 y Fh(1)9288 25249 y Fo(=)57
b(\003)46 b Fk(\000)g Fn(f)22 b Fo(\()p Fn(p)10176 25289
y Fh(1)10258 25249 y Fo(\))p Fn(p)10433 25289 y Fh(2)10562
25249 y Fk(\000)46 b Fn(ep)10965 25289 y Fh(1)11093 25249
y Fo(+)g Fn(D)11456 25289 y Fh(1)11539 25249 y Fk(r)11711
25163 y Fh(2)11794 25249 y Fn(p)11896 25289 y Fh(1)11978
25249 y Fn(;)8474 25707 y(\034)8631 25567 y(@)p 8595
25659 V 8595 25849 a(@)11 b(t)8796 25707 y(q)53 b Fo(+)46
b Fn(q)64 b Fo(=)57 b Fk(\000)p Fn(D)9823 25747 y Fh(2)9906
25707 y Fk(r)p Fn(p)10180 25747 y Fh(2)10308 25707 y
Fo(+)46 b Fn(\026)p Fo(\()p Fn(p)10800 25747 y Fh(1)10882
25707 y Fn(;)34 b(p)11074 25747 y Fh(2)11158 25707 y
Fo(\))p Fk(r)p Fn(p)11505 25747 y Fh(1)11588 25707 y
Fn(;)8372 26025 y(@)p 8335 26117 V 8335 26307 a(@)11
b(t)8536 26165 y(p)8638 26205 y Fh(2)8767 26165 y Fo(+)45
b Fk(r)p Fn(q)65 b Fo(=)57 b Fn(f)22 b Fo(\()p Fn(p)9791
26205 y Fh(1)9874 26165 y Fo(\))p Fn(p)10049 26205 y
Fh(2)10177 26165 y Fk(\000)46 b Fn(\016)8 b(p)10584 26205
y Fh(2)10666 26165 y Fn(;)12035 24954 y Fi(9)12035 25140
y(>)12035 25202 y(>)12035 25264 y(>)12035 25326 y(>)12035
25388 y(>)12035 25450 y(=)12035 25822 y(>)12035 25884
y(>)12035 25946 y(>)12035 26008 y(>)12035 26070 y(>)12035
26132 y(;)12780 25688 y Fo(\(4.1\))13936 4409 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 1 0.5 0  setrgbcolor  0.1 true 28.5114 neg 2685.73402
neg 742.19551 74.30058 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1 1 1  setrgbcolor gsave
fill grestore stroke grestore gsave false 1 0.0 0.0  gsave 1 1 1  setrgbcolor
currentrgbcolor grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 571 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 1 0.5 0  setrgbcolor  0.1 true 28.5114 neg 33.35077 neg
602.4652 45.78918 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1 1 1  setrgbcolor gsave
fill grestore stroke grestore gsave false 1 0.0 0.0  gsave 1 1 1  setrgbcolor
currentrgbcolor grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 268 w(Aplicaciones:)59
b(un)i(tratado)h(bilateral)e(de)i(libre)f(comercio)13999
5162 y(S\023)-95 b(olo)98 b(nos)h(resta)h(incorp)5 b(orar)98
b(la)h(forma)g(en)g(que)g(el)g(bio)5 b(cida)98 b(\(deterioro)h(de)13999
5411 y(h\023)-95 b(abitat\))74 b(ser\023)-95 b(a)76 b(a)5
b(~)-100 b(nadido.)73 b(Deterioro)i(signi\014car\023)-95
b(a)75 b(para)g(nosotros)g(no)g(falta)h(de)13999 5660
y(sustrato,)86 b(sino)g(la)g(acci\023)-95 b(on)86 b(negativ)-11
b(a)85 b(\(inhibitoria)f(de)i(crecimien)-5 b(to\))86
b(de)g(una)13999 5909 y(v)-11 b(ariable)71 b(am)-5 b(bien)g(tal)70
b(sobre)j(la)f(constituci\023)-95 b(on)70 b(de)i(la)g(biop)5
b(el)-22 b(\023)-73 b(\020cula.)69 b(Denotemos)13999
6158 y(p)5 b(or)114 b Fn(b)g Fo(a)g(la)f(concen)-5 b(traci\023)-95
b(on)111 b(de)j(alg)5 b(\023)-100 b(un)112 b(agen)-5
b(te)113 b(bio)5 b(cida)112 b(\(un)h(an)-5 b(tibi\023)-95
b(otico)13999 6407 y(p)5 b(or)82 b(ejemplo\).)f(Las)i(mo)5
b(di\014caciones)81 b(a)h(los)g(mo)5 b(delos)82 b(\(3.5\))g(y)h
(\(4.1\))f(quedan)13999 6657 y(en)-5 b(tonces)61 b(como)h(sigue)f(para)
h(el)f(mo)5 b(delo)62 b(de)g(reacci\023)-95 b(on)61 b(difusi\023)-95
b(on)15093 7056 y Fn(@)p 15056 7148 V 15056 7337 a(@)11
b(t)15257 7196 y(p)15359 7236 y Fh(1)15499 7196 y Fo(=)57
b(\003)46 b Fk(\000)g Fn(\022)6 b Fo(\()p Fn(b)p Fo(\))p
Fn(f)22 b Fo(\()p Fn(p)16719 7236 y Fh(1)16802 7196 y
Fo(\))p Fn(p)16977 7236 y Fh(2)17105 7196 y Fk(\000)46
b Fn(ep)17508 7236 y Fh(1)17636 7196 y Fo(+)g Fn(D)17999
7236 y Fh(1)18082 7196 y Fk(r)18254 7110 y Fh(2)18337
7196 y Fn(p)18439 7236 y Fh(1)18522 7196 y Fn(;)15093
7514 y(@)p 15056 7606 V 15056 7796 a(@)11 b(t)15257 7654
y(p)15359 7694 y Fh(2)15499 7654 y Fo(=)57 b Fn(\022)6
b Fo(\()p Fn(b)p Fo(\))p Fn(f)22 b Fo(\()p Fn(p)16334
7694 y Fh(1)16417 7654 y Fo(\))p Fn(p)16592 7694 y Fh(2)16721
7654 y Fk(\000)45 b Fn(\016)8 b(p)17127 7694 y Fh(2)17255
7654 y Fo(+)46 b Fn(D)17618 7694 y Fh(2)17701 7654 y
Fk(r)17873 7569 y Fh(2)17956 7654 y Fn(p)18058 7694 y
Fh(2)18140 7654 y Fk(\000)15442 8003 y(r)g(\001)g Fo(\()p
Fn(\026)p Fo(\()p Fn(p)16133 8043 y Fh(1)16216 8003 y
Fn(;)34 b(p)16408 8043 y Fh(2)16491 8003 y Fo(\))p Fk(r)p
Fn(p)16838 8043 y Fh(1)16921 8003 y Fo(\))g Fn(;)15191
8254 y(@)p 15155 8347 V 15155 8536 a(@)11 b(t)15356 8394
y(b)57 b Fo(=)g Fn(\025)46 b Fk(\000)g Fn(eb)f Fo(+)h
Fn(D)16664 8443 y Fj(b)16740 8394 y Fk(r)16912 8309 y
Fh(2)16995 8394 y Fn(b:)18578 6919 y Fi(9)18578 7105
y(>)18578 7167 y(>)18578 7228 y(>)18578 7290 y(>)18578
7352 y(>)18578 7414 y(>)18578 7476 y(>)18578 7538 y(=)18578
7910 y(>)18578 7972 y(>)18578 8034 y(>)18578 8096 y(>)18578
8158 y(>)18578 8220 y(>)18578 8282 y(>)18578 8344 y(;)19412
7776 y Fo(\(5.1\))13999 8895 y(y)62 b(para)g(el)f(mo)5
b(delo)62 b(de)g(reacci\023)-95 b(on)61 b(transp)5 b(orte)15767
9296 y Fn(@)p 15730 9389 V 15730 9578 a(@)11 b(t)15931
9436 y(p)16033 9476 y Fh(1)16173 9436 y Fo(=)57 b(\003)47
b Fk(\000)e Fn(\022)6 b Fo(\()p Fn(b)p Fo(\))p Fn(f)22
b Fo(\()p Fn(p)17393 9476 y Fh(1)17476 9436 y Fo(\))p
Fn(p)17651 9476 y Fh(2)17780 9436 y Fk(\000)45 b Fn(ep)18182
9476 y Fh(1)18265 9436 y Fo(+)16116 9807 y Fn(D)16284
9847 y Fh(1)16367 9807 y Fk(r)16539 9722 y Fh(2)16622
9807 y Fn(p)16724 9847 y Fh(1)16807 9807 y Fn(;)15359
10198 y(\034)15517 10059 y(@)p 15480 10151 V 15480 10340
a(@)11 b(t)15681 10198 y(q)53 b Fo(+)46 b Fn(q)64 b Fo(=)57
b Fn(D)16547 10238 y Fh(2)16630 10198 y Fk(r)p Fn(p)16904
10238 y Fh(2)17033 10198 y Fk(\000)46 b Fn(\026)p Fo(\()p
Fn(p)17537 10238 y Fh(1)17619 10198 y Fn(;)34 b(p)17811
10238 y Fh(2)17894 10198 y Fo(\))p Fk(r)p Fn(p)18241
10238 y Fh(1)18324 10198 y Fn(;)15257 10517 y(@)p 15221
10609 V 15221 10798 a(@)11 b(t)15422 10657 y(p)15524
10696 y Fh(2)15652 10657 y Fo(+)46 b Fk(r)p Fn(q)64 b
Fo(=)57 b Fn(\022)6 b Fo(\()p Fn(b)p Fo(\))p Fn(f)22
b Fo(\()p Fn(p)17008 10696 y Fh(1)17091 10657 y Fo(\))p
Fn(p)17266 10696 y Fh(2)17395 10657 y Fk(\000)45 b Fn(\016)8
b(p)17801 10696 y Fh(2)17883 10657 y Fn(;)15866 10975
y(@)p 15829 11067 V 15829 11256 a(@)j(t)16030 11115 y(b)57
b Fo(=)g Fn(\025)46 b Fk(\000)g Fn(eb)g Fo(+)f Fn(D)17338
11163 y Fj(b)17414 11115 y Fk(r)17586 11029 y Fh(2)17669
11115 y Fn(b:)18413 9151 y Fi(9)18413 9337 y(>)18413
9399 y(>)18413 9461 y(>)18413 9523 y(>)18413 9585 y(>)18413
9647 y(>)18413 9709 y(>)18413 9771 y(>)18413 9833 y(>)18413
9895 y(>)18413 9957 y(>)18413 10019 y(=)18413 10391 y(>)18413
10453 y(>)18413 10515 y(>)18413 10576 y(>)18413 10638
y(>)18413 10700 y(>)18413 10762 y(>)18413 10824 y(>)18413
10886 y(>)18413 10948 y(>)18413 11010 y(>)18413 11072
y(;)19412 10256 y Fo(\(5.2\))13999 11617 y(donde)16367
11866 y Fn(\022)6 b Fo(\()p Fn(b)p Fo(\))58 b(=)f Fn(e)17057
11781 y Ff(\000)p Fj(\013)q(b)17374 11866 y Fn(:)13999
12223 y Fo(La)64 b(ecuaci\023)-95 b(on)63 b(para)g(el)i(bio)5
b(cida)62 b(es)j(simple:)58 b(\023)-89 b(este)64 b(es)h(suministrado)e
(a)i(una)e(tasa)13999 12473 y Fn(\025)54 b Fo(que)g(puede)e(dep)5
b(ender)53 b(de)h(la)f(concen)-5 b(traci\023)-95 b(on)52
b(del)h(bio)5 b(cida)52 b(en)i(el)g(caso)g(de)f(que)13999
12722 y(consideremos)69 b(una)f(biop)5 b(el)-22 b(\023)-73
b(\020cula)67 b(en)i(un)g(quimi\023)-95 b(ostato;)69
b(se)h(pierde)f(a)g(una)g(tasa)13999 12971 y Fn(e)f Fo(igual)e(a)i(la)g
(corresp)5 b(ondien)-5 b(te)66 b(del)h(substrato)h(y)h(se)f(difunde)e
(en)i(el)g(am)-5 b(bien)g(te)13999 13220 y(con)53 b(co)5
b(e\014cien)-5 b(te)52 b(de)h(difusi\023)-95 b(on)52
b Fn(D)16349 13268 y Fj(b)16424 13220 y Fo(.)i(El)f(bio)5
b(cida)51 b(afecta)i(la)g(tasa)h(del)f(consumo)g(de)13999
13469 y(recurso)62 b(y)-16 b(,)61 b(p)5 b(or)62 b(lo)g(tan)-5
b(to,)61 b(a)h(la)f(tasa)h(de)g(crecimien)-5 b(to)61
b(de)h(la)f(bacteria)g(a)h(tra)-5 b(v)g(\023)-89 b(es)13999
13718 y(del)61 b(termino)h Fn(\022)6 b Fo(\()p Fn(b)p
Fo(\).)13999 13967 y(Existen)129 b(v)-11 b(arios)131
b(tip)5 b(os)130 b(de)g(fron)-5 b(tera)129 b(que)i(se)f(o)5
b(cupan)129 b(en)h(biolog)-22 b(\023)-73 b(\020a,)128
b(sin)13999 14216 y(em)-5 b(bargo)52 b(las)h(Neumann)g(son)g(las)g
(m\023)-95 b(as)54 b(indicadas)d(para)i(n)-5 b(uestro)53
b(sistema)h(pues)13999 14465 y(esp)5 b(eramos)41 b(que)g(la)g(din\023)
-95 b(amica)39 b(de)i(las)g(ecuaciones)e(sea)i(esencialmen)-5
b(te)39 b(pro)5 b(ducto)13999 14714 y(de)75 b(las)g(ecuaciones)e(y)j
(no)f(la)f(inducida)f(p)5 b(or)75 b(las)g(condiciones)e(de)i(la)g(fron)
-5 b(tera;)13999 14963 y(adem\023)-95 b(as)81 b(sup)5
b(ondremos)82 b(que)f(las)h(part)-22 b(\023)-73 b(\020culas)80
b(sean)i(re\015ejadas)f(al)h(llegar)f(a)h(la)13999 15212
y(fron)-5 b(tera.)14507 16156 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 1 0.5 0  setrgbcolor  0.1 true 28.5114 neg 28.5114 neg
602.4652 45.78918 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1 1 1  setrgbcolor gsave
fill grestore stroke grestore gsave false 1 0.0 0.0  gsave 1 1 1  setrgbcolor
currentrgbcolor grestore gsave 1 1 1  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1851 w(Conclusiones)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 14692 20346
a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 14692 20346 a @beginspecial 76 @llx 212 @lly 546 @urx
589 @ury 5220 @rwi @setspecial
%%BeginDocument: bacteria.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: B:\Mis archivos deTEX\Poster\bacteria.eps
%%CreationDate: 09/06/2004  17:23:26
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:    76   212   546   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    76   212   546   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  698   274  5645  4515 MR c np
85 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4227 5362 0 0 -4227 899 4616 4 MP
PP
-5362 0 0 4227 5362 0 0 -4227 899 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899  389 mt 6261  389 L
 899 4616 mt 6261 4616 L
6261 4616 mt 6261  389 L
 899 4616 mt  899  389 L
 899 4616 mt 6261 4616 L
 899 4616 mt  899  389 L
 899 4616 mt  899 4562 L
 899  389 mt  899  442 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 866 4761 mt 
(0) s
1435 4616 mt 1435 4562 L
1435  389 mt 1435  442 L
1352 4761 mt 
(0.1) s
1971 4616 mt 1971 4562 L
1971  389 mt 1971  442 L
1888 4761 mt 
(0.2) s
2507 4616 mt 2507 4562 L
2507  389 mt 2507  442 L
2424 4761 mt 
(0.3) s
3043 4616 mt 3043 4562 L
3043  389 mt 3043  442 L
2960 4761 mt 
(0.4) s
3580 4616 mt 3580 4562 L
3580  389 mt 3580  442 L
3497 4761 mt 
(0.5) s
4116 4616 mt 4116 4562 L
4116  389 mt 4116  442 L
4033 4761 mt 
(0.6) s
4652 4616 mt 4652 4562 L
4652  389 mt 4652  442 L
4569 4761 mt 
(0.7) s
5188 4616 mt 5188 4562 L
5188  389 mt 5188  442 L
5105 4761 mt 
(0.8) s
5724 4616 mt 5724 4562 L
5724  389 mt 5724  442 L
5641 4761 mt 
(0.9) s
6261 4616 mt 6261 4562 L
6261  389 mt 6261  442 L
6228 4761 mt 
(1) s
 899 4616 mt  952 4616 L
6261 4616 mt 6207 4616 L
 798 4660 mt 
(0) s
 899 4193 mt  952 4193 L
6261 4193 mt 6207 4193 L
 698 4237 mt 
(0.1) s
 899 3770 mt  952 3770 L
6261 3770 mt 6207 3770 L
 698 3814 mt 
(0.2) s
 899 3347 mt  952 3347 L
6261 3347 mt 6207 3347 L
 698 3391 mt 
(0.3) s
 899 2925 mt  952 2925 L
6261 2925 mt 6207 2925 L
 698 2969 mt 
(0.4) s
 899 2502 mt  952 2502 L
6261 2502 mt 6207 2502 L
 698 2546 mt 
(0.5) s
 899 2079 mt  952 2079 L
6261 2079 mt 6207 2079 L
 698 2123 mt 
(0.6) s
 899 1657 mt  952 1657 L
6261 1657 mt 6207 1657 L
 698 1701 mt 
(0.7) s
 899 1234 mt  952 1234 L
6261 1234 mt 6207 1234 L
 698 1278 mt 
(0.8) s
 899  811 mt  952  811 L
6261  811 mt 6207  811 L
 698  855 mt 
(0.9) s
 899  389 mt  952  389 L
6261  389 mt 6207  389 L
 798  433 mt 
(1) s
 899  389 mt 6261  389 L
 899 4616 mt 6261 4616 L
6261 4616 mt 6261  389 L
 899 4616 mt  899  389 L
gs 899 389 5363 4228 MR c np
/c8 { 0.000000 1.000000 1.000000 sr} bdef
c8
2879  389 mt 2884  455 L
2884  455 mt 2908  521 L
2908  521 mt 2909  523 L
2909  523 mt 2952  587 L
2952  587 mt 2966  603 L
3214  826 mt 3244  849 L
3244  849 mt 3246  851 L
3246  851 mt 3328  917 L
3328  917 mt 3328  917 L
3328  917 mt 3405  983 L
3405  983 mt 3412  990 L
3412  990 mt 3473 1049 L
3473 1049 mt 3496 1076 L
3496 1076 mt 3530 1115 L
3530 1115 mt 3573 1181 L
3573 1181 mt 3580 1192 L
3580 1192 mt 3613 1247 L
3613 1247 mt 3643 1313 L
3643 1313 mt 3663 1368 L
3663 1368 mt 3668 1379 L
3668 1379 mt 3696 1445 L
3696 1445 mt 3721 1511 L
3721 1511 mt 3745 1577 L
3745 1577 mt 3747 1583 L
3747 1583 mt 3776 1643 L
3776 1643 mt 3808 1709 L
3808 1709 mt 3831 1753 L
3831 1753 mt 3844 1775 L
3844 1775 mt 3888 1842 L
3888 1842 mt 3915 1878 L
3915 1878 mt 3940 1908 L
3940 1908 mt 3987 1958 L
4280 2097 mt 4334 2091 L
4334 2091 mt 4398 2040 L
4398 2040 mt 4417 1994 L
4417 1994 mt 4422 1974 L
4422 1974 mt 4419 1908 L
4419 1908 mt 4417 1899 L
4417 1899 mt 4401 1842 L
4401 1842 mt 4374 1775 L
4374 1775 mt 4343 1709 L
4343 1709 mt 4334 1691 L
4334 1691 mt 4303 1643 L
4303 1643 mt 4261 1577 L
4261 1577 mt 4250 1559 L
4250 1559 mt 4212 1511 L
4212 1511 mt 4166 1445 L
4166 1445 mt 4166 1445 L
4166 1445 mt 4111 1379 L
4111 1379 mt 4082 1339 L
4082 1339 mt 4059 1313 L
4059 1313 mt 4009 1247 L
4009 1247 mt 3998 1231 L
3998 1231 mt 3957 1181 L
3957 1181 mt 3918 1115 L
3918 1115 mt 3915 1108 L
3915 1108 mt 3877 1049 L
3877 1049 mt 3849  983 L
3849  983 mt 3841  956 L
3780  630 mt 3777  587 L
3777  587 mt 3775  521 L
3775  521 mt 3773  455 L
3773  455 mt 3773  389 L
/c9 { 0.126984 0.873016 1.000000 sr} bdef
c9
2028  389 mt 2031  455 L
2031  455 mt 2047  521 L
2047  521 mt 2071  574 L
2071  574 mt 2077  587 L
2077  587 mt 2098  620 L
2329  858 mt 2405  917 L
2405  917 mt 2407  918 L
2407  918 mt 2490  979 L
2490  979 mt 2496  983 L
2496  983 mt 2574 1037 L
2574 1037 mt 2591 1049 L
2591 1049 mt 2658 1096 L
2658 1096 mt 2684 1115 L
2684 1115 mt 2742 1157 L
2742 1157 mt 2773 1181 L
2773 1181 mt 2825 1222 L
2825 1222 mt 2856 1247 L
2856 1247 mt 2909 1292 L
2909 1292 mt 2932 1313 L
2932 1313 mt 2993 1370 L
2993 1370 mt 3002 1379 L
3002 1379 mt 3066 1445 L
3066 1445 mt 3077 1457 L
3077 1457 mt 3125 1511 L
3125 1511 mt 3161 1554 L
3161 1554 mt 3179 1577 L
3179 1577 mt 3231 1643 L
3231 1643 mt 3244 1660 L
3244 1660 mt 3281 1709 L
3281 1709 mt 3328 1773 L
3328 1773 mt 3330 1775 L
3330 1775 mt 3347 1798 L
3553 2060 mt 3580 2091 L
3580 2091 mt 3593 2106 L
3593 2106 mt 3656 2172 L
3656 2172 mt 3663 2179 L
3663 2179 mt 3726 2238 L
3726 2238 mt 3747 2257 L
3747 2257 mt 3804 2304 L
3804 2304 mt 3831 2325 L
3831 2325 mt 3894 2370 L
3894 2370 mt 3915 2384 L
3915 2384 mt 3998 2434 L
3998 2434 mt 4002 2436 L
4002 2436 mt 4082 2476 L
4082 2476 mt 4145 2502 L
4145 2502 mt 4166 2510 L
4166 2510 mt 4250 2537 L
4250 2537 mt 4334 2556 L
4334 2556 mt 4417 2567 L
4417 2567 mt 4441 2568 L
4441 2568 mt 4501 2570 L
4501 2570 mt 4525 2568 L
4525 2568 mt 4585 2563 L
4585 2563 mt 4669 2544 L
4669 2544 mt 4752 2513 L
4752 2513 mt 4773 2502 L
4773 2502 mt 4775 2500 L
4954 2235 mt 4955 2172 L
4955 2172 mt 4946 2106 L
4946 2106 mt 4931 2040 L
4931 2040 mt 4920 2006 L
4920 2006 mt 4909 1974 L
4909 1974 mt 4883 1908 L
4883 1908 mt 4854 1842 L
4854 1842 mt 4836 1805 L
4836 1805 mt 4821 1775 L
4821 1775 mt 4787 1709 L
4787 1709 mt 4752 1643 L
4752 1643 mt 4752 1643 L
4752 1643 mt 4715 1577 L
4715 1577 mt 4680 1511 L
4680 1511 mt 4669 1491 L
4669 1491 mt 4643 1445 L
4643 1445 mt 4607 1379 L
4607 1379 mt 4585 1335 L
4585 1335 mt 4573 1313 L
4573 1313 mt 4539 1247 L
4539 1247 mt 4508 1181 L
4508 1181 mt 4501 1164 L
4501 1164 mt 4478 1115 L
4478 1115 mt 4450 1049 L
4450 1049 mt 4426  983 L
4426  983 mt 4418  959 L
4337  637 mt 4334  609 L
4334  609 mt 4330  587 L
4330  587 mt 4324  521 L
4324  521 mt 4320  455 L
4320  455 mt 4319  389 L
/c10 { 0.253968 0.746032 1.000000 sr} bdef
c10
1302  389 mt 1307  455 L
1307  455 mt 1317  479 L
1317  479 mt 1332  521 L
1332  521 mt 1373  587 L
1373  587 mt 1383  597 L
1572  784 mt 1573  785 L
1573  785 mt 1653  848 L
1653  848 mt 1656  851 L
1656  851 mt 1736  910 L
1736  910 mt 1745  917 L
1745  917 mt 1820  968 L
1820  968 mt 1841  983 L
1841  983 mt 1904 1024 L
1904 1024 mt 1941 1049 L
1941 1049 mt 1988 1078 L
1988 1078 mt 2046 1115 L
2046 1115 mt 2071 1130 L
2071 1130 mt 2154 1181 L
2154 1181 mt 2155 1182 L
2155 1182 mt 2239 1233 L
2239 1233 mt 2262 1247 L
2262 1247 mt 2323 1285 L
2323 1285 mt 2367 1313 L
2367 1313 mt 2407 1339 L
2407 1339 mt 2467 1379 L
2467 1379 mt 2490 1395 L
2490 1395 mt 2562 1445 L
2562 1445 mt 2574 1454 L
2574 1454 mt 2649 1511 L
2649 1511 mt 2658 1518 L
2658 1518 mt 2730 1577 L
2730 1577 mt 2742 1587 L
2742 1587 mt 2773 1616 L
2964 1802 mt 2993 1833 L
2993 1833 mt 3001 1842 L
3001 1842 mt 3061 1908 L
3061 1908 mt 3077 1924 L
3077 1924 mt 3120 1974 L
3120 1974 mt 3161 2018 L
3161 2018 mt 3180 2040 L
3180 2040 mt 3240 2106 L
3240 2106 mt 3244 2111 L
3244 2111 mt 3301 2172 L
3301 2172 mt 3328 2200 L
3328 2200 mt 3365 2238 L
3365 2238 mt 3412 2284 L
3412 2284 mt 3433 2304 L
3433 2304 mt 3496 2362 L
3496 2362 mt 3505 2370 L
3505 2370 mt 3580 2434 L
3580 2434 mt 3582 2436 L
3582 2436 mt 3663 2499 L
3663 2499 mt 3668 2502 L
3668 2502 mt 3747 2557 L
3747 2557 mt 3763 2568 L
3763 2568 mt 3831 2610 L
3831 2610 mt 3873 2634 L
3873 2634 mt 3915 2657 L
3915 2657 mt 3998 2699 L
3998 2699 mt 4002 2700 L
4002 2700 mt 4075 2731 L
4329 2808 mt 4334 2809 L
4334 2809 mt 4417 2824 L
4417 2824 mt 4497 2832 L
4497 2832 mt 4501 2833 L
4501 2833 mt 4585 2835 L
4585 2835 mt 4669 2832 L
4669 2832 mt 4670 2832 L
4670 2832 mt 4752 2823 L
4752 2823 mt 4836 2806 L
4836 2806 mt 4920 2783 L
4920 2783 mt 4966 2766 L
4966 2766 mt 5004 2750 L
5004 2750 mt 5088 2708 L
5088 2708 mt 5101 2700 L
5101 2700 mt 5171 2650 L
5171 2650 mt 5191 2634 L
5191 2634 mt 5255 2568 L
5255 2568 mt 5255 2567 L
5255 2567 mt 5297 2502 L
5297 2502 mt 5324 2436 L
5324 2436 mt 5336 2370 L
5336 2370 mt 5337 2304 L
5337 2304 mt 5327 2238 L
5327 2238 mt 5310 2172 L
5310 2172 mt 5295 2130 L
5180 1890 mt 5171 1874 L
5171 1874 mt 5153 1842 L
5153 1842 mt 5116 1775 L
5116 1775 mt 5088 1727 L
5088 1727 mt 5077 1709 L
5077 1709 mt 5039 1643 L
5039 1643 mt 5004 1581 L
5004 1581 mt 5002 1577 L
5002 1577 mt 4964 1511 L
4964 1511 mt 4929 1445 L
4929 1445 mt 4920 1429 L
4920 1429 mt 4894 1379 L
4894 1379 mt 4861 1313 L
4861 1313 mt 4836 1261 L
4836 1261 mt 4830 1247 L
4830 1247 mt 4800 1181 L
4800 1181 mt 4773 1115 L
4773 1115 mt 4752 1061 L
4752 1061 mt 4748 1049 L
4748 1049 mt 4724  983 L
4724  983 mt 4704  917 L
4704  917 mt 4686  851 L
4686  851 mt 4670  785 L
4670  785 mt 4669  776 L
4669  776 mt 4657  719 L
4657  719 mt 4646  653 L
4646  653 mt 4638  587 L
4638  587 mt 4632  521 L
4632  521 mt 4629  455 L
4629  455 mt 4628  389 L
/c11 { 0.380952 0.619048 1.000000 sr} bdef
c11
1392 4616 mt 1390 4549 L
1390 4549 mt 1384 4500 L
1250 4200 mt 1234 4182 L
1234 4182 mt 1201 4153 L
1201 4153 mt 1150 4114 L
1150 4114 mt 1099 4087 L
1099 4087 mt 1066 4072 L
1066 4072 mt  982 4051 L
 982 4051 mt  899 4047 L
4883  389 mt 4884  455 L
4884  455 mt 4887  521 L
4887  521 mt 4887  528 L
4938  857 mt 4954  917 L
4954  917 mt 4974  983 L
4974  983 mt 4996 1049 L
4996 1049 mt 5004 1070 L
5004 1070 mt 5021 1115 L
5021 1115 mt 5048 1181 L
5048 1181 mt 5077 1247 L
5077 1247 mt 5088 1269 L
5088 1269 mt 5109 1313 L
5109 1313 mt 5143 1379 L
5143 1379 mt 5171 1430 L
5171 1430 mt 5180 1445 L
5180 1445 mt 5219 1511 L
5219 1511 mt 5255 1571 L
5255 1571 mt 5259 1577 L
5259 1577 mt 5303 1643 L
5303 1643 mt 5339 1698 L
5339 1698 mt 5347 1709 L
5347 1709 mt 5394 1775 L
5394 1775 mt 5423 1817 L
5423 1817 mt 5442 1842 L
5442 1842 mt 5490 1908 L
5490 1908 mt 5506 1930 L
5506 1930 mt 5540 1974 L
5540 1974 mt 5589 2040 L
5589 2040 mt 5590 2042 L
5590 2042 mt 5610 2068 L
5778 2354 mt 5784 2370 L
5784 2370 mt 5795 2436 L
5795 2436 mt 5787 2502 L
5787 2502 mt 5758 2568 L
5758 2568 mt 5758 2568 L
5758 2568 mt 5712 2634 L
5712 2634 mt 5674 2671 L
5674 2671 mt 5645 2700 L
5645 2700 mt 5590 2743 L
5590 2743 mt 5561 2766 L
5561 2766 mt 5506 2802 L
5506 2802 mt 5459 2832 L
5459 2832 mt 5423 2852 L
5423 2852 mt 5339 2895 L
5339 2895 mt 5333 2898 L
5333 2898 mt 5255 2933 L
5255 2933 mt 5174 2964 L
5174 2964 mt 5171 2965 L
5171 2965 mt 5088 2992 L
5088 2992 mt 5004 3015 L
5004 3015 mt 4933 3030 L
4933 3030 mt 4920 3033 L
4920 3033 mt 4836 3046 L
4836 3046 mt 4752 3054 L
4752 3054 mt 4728 3055 L
4396 3036 mt 4365 3030 L
4365 3030 mt 4334 3025 L
4334 3025 mt 4250 3005 L
4250 3005 mt 4166 2982 L
4166 2982 mt 4114 2964 L
4114 2964 mt 4082 2953 L
4082 2953 mt 3998 2921 L
3998 2921 mt 3945 2898 L
3945 2898 mt 3915 2885 L
3915 2885 mt 3831 2844 L
3831 2844 mt 3808 2832 L
3808 2832 mt 3747 2799 L
3747 2799 mt 3690 2766 L
3690 2766 mt 3663 2750 L
3663 2750 mt 3585 2700 L
3585 2700 mt 3580 2697 L
3580 2697 mt 3496 2639 L
3496 2639 mt 3489 2634 L
3489 2634 mt 3412 2576 L
3412 2576 mt 3401 2568 L
3401 2568 mt 3328 2509 L
3328 2509 mt 3319 2502 L
3319 2502 mt 3244 2438 L
3244 2438 mt 3242 2436 L
3242 2436 mt 3183 2383 L
2941 2155 mt 2909 2125 L
2909 2125 mt 2889 2106 L
2889 2106 mt 2825 2046 L
2825 2046 mt 2819 2040 L
2819 2040 mt 2747 1974 L
2747 1974 mt 2742 1969 L
2742 1969 mt 2671 1908 L
2671 1908 mt 2658 1896 L
2658 1896 mt 2591 1842 L
2591 1842 mt 2574 1828 L
2574 1828 mt 2506 1775 L
2506 1775 mt 2490 1764 L
2490 1764 mt 2414 1709 L
2414 1709 mt 2407 1704 L
2407 1704 mt 2323 1649 L
2323 1649 mt 2314 1643 L
2314 1643 mt 2239 1597 L
2239 1597 mt 2206 1577 L
2206 1577 mt 2155 1547 L
2155 1547 mt 2091 1511 L
2091 1511 mt 2071 1500 L
2071 1500 mt 1988 1455 L
1988 1455 mt 1970 1445 L
1970 1445 mt 1904 1411 L
1904 1411 mt 1842 1379 L
1842 1379 mt 1820 1368 L
1820 1368 mt 1802 1359 L
1501 1216 mt 1485 1209 L
1485 1209 mt 1417 1181 L
1417 1181 mt 1401 1174 L
1401 1174 mt 1317 1143 L
1317 1143 mt 1234 1116 L
1234 1116 mt 1229 1115 L
1229 1115 mt 1150 1094 L
1150 1094 mt 1066 1079 L
1066 1079 mt  982 1071 L
 982 1071 mt  899 1070 L
/c12 { 0.492063 0.507937 1.000000 sr} bdef
c12
1943 4616 mt 1943 4549 L
1943 4549 mt 1939 4483 L
1939 4483 mt 1932 4417 L
1932 4417 mt 1931 4414 L
1843 4094 mt 1841 4087 L
1841 4087 mt 1820 4043 L
1820 4043 mt 1809 4021 L
1809 4021 mt 1772 3955 L
1772 3955 mt 1736 3900 L
1736 3900 mt 1729 3889 L
1729 3889 mt 1677 3823 L
1677 3823 mt 1653 3794 L
1653 3794 mt 1618 3757 L
1618 3757 mt 1569 3709 L
1569 3709 mt 1548 3691 L
1548 3691 mt 1485 3639 L
1485 3639 mt 1465 3625 L
1465 3625 mt 1401 3582 L
1401 3582 mt 1361 3559 L
1361 3559 mt 1317 3535 L
1317 3535 mt 1234 3498 L
1234 3498 mt 1218 3493 L
1218 3493 mt 1150 3470 L
1150 3470 mt 1066 3451 L
1066 3451 mt  982 3440 L
 982 3440 mt  899 3438 L
5122  389 mt 5123  455 L
5123  455 mt 5125  521 L
5125  521 mt 5130  587 L
5130  587 mt 5138  653 L
5138  653 mt 5148  719 L
5148  719 mt 5160  785 L
5160  785 mt 5171  837 L
5171  837 mt 5174  851 L
5174  851 mt 5192  917 L
5192  917 mt 5212  983 L
5212  983 mt 5234 1049 L
5234 1049 mt 5255 1103 L
5255 1103 mt 5260 1115 L
5260 1115 mt 5289 1181 L
5289 1181 mt 5321 1247 L
5321 1247 mt 5339 1282 L
5339 1282 mt 5356 1313 L
5356 1313 mt 5394 1379 L
5394 1379 mt 5423 1424 L
5423 1424 mt 5437 1445 L
5437 1445 mt 5483 1511 L
5483 1511 mt 5506 1543 L
5506 1543 mt 5534 1577 L
5534 1577 mt 5568 1619 L
5808 1849 mt 5842 1876 L
5842 1876 mt 5892 1908 L
5892 1908 mt 5925 1930 L
5925 1930 mt 6009 1971 L
6009 1971 mt 6017 1974 L
6017 1974 mt 6093 2001 L
6093 2001 mt 6177 2017 L
6177 2017 mt 6261 2018 L
 899 1526 mt  982 1526 L
 982 1526 mt 1066 1532 L
1066 1532 mt 1121 1539 L
1445 1615 mt 1485 1628 L
1485 1628 mt 1530 1643 L
1530 1643 mt 1569 1657 L
1569 1657 mt 1653 1688 L
1653 1688 mt 1706 1709 L
1706 1709 mt 1736 1722 L
1736 1722 mt 1820 1757 L
1820 1757 mt 1861 1775 L
1861 1775 mt 1904 1795 L
1904 1795 mt 1988 1834 L
1988 1834 mt 2002 1842 L
2002 1842 mt 2071 1877 L
2071 1877 mt 2129 1908 L
2129 1908 mt 2155 1922 L
2155 1922 mt 2239 1970 L
2239 1970 mt 2245 1974 L
2245 1974 mt 2323 2021 L
2323 2021 mt 2350 2040 L
2350 2040 mt 2407 2077 L
2407 2077 mt 2448 2106 L
2448 2106 mt 2490 2135 L
2490 2135 mt 2539 2172 L
2539 2172 mt 2574 2197 L
2574 2197 mt 2626 2238 L
2626 2238 mt 2658 2262 L
2658 2262 mt 2668 2271 L
2927 2481 mt 2953 2502 L
2953 2502 mt 2993 2533 L
2993 2533 mt 3036 2568 L
3036 2568 mt 3077 2599 L
3077 2599 mt 3121 2634 L
3121 2634 mt 3161 2663 L
3161 2663 mt 3210 2700 L
3210 2700 mt 3244 2724 L
3244 2724 mt 3304 2766 L
3304 2766 mt 3328 2782 L
3328 2782 mt 3404 2832 L
3404 2832 mt 3412 2837 L
3412 2837 mt 3496 2889 L
3496 2889 mt 3511 2898 L
3511 2898 mt 3580 2938 L
3580 2938 mt 3628 2964 L
3628 2964 mt 3663 2983 L
3663 2983 mt 3747 3026 L
3747 3026 mt 3757 3030 L
3757 3030 mt 3831 3065 L
3831 3065 mt 3904 3096 L
3904 3096 mt 3915 3101 L
3915 3101 mt 3998 3134 L
3998 3134 mt 4079 3162 L
4079 3162 mt 4082 3164 L
4082 3164 mt 4127 3178 L
4451 3252 mt 4501 3258 L
4501 3258 mt 4585 3266 L
4585 3266 mt 4669 3269 L
4669 3269 mt 4752 3268 L
4752 3268 mt 4836 3263 L
4836 3263 mt 4920 3254 L
4920 3254 mt 5004 3242 L
5004 3242 mt 5072 3229 L
5072 3229 mt 5088 3226 L
5088 3226 mt 5171 3206 L
5171 3206 mt 5255 3184 L
5255 3184 mt 5327 3162 L
5327 3162 mt 5339 3159 L
5339 3159 mt 5423 3132 L
5423 3132 mt 5506 3103 L
5506 3103 mt 5526 3096 L
5526 3096 mt 5590 3073 L
5590 3073 mt 5674 3044 L
5674 3044 mt 5714 3030 L
5714 3030 mt 5758 3014 L
5758 3014 mt 5808 2998 L
6132 2921 mt 6177 2916 L
6177 2916 mt 6261 2915 L
/c13 { 0.634921 0.365079 1.000000 sr} bdef
c13
2322 4616 mt 2321 4549 L
2321 4549 mt 2319 4483 L
2319 4483 mt 2314 4417 L
2314 4417 mt 2308 4351 L
2308 4351 mt 2306 4342 L
2237 4017 mt 2216 3955 L
2216 3955 mt 2190 3889 L
2190 3889 mt 2162 3823 L
2162 3823 mt 2155 3810 L
2155 3810 mt 2129 3757 L
2129 3757 mt 2092 3691 L
2092 3691 mt 2071 3656 L
2071 3656 mt 2052 3625 L
2052 3625 mt 2006 3559 L
2006 3559 mt 1988 3533 L
1988 3533 mt 1956 3493 L
1956 3493 mt 1904 3429 L
1904 3429 mt 1902 3427 L
1902 3427 mt 1842 3361 L
1842 3361 mt 1820 3338 L
1820 3338 mt 1776 3295 L
1776 3295 mt 1736 3256 L
1736 3256 mt 1705 3229 L
1705 3229 mt 1653 3183 L
1653 3183 mt 1627 3162 L
1627 3162 mt 1569 3116 L
1569 3116 mt 1541 3096 L
1541 3096 mt 1485 3056 L
1485 3056 mt 1444 3030 L
1444 3030 mt 1401 3002 L
1401 3002 mt 1354 2976 L
1044 2860 mt  982 2851 L
 982 2851 mt  899 2849 L
5370  389 mt 5370  455 L
5370  455 mt 5373  521 L
5373  521 mt 5378  587 L
5378  587 mt 5386  653 L
5386  653 mt 5396  719 L
5396  719 mt 5409  785 L
5409  785 mt 5423  845 L
5423  845 mt 5424  851 L
5424  851 mt 5443  917 L
5443  917 mt 5466  983 L
5466  983 mt 5491 1049 L
5491 1049 mt 5506 1085 L
5506 1085 mt 5521 1115 L
5521 1115 mt 5555 1181 L
5555 1181 mt 5590 1243 L
5590 1243 mt 5593 1247 L
5593 1247 mt 5639 1313 L
5639 1313 mt 5656 1336 L
5897 1563 mt 5917 1577 L
5917 1577 mt 5925 1583 L
5925 1583 mt 6009 1625 L
6009 1625 mt 6064 1643 L
6064 1643 mt 6093 1653 L
6093 1653 mt 6177 1668 L
6177 1668 mt 6261 1669 L
 899 2155 mt  982 2155 L
 982 2155 mt 1066 2156 L
1066 2156 mt 1150 2159 L
1150 2159 mt 1234 2163 L
1234 2163 mt 1317 2168 L
1317 2168 mt 1359 2172 L
1359 2172 mt 1401 2176 L
1401 2176 mt 1485 2186 L
1485 2186 mt 1569 2199 L
1569 2199 mt 1653 2214 L
1653 2214 mt 1736 2231 L
1736 2231 mt 1762 2238 L
1762 2238 mt 1820 2253 L
1820 2253 mt 1904 2277 L
1904 2277 mt 1985 2304 L
1985 2304 mt 1988 2305 L
1988 2305 mt 2071 2337 L
2071 2337 mt 2150 2370 L
2150 2370 mt 2155 2372 L
2155 2372 mt 2239 2412 L
2239 2412 mt 2245 2415 L
2536 2577 mt 2574 2601 L
2574 2601 mt 2627 2634 L
2627 2634 mt 2658 2653 L
2658 2653 mt 2731 2700 L
2731 2700 mt 2742 2707 L
2742 2707 mt 2825 2760 L
2825 2760 mt 2834 2766 L
2834 2766 mt 2909 2814 L
2909 2814 mt 2938 2832 L
2938 2832 mt 2993 2866 L
2993 2866 mt 3046 2898 L
3046 2898 mt 3077 2916 L
3077 2916 mt 3159 2964 L
3159 2964 mt 3161 2965 L
3161 2965 mt 3244 3013 L
3244 3013 mt 3275 3030 L
3275 3030 mt 3328 3059 L
3328 3059 mt 3400 3096 L
3400 3096 mt 3412 3103 L
3412 3103 mt 3496 3145 L
3496 3145 mt 3532 3162 L
3532 3162 mt 3580 3185 L
3580 3185 mt 3663 3223 L
3663 3223 mt 3675 3229 L
3675 3229 mt 3747 3260 L
3747 3260 mt 3751 3261 L
4063 3378 mt 4082 3384 L
4082 3384 mt 4166 3409 L
4166 3409 mt 4235 3427 L
4235 3427 mt 4250 3431 L
4250 3431 mt 4334 3450 L
4334 3450 mt 4417 3465 L
4417 3465 mt 4501 3477 L
4501 3477 mt 4585 3484 L
4585 3484 mt 4669 3489 L
4669 3489 mt 4752 3489 L
4752 3489 mt 4836 3485 L
4836 3485 mt 4920 3478 L
4920 3478 mt 5004 3468 L
5004 3468 mt 5088 3454 L
5088 3454 mt 5171 3437 L
5171 3437 mt 5219 3427 L
5219 3427 mt 5255 3418 L
5255 3418 mt 5339 3398 L
5339 3398 mt 5423 3375 L
5423 3375 mt 5435 3372 L
5757 3286 mt 5758 3286 L
5758 3286 mt 5842 3266 L
5842 3266 mt 5925 3249 L
5925 3249 mt 6009 3236 L
6009 3236 mt 6072 3229 L
6072 3229 mt 6093 3226 L
6093 3226 mt 6177 3220 L
6177 3220 mt 6261 3219 L
/c14 { 0.761905 0.238095 1.000000 sr} bdef
c14
2674 4616 mt 2674 4549 L
2674 4549 mt 2673 4483 L
2673 4483 mt 2671 4417 L
2671 4417 mt 2668 4351 L
2668 4351 mt 2664 4285 L
2664 4285 mt 2659 4219 L
2659 4219 mt 2658 4200 L
2658 4200 mt 2654 4153 L
2654 4153 mt 2648 4087 L
2648 4087 mt 2641 4021 L
2641 4021 mt 2640 4016 L
2599 3686 mt 2592 3625 L
2592 3625 mt 2587 3559 L
2587 3559 mt 2587 3493 L
2587 3493 mt 2593 3427 L
2593 3427 mt 2616 3361 L
2616 3361 mt 2658 3308 L
2658 3308 mt 2681 3295 L
2681 3295 mt 2742 3274 L
2742 3274 mt 2825 3268 L
2825 3268 mt 2909 3274 L
2909 3274 mt 2993 3289 L
2993 3289 mt 3017 3295 L
3017 3295 mt 3077 3308 L
3077 3308 mt 3161 3331 L
3161 3331 mt 3244 3356 L
3244 3356 mt 3258 3361 L
3258 3361 mt 3328 3383 L
3328 3383 mt 3412 3411 L
3412 3411 mt 3456 3427 L
3456 3427 mt 3496 3440 L
3496 3440 mt 3580 3470 L
3580 3470 mt 3618 3484 L
3933 3592 mt 3998 3613 L
3998 3613 mt 4037 3625 L
4037 3625 mt 4082 3639 L
4082 3639 mt 4166 3663 L
4166 3663 mt 4250 3684 L
4250 3684 mt 4283 3691 L
4283 3691 mt 4334 3702 L
4334 3702 mt 4417 3718 L
4417 3718 mt 4501 3730 L
4501 3730 mt 4585 3739 L
4585 3739 mt 4669 3743 L
4669 3743 mt 4752 3744 L
4752 3744 mt 4836 3740 L
4836 3740 mt 4920 3733 L
4920 3733 mt 5004 3722 L
5004 3722 mt 5088 3708 L
5088 3708 mt 5171 3691 L
5171 3691 mt 5172 3691 L
5172 3691 mt 5255 3672 L
5255 3672 mt 5304 3660 L
5627 3577 mt 5674 3565 L
5674 3565 mt 5700 3559 L
5700 3559 mt 5758 3546 L
5758 3546 mt 5842 3528 L
5842 3528 mt 5925 3513 L
5925 3513 mt 6009 3501 L
6009 3501 mt 6092 3493 L
6092 3493 mt 6093 3493 L
6093 3493 mt 6177 3488 L
6177 3488 mt 6261 3487 L
5664  389 mt 5665  455 L
5665  455 mt 5668  521 L
5668  521 mt 5674  583 L
5674  583 mt 5674  587 L
5674  587 mt 5684  653 L
5684  653 mt 5697  719 L
5697  719 mt 5714  785 L
5714  785 mt 5721  808 L
5871 1103 mt 5880 1115 L
5880 1115 mt 5925 1165 L
5925 1165 mt 5944 1181 L
5944 1181 mt 6009 1231 L
6009 1231 mt 6040 1247 L
6040 1247 mt 6093 1273 L
6093 1273 mt 6177 1294 L
6177 1294 mt 6261 1296 L
/c15 { 0.888889 0.111111 1.000000 sr} bdef
c15
3085 4616 mt 3086 4549 L
3086 4549 mt 3087 4517 L
3103 4318 mt 3107 4285 L
3107 4285 mt 3119 4219 L
3119 4219 mt 3134 4153 L
3134 4153 mt 3156 4087 L
3156 4087 mt 3161 4076 L
3161 4076 mt 3191 4021 L
3191 4021 mt 3243 3955 L
3243 3955 mt 3244 3953 L
3244 3953 mt 3328 3901 L
3328 3901 mt 3365 3889 L
3365 3889 mt 3412 3877 L
3412 3877 mt 3496 3870 L
3496 3870 mt 3580 3874 L
3580 3874 mt 3663 3884 L
3663 3884 mt 3687 3889 L
3687 3889 mt 3747 3901 L
3747 3901 mt 3831 3921 L
3831 3921 mt 3915 3942 L
3915 3942 mt 3962 3955 L
3962 3955 mt 3998 3966 L
3998 3966 mt 4082 3990 L
4082 3990 mt 4166 4013 L
4166 4013 mt 4195 4021 L
4195 4021 mt 4250 4036 L
4250 4036 mt 4333 4057 L
4530 4092 mt 4585 4099 L
4585 4099 mt 4669 4104 L
4669 4104 mt 4752 4103 L
4752 4103 mt 4836 4097 L
4836 4097 mt 4903 4087 L
4903 4087 mt 4920 4085 L
4920 4085 mt 5004 4070 L
5004 4070 mt 5088 4050 L
5088 4050 mt 5171 4026 L
5171 4026 mt 5188 4021 L
5188 4021 mt 5255 4002 L
5255 4002 mt 5339 3975 L
5339 3975 mt 5398 3955 L
5398 3955 mt 5423 3947 L
5423 3947 mt 5506 3921 L
5506 3921 mt 5590 3894 L
5590 3894 mt 5607 3889 L
5607 3889 mt 5674 3870 L
5674 3870 mt 5758 3848 L
5758 3848 mt 5842 3828 L
5842 3828 mt 5865 3823 L
5865 3823 mt 5925 3811 L
5925 3811 mt 6009 3799 L
6009 3799 mt 6093 3790 L
6093 3790 mt 6177 3785 L
6177 3785 mt 6261 3784 L
/c16 { 1.000000 0.000000 1.000000 sr} bdef
c16
5638 4616 mt 5644 4549 L
5644 4549 mt 5674 4484 L
5674 4484 mt 5674 4483 L
5674 4483 mt 5731 4418 L
6025 4268 mt 6093 4253 L
6093 4253 mt 6177 4242 L
6177 4242 mt 6261 4240 L
0 sg
2948  650 mt  -318 rotate
(0.486) s
318 rotate
3974 2016 mt  -334 rotate
(0.486) s
334 rotate
3736  655 mt  -280 rotate
(0.486) s
280 rotate
2075  665 mt  -313 rotate
(0.488) s
313 rotate
3324 1839 mt  -308 rotate
(0.488) s
308 rotate
4833 2526 mt  -56 rotate
(0.488) s
56 rotate
4296  665 mt  -284 rotate
(0.488) s
284 rotate
1363  641 mt  -315 rotate
(0.49) s
315 rotate
2758 1657 mt  -315 rotate
(0.49) s
315 rotate
4078 2778 mt  -343 rotate
(0.49) s
343 rotate
5152 1922 mt  -295 rotate
(0.49) s
295 rotate
1229 4226 mt  -294 rotate
(0.492) s
294 rotate
4845  552 mt  -278 rotate
(0.492) s
278 rotate
5588 2101 mt  -300 rotate
(0.492) s
300 rotate
4411 3083 mt  -356 rotate
(0.492) s
356 rotate
2924 2198 mt  -316 rotate
(0.492) s
316 rotate
1499 1260 mt  -334 rotate
(0.492) s
334 rotate
1813 4120 mt  -285 rotate
(0.494) s
285 rotate
5548 1665 mt  -316 rotate
(0.494) s
316 rotate
1129 1581 mt  -346 rotate
(0.494) s
346 rotate
2656 2315 mt  -320 rotate
(0.494) s
320 rotate
4133 3226 mt  -347 rotate
(0.494) s
347 rotate
5834 3030 mt  -13 rotate
(0.494) s
13 rotate
2203 4042 mt  -282 rotate
(0.496) s
282 rotate
1047 2899 mt  -339 rotate
(0.496) s
339 rotate
5634 1383 mt  -316 rotate
(0.496) s
316 rotate
2240 2458 mt  -330 rotate
(0.496) s
330 rotate
3752 3308 mt  -339 rotate
(0.496) s
339 rotate
5463 3407 mt  -15 rotate
(0.496) s
15 rotate
2560 3708 mt  -277 rotate
(0.498) s
277 rotate
3621 3529 mt  -340 rotate
(0.498) s
340 rotate
5332 3697 mt  -14 rotate
(0.498) s
14 rotate
5684  846 mt  -296 rotate
(0.498) s
296 rotate
3129 4504 mt  -85 rotate
(0.5) s
85 rotate
4342 4103 mt  -349 rotate
(0.5) s
349 rotate
5760 4439 mt  -27 rotate
(0.502) s
27 rotate
gr


end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 19043 20346 a
 currentpoint grestore moveto
 19043 20346 a 0 TeXcolorgray
0 TeXcolorgray 14206 20896 a Fa(Figura)130 b Fo(1:)f(Densidad)f(de)g
(bacterias)h(en)g(un)f(cuadrado)f(con)i(los)14206 21145
y(par\023)-95 b(ametros)62 b(Lam)-5 b(b)5 b(da=300,)60
b(e=.001)h(y)h(delta=10)13999 21796 y(AAA)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
